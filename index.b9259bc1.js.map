{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/helpers/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Eye.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/string_art_types/Flower.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/TimesTables.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Circles.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/Serialize.js","src/scripts/share.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / (colorCount - 1)\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    if (!colorCount) {\n      throw new Error(\"Can't get color map, no colorCount provided!\");\n    }\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {} }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: controls,\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const PI2 = Math.PI * 2;\nconst NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(canvas, config) {\n    this.context = canvas.getContext('2d');\n    this.setConfig(config);\n    this.centerX = canvas.width / 2;\n    this.nails = [];\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    this.nails.push(nail);\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.beginPath();\n    this.context.fillStyle = this.nailsColor;\n    this.context.textBaseline = 'middle';\n    this.context.font = `${this.nailNumbersFontSize}px sans-serif`;\n    const nailNumberOffset = this.nailRadius + NUMBER_MARGIN;\n\n    this.nails.forEach(({ point: [x, y], number }) => {\n      this.context.moveTo(x + this.nailRadius, y);\n      this.context.arc(x, y, this.nailRadius, 0, PI2);\n      if (drawNumbers && number !== undefined && number !== null) {\n        const isRightAlign = x < this.centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.context.textAlign = isRightAlign ? 'right' : 'left';\n        this.context.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.context.fill();\n    this.nails = [];\n  }\n}\n","import Nails from './Nails.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.1 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(canvas) {\n    if (!canvas) {\n      throw new Error('Canvas not specified!');\n    }\n\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = Object.freeze(\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\n      );\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  getSize() {\n    const canvasScreenSize = [\n      this.canvas.clientWidth,\n      this.canvas.clientHeight,\n    ];\n    return canvasScreenSize.map(v => v * this.pixelRatio);\n  }\n\n  setUpDraw() {\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.center = this.size.map(value => value / 2);\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.canvas, this.config);\n    }\n\n    this.ctx.clearRect(0, 0, ...this.size);\n    this.ctx.lineWidth = this.config.stringWidth;\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    this.ctx.beginPath();\n    if (enableBackground) {\n      this.ctx.globalCompositeOperation = 'destination-over';\n      this.ctx.fillStyle = customBackgroundColor\n        ? backgroundColor\n        : darkMode\n        ? COLORS.dark\n        : COLORS.light;\n      this.ctx.fillRect(0, 0, ...this.size);\n    }\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art on canvas\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","import Nails from '../Nails.js';\n\nconst PI2 = Math.PI * 2;\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const realIndex = this.isReverse ? this.config.n - 1 - index : index;\n\n    const point = [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const props = {\n        center,\n        radius: radius ?? Math.min(...center) - margin,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n    ].join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 6,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount, repetition } = this.config;\n    this.layersCount = layers ?? 1;\n    this.realRepetition = repetition * 2 - 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.ctx.strokeStyle = color;\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      prevPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength + 1\n        : prevPointIndex + currentInnerLength;\n\n      if (repetitionCount === this.realRepetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n        prevPointIndex++;\n      } else {\n        repetitionCount++;\n      }\n\nconsole.log(\"GO TO \" + prevPointIndex)\n      prevPoint = this.circle.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n\n      this.ctx.stroke();\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return Math.round(layers * n * (innerLength * 2) * repetition);\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n    const PI2 = Math.PI * 2;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.ctx.beginPath();\n    this.ctx.moveTo(...this.center);\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    let lastPoint;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      if (lastPoint) {\n        this.ctx.moveTo(...lastPoint);\n        this.ctx.lineTo(...point);\n      }\n      lastPoint = point;\n      this.ctx.stroke();\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(\n        ...this.getPoint({ side, index: i, rotation, ...sideProps })\n      );\n      this.ctx.lineTo(\n        ...this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize =\n      Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","const PI2 = Math.PI * 2;\n\nexport default class Polygon {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        size: configSize,\n        margin,\n        rotation = 0,\n        sides: sideCount,\n      } = (this.config = config);\n\n      const sideAngle = PI2 / sideCount;\n\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\n        const angle = sideAngle * i + PI2 * rotation;\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\n\n        return {\n          cos: Math.cos(angle),\n          sin: Math.sin(angle),\n          center: {\n            cos: Math.cos(radiusAngle),\n            sin: Math.sin(radiusAngle),\n          },\n        };\n      });\n\n      Object.assign(this, {\n        sides,\n        sideCount,\n        sideAngle,\n      });\n\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n\n      Object.assign(this, this._getProps());\n\n      if (config.fitSize) {\n        const boundingRect = this.getBoundingRect();\n        const scale = Math.min(\n          (configSize[0] - 2 * margin) / boundingRect.width,\n          (configSize[1] - 2 * margin) / boundingRect.height\n        );\n\n        const size = configSize.map(v => v * scale);\n        const center = [\n          this.center[0] -\n            (scale * (boundingRect.left - configSize[0] + boundingRect.right)) /\n              2,\n          this.center[1] -\n            (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) /\n              2,\n        ];\n        Object.assign(this, this._getProps({ size, center }));\n\n        this.points.clear();\n      }\n    }\n  }\n\n  _getProps(overrideConfig) {\n    const {\n      nailsSpacing,\n      size,\n      margin = 0,\n      center: configCenter,\n    } = Object.assign({}, this.config, overrideConfig);\n\n    const center = configCenter ?? this.config.size.map(v => v / 2);\n\n    const radius = Math.min(...size) / 2 - margin;\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\n    const start = [\n      radius * Math.sin(this.sideAngle / 2),\n      radius * Math.cos(this.sideAngle / 2),\n    ];\n    const nailsDistance = sideSize * nailsSpacing;\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\n    const radiusNailsDistance = radius / radiusNailsCount;\n\n    return {\n      nailsSpacing,\n      nailsPerSide: 1 / nailsSpacing,\n      center,\n      radius,\n      sideSize,\n      start,\n      nailsDistance,\n      radiusNailsCount,\n      radiusNailsDistance,\n    };\n  }\n\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\n      '_'\n    );\n  }\n\n  getSidePoint({ side, index }) {\n    const pointsMapIndex = [side, index].join('_');\n\n    if (this.points.has(pointsMapIndex)) {\n      return this.points.get(pointsMapIndex);\n    }\n\n    const startX = this.start[0] - index * this.nailsDistance;\n    const { cos, sin } = this.sides[side];\n\n    const point = [\n      cos * startX - sin * this.start[1] + this.center[0],\n      sin * startX + cos * this.start[1] + this.center[1],\n    ];\n\n    this.points.set(pointsMapIndex, point);\n    return point;\n  }\n\n  getCenterPoint({ side, index }) {\n    const radius = index * this.radiusNailsDistance;\n    const { sin, cos } = this.sides[side].center;\n\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\n  }\n\n  getBoundingRect() {\n    const points = this.sides.map((_, side) =>\n      this.getSidePoint({ side, index: 0 })\n    );\n    const firstPoint = points[0];\n\n    const boundingRect = points.slice(1).reduce(\n      (boundingRect, [x, y]) => ({\n        left: Math.min(boundingRect.left, x),\n        right: Math.max(boundingRect.right, x),\n        top: Math.min(boundingRect.top, y),\n        bottom: Math.max(boundingRect.bottom, y),\n      }),\n      {\n        left: firstPoint[0],\n        right: firstPoint[0],\n        top: firstPoint[1],\n        bottom: firstPoint[1],\n      }\n    );\n\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\n    boundingRect.width = boundingRect.right - boundingRect.left;\n    Object.freeze(boundingRect);\n    return boundingRect;\n  }\n\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\n    for (let side = 0; side < this.sideCount; side++) {\n      const sideIndexStart = side * this.nailsPerSide;\n\n      if (drawSides) {\n        for (let index = 0; index < this.nailsPerSide; index++) {\n          nails.addNail({\n            point: this.getSidePoint({ side, index }),\n            number: sideIndexStart + index,\n          });\n        }\n      }\n\n      if (drawCenter) {\n        for (let index = 0; index < this.radiusNailsCount; index++) {\n          nails.addNail({\n            point: this.getCenterPoint({ side, index }),\n            number: `${side}_${index}`,\n          });\n        }\n      }\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 1,\n    multicolorStart: 0,\n    multicolorByLightness: true,\n    minLightness: 20,\n    maxLightness: 50,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class PolygonPattern extends StringArt {\n  name = 'Polygon';\n  id = 'polygon';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'bezier',\n      label: 'Bezier',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 4,\n        step: 1,\n      },\n      show: ({ sides }) => sides > 4,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#5c5c5c',\n    nailRadius: 1,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const polygonConfig = {\n      sides,\n      rotation,\n      margin,\n      size,\n      nailsSpacing: 1 / n,\n      fitSize: true,\n    };\n\n    if (this.polygon) {\n      this.polygon.setConfig(polygonConfig);\n    } else {\n      this.polygon = new Polygon(polygonConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: sides,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: sides,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier } = this.config;\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let side = 0; side < sides; side++) {\n      const nextSide = (side + limitedBezier) % sides;\n\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\n        if (this.colorMap) {\n          color = this.colorMap.get(step);\n        }\n\n        this.ctx.strokeStyle = color;\n        this.ctx.beginPath();\n        this.ctx.moveTo(...this.polygon.getSidePoint({ side, index }));\n        this.ctx.lineTo(\n          ...this.polygon.getSidePoint({ side: nextSide, index })\n        );\n\n        this.ctx.stroke();\n\n        yield;\n        step++;\n      }\n    }\n  }\n\n  getStepCount() {\n    const { sides, n } = this.config;\n    return sides * n;\n  }\n\n  drawNails() {\n    this.polygon.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 264,\n    multicolorStart: 53,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class Flower extends StringArt {\n  name = 'Flower';\n  id = 'flower';\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\n  controls = [\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#29f1ff',\n    nailRadius: 1,\n    stringWidth: 0.5,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const layerAngleShift = 1 / (sides * layers);\n\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\n      const polygonConfig = {\n        sides,\n        rotation: rotation + i * layerAngleShift,\n        margin,\n        size,\n        nailsSpacing: 1 / n,\n      };\n\n      return new Polygon(polygonConfig);\n    });\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: layers,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: layers,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier, layers } = this.config;\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const polygon = this.polygons[layer];\n\n      for (let side = 0; side < sides; side++) {\n        const leftSide = side === sides - 1 ? 0 : side + 1;\n\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\n          if (this.colorMap) {\n            color = this.colorMap.get(step);\n          }\n\n          const centerIndexes = this.getCenterIndexes({\n            polygon,\n            sideIndex: index,\n          });\n\n          this.ctx.strokeStyle = color;\n          this.ctx.beginPath();\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: side,\n              index: centerIndexes[0],\n            })\n          );\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: leftSide,\n              index: centerIndexes[1],\n            })\n          );\n\n          this.ctx.stroke();\n\n          yield;\n          step++;\n        }\n      }\n    }\n  }\n\n  getCenterIndexes({ polygon, sideIndex }) {\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\n\n    return [\n      sideIndex < extraNailCount\n        ? -extraNailCount + sideIndex\n        : sideIndex - extraNailCount,\n      polygon.radiusNailsCount - sideIndex,\n    ];\n  }\n\n  getStepCount() {\n    const { sides, n, layers } = this.config;\n    return sides * (n + 1) * layers;\n  }\n\n  drawNails() {\n    this.polygons.forEach(polygon =>\n      polygon.drawNails(this.nails, { drawCenter: true })\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport TimesTables from './string_art_types/TimesTables.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Circles from './string_art_types/Circles.js';\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\nimport Flower from './string_art_types/Flower.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  TimesTables,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Circles,\n  PolygonPattern,\n  Flower,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0 } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails } = this.config;\n\n    this.ctx.strokeStyle = innerColor;\n    let prevPoint;\n\n    for (const { prevSide, sideIndex, point } of this.generateStarPoints()) {\n      this.ctx.beginPath();\n\n      if (sideIndex && !(sideIndex % 2)) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...point);\n      } else {\n        this.ctx.moveTo(...point);\n      }\n\n      const prevSideIndex = sideNails - sideIndex;\n      this.ctx.lineTo(\n        ...this.getStarPoint({ side: prevSide, sideIndex: prevSideIndex })\n      );\n      prevPoint = point;\n      this.ctx.stroke();\n      yield;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor } = this.config;\n\n    let prevCirclePoint;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = outterColor;\n    for (const { side, prevSide, sideIndex, point } of this.generateStarPoints({\n      reverseOrder: true,\n    })) {\n      this.ctx.beginPath();\n      if (!prevCirclePoint) {\n        prevCirclePoint = this.circle.getPoint(\n          this.sides[prevSide].circlePointsStart\n        );\n      }\n\n      this.ctx.moveTo(...prevCirclePoint);\n\n      this.ctx.lineTo(...point);\n      this.ctx.stroke();\n\n      yield;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      const nextPointIndex = isPrevSide\n        ? this.sides[prevSide].circlePointsEnd - sideIndex\n        : this.sides[side].circlePointsStart + sideIndex;\n\n      const nextPoint = this.circle.getPoint(nextPointIndex);\n      this.ctx.lineTo(...nextPoint);\n\n      prevCirclePoint = this.circle.getPoint(\n        isPrevSide\n          ? this.sides[prevSide].circlePointsEnd - sideIndex + 1\n          : this.sides[side].circlePointsStart + sideIndex - 1\n      );\n\n      this.ctx.lineTo(...prevCirclePoint);\n\n      this.ctx.stroke();\n      isPrevSide = !isPrevSide;\n      yield;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails } = this.config;\n    const starCount = sideNails * sides;\n    return starCount * 3; // Once for each side + two more times for the side's circle\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size1',\n              label: 'Size',\n              defaultValue: 0.25,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size1, n }) => Math.round(n * size1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'end1',\n              label: 'End Position',\n              defaultValue: 1,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end1, n }) => Math.round(n * end1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'color1',\n              label: 'Color',\n              defaultValue: '#a94fb0',\n              type: 'color',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size2',\n              label: 'Size',\n              defaultValue: 0.125,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size2, n }) => Math.round(n * size2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'end2',\n              label: 'End Position',\n              defaultValue: 0.888,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'color2',\n              label: 'Color',\n              defaultValue: '#ec6ad0',\n              type: 'color',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size3',\n              label: 'Size',\n              defaultValue: 0,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size3, n }) => Math.round(n * size3),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'end3',\n              label: 'End Position',\n              defaultValue: 0.826,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'color3',\n              label: 'Color',\n              defaultValue: '#f08ad5',\n              type: 'color',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: true,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = color;\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      this.ctx.beginPath();\n\n      if (prevPoint) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...this.getPoint(prevPointIndex + advance));\n      } else {\n        this.ctx.moveTo(...this.getPoint(getPointIndex(index)));\n      }\n\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      prevPoint = this.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class TimesTables extends StringArt {\n  name = 'Times Tables';\n  id = 'times_tables';\n  link =\n    'https://www.youtube.com/watch?v=LWin7w9hF-E&ab_channel=Jorgedelatierra';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, margin } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', steps, time }) {\n    const { base } = this.config;\n    const n = this.n;\n    const stepsToRender = steps ?? n;\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= stepsToRender; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      point = this.circle.getPoint(i + shift);\n      this.ctx.lineTo(...point);\n      const toIndex = (i * base) % n;\n      this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    return this.config.layers * this.n;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport Circle from '../helpers/Circle.js';\nimport Spiral from './Spiral.js';\n\nexport default class Wave extends Spiral {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 144,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 0.075,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n  }\n\n  *generateStrings() {\n    for (let layer = 0; layer < this.layersCount; layer++) {\n      yield* this.drawSpiral({\n        color: this.color.getColor(layer),\n        shift: -this.layerShift * layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 40,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Circles extends StringArt {\n  name = 'Circles';\n  id = 'circles';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.ctx.strokeStyle = color;\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        this.ctx.beginPath();\n        this.ctx.moveTo(...(prevCirclePoint ?? this.getPoint(layer, i)));\n\n        if (layerIndex === 0 && i) {\n          this.ctx.lineTo(...this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n        this.ctx.lineTo(...prevCirclePoint);\n        this.ctx.stroke();\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd(e) {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      this.currentInputRange.value = this.currentInputRangeValue;\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll(e) {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.config = Object.freeze({\n      ...this.pattern.config,\n      [controlKey]: inputValue,\n    });\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","export function serializeConfig(pattern) {\n    const {defaultConfig, config} = pattern;\n\n    const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\n        if (value === defaultConfig[key]) {\n            return null;\n        }\n\n        if (typeof(value) === \"boolean\") {\n            return `!${value ? 1 : 0}`;\n        }\n\n        return value;\n    });\n\n    while(nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\n        nonDefaultConfigValues.pop();\n    }\n\n    if (!nonDefaultConfigValues.length) {\n        return '';\n    }\n\n    const serializedConfigValues = nonDefaultConfigValues.join(\"_\").replace(/\\_{2,}/g, match => '~' + match.length + '_');\n    return serializedConfigValues;\n}\n\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\nconst booleanRegExp = /^(?:!)([01])$/;\n\nexport function deserializeConfig(pattern, serializedCofig) {\n    const serializedConfigValues = serializedCofig\n        .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) => new Array(+commaCount).fill('_').join(\"\"))\n        .split('_')\n        .map(v => {\n            if (v === '') {\n                return null;\n            }\n\n            if (numberRegExp.test(v)) {\n                return parseFloat(v);\n            }\n\n            const booleanMatch = v.match(booleanRegExp);\n            if (booleanMatch) {\n                return booleanMatch[1] === '1';\n            }\n\n            return v;\n        });\n\n    const configKeys = Object.keys(pattern.defaultConfig);\n\n    return serializedConfigValues.reduce((config, serializedValue, i) => {\n        if (serializedValue !== null) {\n            const key = configKeys[i];\n            return { ...config, [key]: serializedValue};\n        }\n\n        return config;\n    }, {});\n}\n","export async function share(input) {\n  try {\n    navigator.share(await getShareData(input));\n  } catch (error) {\n    alert('Error: ' + error.message);\n  }\n}\n\nexport async function isShareSupported(input) {\n  if (!navigator.share) {\n    return false;\n  }\n\n  const shareData = await getShareData(input);\n  return navigator.canShare(shareData);\n}\n\nasync function getShareData({ canvas, pattern }) {\n  const dataUrl = canvas.toDataURL();\n  const blob = await (await fetch(dataUrl)).blob();\n  const files = [\n    new File([blob], pattern.name + '.jpg', {\n      type: blob.type,\n      lastModified: new Date().getTime(),\n    }),\n  ];\n  return {\n    url: window.location.href,\n    files,\n    title: document.title,\n    text: 'String Art Studio - ' + pattern.name,\n  };\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\nimport { deserializeConfig, serializeConfig } from './Serialize.js';\nimport { isShareSupported, share } from './share.js';\n\nwindow.addEventListener('error', function (event) {\n  alert('Error: ' + event.message);\n});\n\nconst elements = {\n  canvas: document.querySelector('canvas'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  shareBtn: document.querySelector('#share_btn'),\n  buttons: document.querySelector('#buttons'),\n  instructionsLink: document.querySelector(\n    '#pattern_select_dropdown_instructions'\n  ),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\n\nwindow.addEventListener('load', main);\n\nfunction main() {\n  initRouting();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  unHide(document.querySelector('main'));\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      thumbnails.toggle();\n    }\n  }\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  elements.shareBtn.addEventListener(\n    'click',\n    async () =>\n      await share({\n        canvas: elements.canvas,\n        pattern: currentPattern,\n      })\n  );\n  elements.instructionsLink.addEventListener('click', e => {\n    e.preventDefault();\n    history.pushState({ pattern: null }, 'String Art Studio', './');\n    unselectPattern();\n  });\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern &&\n        currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nasync function initPattern() {\n  if (!currentPattern) {\n    throw new Error(\"Can't init pattern - no current pattern available!\");\n  }\n\n  initSize();\n\n  window.addEventListener(\n    'resize',\n    () => currentPattern && currentPattern.draw()\n  );\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  const showShare = await isShareSupported({\n    canvas: elements.canvas,\n    pattern: currentPattern,\n  });\n  if (showShare) {\n    unHide(elements.shareBtn);\n  }\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = elements.canvas.toDataURL('image/png');\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig && configQuery\n        ? `&config=${encodeURIComponent(configQuery)}`\n        : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize({ width, height }) {\n  elements.canvas.removeAttribute('width');\n  elements.canvas.removeAttribute('height');\n\n  if (width && height) {\n    elements.canvas.style.width = `${width}px`;\n    elements.canvas.style.height = `${height}px`;\n    if (!elements.canvas.parentElement.classList.contains('overflow')) {\n      elements.canvas.parentElement.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.parentElement.classList.remove('overflow');\n    elements.canvas.removeAttribute('style');\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  if (state?.pattern) {\n    const pattern = findPatternById(state.pattern);\n    selectPattern(pattern, {\n      draw: false,\n      config: state.config ? deserializeConfig(pattern, state.config) : {},\n    });\n\n    thumbnails.close();\n    currentPattern.draw();\n  } else {\n    unselectPattern();\n    thumbnails.open();\n  }\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId}\" not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  const isFirstTime = !currentPattern;\n\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.config = config;\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  if (pattern.link) {\n    elements.patternLink.setAttribute('href', pattern.link);\n    unHide(elements.patternLink);\n  } else {\n    hide(elements.patternLink);\n  }\n\n  if (draw) {\n    requestAnimationFrame(() => {\n      currentPattern.draw();\n    });\n  }\n\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n  document.body.setAttribute('data-pattern', pattern.id);\n\n  if (isFirstTime) {\n    initPattern();\n    document.body.querySelectorAll('.pattern_only').forEach(unHide);\n  }\n}\n\nfunction unHide(element) {\n  element.removeAttribute('hidden');\n}\n\nfunction hide(element) {\n  element.setAttribute('hidden', 'hidden');\n}\n\nfunction unselectPattern() {\n  currentPattern = null;\n  const context = elements.canvas.getContext('2d');\n\n  context.clearRect(0, 0, elements.canvas.width, elements.canvas.height);\n  hide(elements.patternLink);\n  thumbnails.setCurrentPattern(null);\n  controls && controls.destroy();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  document.body.removeAttribute('data-pattern');\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\n\nconst THUMBNAIL_WIDTH = 100;\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.open();\n    } else if (this.pattern) {\n      this.close();\n    }\n  }\n\n  open() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    }\n  }\n\n  close() {\n    if (!this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern?.name ?? 'Choose a pattern';\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const canvas = document.createElement('canvas');\n      canvas.style.width = canvas.style.height = `${THUMBNAIL_WIDTH}px`;\n\n      const pattern = new PatternType(canvas);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n      const patternLink = document.createElement('a');\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      patternLink.appendChild(canvas);\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","show","isMultiColor","attr","min","max","step","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","getColorMap","stepCount","Error","stepsPerColor","Math","floor","colorMap","Map","i","set","include","exclude","defaults","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","$a8180031c78213da$var$PI2","PI","canvas","context","getContext","setConfig","centerX","width","nails","nailRadius","nailsColor","nailNumbersFontSize","addNail","nail","push","drawNumbers","globalCompositeOperation","beginPath","fillStyle","textBaseline","font","nailNumberOffset","forEach","point","x","y","number","moveTo","arc","isRightAlign","numberPosition","textAlign","fillText","String","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","margin","showNailNumbers","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","concat","defaultConfig","_defaultConfig","assign","defaultValues","_config","value","getSize","clientWidth","clientHeight","v","setUpDraw","removeAttribute","height","size","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$ff21866e88ed26dc$var$PI2","getPoint","index","points","has","get","realIndex","isReverse","n","sin","indexAngle","rotationAngle","radius","cos","serializedConfig","_serializeConfig","rotation","configCenter","props","clear","join","nailsNumberStart","getNumber","round","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","id","link","$ff21866e88ed26dc$export$2e2bcd8739ae039","nailsConfig","innerLength","rotationConfig","super","layers","repetition","layersCount","realRepetition","circleConfig","circle","shift","currentInnerLength","repetitionCount","strokeStyle","prevPointIndex","prevPoint","isPrevPoint","stepColor","console","log","lineTo","stroke","drawSpiral","$17fe1039ca333e84$export$2e2bcd8739ae039","nSpirals","radiusIncrease","angleStep","PI2","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","generatePoints","lastPoint","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$6489b1167eb82c4c$var$PI2","configSize","sides","sideCount","sideAngle","radiusAngle","_getProps","fitSize","boundingRect","getBoundingRect","scale","overrideConfig","nailsSpacing","sideSize","start","nailsDistance","radiusNailsCount","nailsPerSide","getSidePoint","pointsMapIndex","startX","getCenterPoint","radiusNailsDistance","firstPoint","slice","drawCenter","drawSides","sideIndexStart","index1","$d89aefe1e0b94ba8$var$COLOR_CONFIG","$a3a02ffca86b5e03$var$COLOR_CONFIG","$8b13425f1e264518$export$2e2bcd8739ae039","_n","extraNails","sideNails","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerY","reverseOrder","prevSide","innerColor","generateStarPoints","prevSideIndex","outterColor","prevCirclePoint","isPrevSide","nextPointIndex","nextPoint","drawCircle","drawStar","size1","show1","end1","size2","show2","end2","size3","show3","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","self","advance","getPointIndex","layerShift","steps","time","base","stepsToRender","toIndex","instructions","drawTimesTable","$828d2af56886c091$export$2e2bcd8739ae039","layerSpread","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","nextLayerIndex","polygonConfig","polygon","$6489b1167eb82c4c$export$2e2bcd8739ae039","bezier","limitedBezier","ceil","layerAngleShift","polygons","leftSide","centerIndexes","getCenterIndexes","extraNailCount","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","Set","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","parentElement","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","Function","add","_triggerEvent","eventData","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","controlKey","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","$2085f05924b9087c$var$numberRegExp","$2085f05924b9087c$var$booleanRegExp","$2085f05924b9087c$export$39ef19ebad6081a3","serializedCofig","serializedConfigValues","commaCount","split","test","booleanMatch","match","configKeys","keys","serializedValue","$72facf7821ef2ed6$var$getShareData","dataUrl","toDataURL","blob","fetch","files","File","lastModified","Date","getTime","url","location","href","title","text","alert","message","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadNailsBtn","resetBtn","shareBtn","buttons","instructionsLink","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","style","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","open","close","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","thumbnailConfig","li","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$initPattern","$52852adbc3c0b381$var$setSize","$52852adbc3c0b381$var$downloadCanvas","$52852adbc3c0b381$var$downloadNailsImage","$52852adbc3c0b381$var$reset","navigator","share","shareData","canShare","$72facf7821ef2ed6$export$4fa6f570da04f7cc","$52852adbc3c0b381$var$unHide","downloadLink","download","click","currentConfig","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","nonDefaultConfigValues","pop","$2085f05924b9087c$export$fa8157df3262779b","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","$52852adbc3c0b381$var$unselectPattern","patternId","isFirstTime","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$hide","$52852adbc3c0b381$var$initRouting","queryParams","URLSearchParams","search","queryPattern","async","error","$72facf7821ef2ed6$export$ed80d9de1d9df928","dialogId","toggleFor"],"version":3,"file":"index.b9259bc1.js.map"}