{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/helpers/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Eye.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/string_art_types/Flower.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/TimesTables.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Circles.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/Serialize.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / (colorCount - 1)\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    if (!colorCount) {\n      throw new Error(\"Can't get color map, no colorCount provided!\");\n    }\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {} }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: controls,\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const PI2 = Math.PI * 2;\nconst NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(canvas, config) {\n    this.context = canvas.getContext('2d');\n    this.setConfig(config);\n    this.centerX = canvas.width / 2;\n    this.nails = [];\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    this.nails.push(nail);\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.beginPath();\n    this.context.fillStyle = this.nailsColor;\n    this.context.textBaseline = 'middle';\n    this.context.font = `${this.nailNumbersFontSize}px sans-serif`;\n    const nailNumberOffset = this.nailRadius + NUMBER_MARGIN;\n\n    this.nails.forEach(({ point: [x, y], number }) => {\n      this.context.moveTo(x + this.nailRadius, y);\n      this.context.arc(x, y, this.nailRadius, 0, PI2);\n      if (drawNumbers && number !== undefined && number !== null) {\n        const isRightAlign = x < this.centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.context.textAlign = isRightAlign ? 'right' : 'left';\n        this.context.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.context.fill();\n    this.nails = [];\n  }\n}\n","import Nails from './Nails.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.1 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(canvas) {\n    if (!canvas) {\n      throw new Error('Canvas not specified!');\n    }\n\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = Object.freeze(\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\n      );\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  getSize() {\n    const canvasScreenSize = [\n      this.canvas.clientWidth,\n      this.canvas.clientHeight,\n    ];\n    return canvasScreenSize.map(v => v * this.pixelRatio);\n  }\n\n  setUpDraw() {\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.center = this.size.map(value => value / 2);\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.canvas, this.config);\n    }\n\n    this.ctx.clearRect(0, 0, ...this.size);\n    this.ctx.lineWidth = this.config.stringWidth;\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    this.ctx.beginPath();\n    if (enableBackground) {\n      this.ctx.globalCompositeOperation = 'destination-over';\n      this.ctx.fillStyle = customBackgroundColor\n        ? backgroundColor\n        : darkMode\n        ? COLORS.dark\n        : COLORS.light;\n      this.ctx.fillRect(0, 0, ...this.size);\n    }\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art on canvas\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","import Nails from '../Nails.js';\n\nconst PI2 = Math.PI * 2;\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const realIndex = this.isReverse ? this.config.n - 1 - index : index;\n\n    const point = [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const props = {\n        center,\n        radius: radius ?? Math.min(...center) - margin,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n    ].join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 6,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount } = this.config;\n    this.layersCount = layers ?? 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { repetition, innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.ctx.strokeStyle = color;\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      const nextPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength\n        : prevPointIndex + currentInnerLength;\n\n      this.ctx.lineTo(...this.circle.getPoint(nextPointIndex));\n      repetitionCount++;\n      if (repetitionCount === repetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n      }\n\n      prevPointIndex = nextPointIndex + 1;\n      prevPoint = this.circle.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n\n      this.ctx.stroke();\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return layers * Math.round(innerLength * n) * repetition;\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n    const PI2 = Math.PI * 2;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.ctx.beginPath();\n    this.ctx.moveTo(...this.center);\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    let lastPoint;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      if (lastPoint) {\n        this.ctx.moveTo(...lastPoint);\n        this.ctx.lineTo(...point);\n      }\n      lastPoint = point;\n      this.ctx.stroke();\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(\n        ...this.getPoint({ side, index: i, rotation, ...sideProps })\n      );\n      this.ctx.lineTo(\n        ...this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize =\n      Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","const PI2 = Math.PI * 2;\n\nexport default class Polygon {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        size: configSize,\n        margin,\n        rotation = 0,\n        sides: sideCount,\n      } = (this.config = config);\n\n      const sideAngle = PI2 / sideCount;\n\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\n        const angle = sideAngle * i + PI2 * rotation;\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\n\n        return {\n          cos: Math.cos(angle),\n          sin: Math.sin(angle),\n          center: {\n            cos: Math.cos(radiusAngle),\n            sin: Math.sin(radiusAngle),\n          },\n        };\n      });\n\n      Object.assign(this, {\n        sides,\n        sideCount,\n        sideAngle,\n      });\n\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n\n      Object.assign(this, this._getProps());\n\n      if (config.fitSize) {\n        const boundingRect = this.getBoundingRect();\n        const scale = Math.min(\n          (configSize[0] - 2 * margin) / boundingRect.width,\n          (configSize[1] - 2 * margin) / boundingRect.height\n        );\n\n        const size = configSize.map(v => v * scale);\n        const center = [\n          this.center[0] -\n            (scale * (boundingRect.left - configSize[0] + boundingRect.right)) /\n              2,\n          this.center[1] -\n            (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) /\n              2,\n        ];\n        Object.assign(this, this._getProps({ size, center }));\n\n        this.points.clear();\n      }\n    }\n  }\n\n  _getProps(overrideConfig) {\n    const {\n      nailsSpacing,\n      size,\n      margin = 0,\n      center: configCenter,\n    } = Object.assign({}, this.config, overrideConfig);\n\n    const center = configCenter ?? this.config.size.map(v => v / 2);\n\n    const radius = Math.min(...size) / 2 - margin;\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\n    const start = [\n      radius * Math.sin(this.sideAngle / 2),\n      radius * Math.cos(this.sideAngle / 2),\n    ];\n    const nailsDistance = sideSize * nailsSpacing;\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\n    const radiusNailsDistance = radius / radiusNailsCount;\n\n    return {\n      nailsSpacing,\n      nailsPerSide: 1 / nailsSpacing,\n      center,\n      radius,\n      sideSize,\n      start,\n      nailsDistance,\n      radiusNailsCount,\n      radiusNailsDistance,\n    };\n  }\n\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\n      '_'\n    );\n  }\n\n  getSidePoint({ side, index }) {\n    const pointsMapIndex = [side, index].join('_');\n\n    if (this.points.has(pointsMapIndex)) {\n      return this.points.get(pointsMapIndex);\n    }\n\n    const startX = this.start[0] - index * this.nailsDistance;\n    const { cos, sin } = this.sides[side];\n\n    const point = [\n      cos * startX - sin * this.start[1] + this.center[0],\n      sin * startX + cos * this.start[1] + this.center[1],\n    ];\n\n    this.points.set(pointsMapIndex, point);\n    return point;\n  }\n\n  getCenterPoint({ side, index }) {\n    const radius = index * this.radiusNailsDistance;\n    const { sin, cos } = this.sides[side].center;\n\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\n  }\n\n  getBoundingRect() {\n    const points = this.sides.map((_, side) =>\n      this.getSidePoint({ side, index: 0 })\n    );\n    const firstPoint = points[0];\n\n    const boundingRect = points.slice(1).reduce(\n      (boundingRect, [x, y]) => ({\n        left: Math.min(boundingRect.left, x),\n        right: Math.max(boundingRect.right, x),\n        top: Math.min(boundingRect.top, y),\n        bottom: Math.max(boundingRect.bottom, y),\n      }),\n      {\n        left: firstPoint[0],\n        right: firstPoint[0],\n        top: firstPoint[1],\n        bottom: firstPoint[1],\n      }\n    );\n\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\n    boundingRect.width = boundingRect.right - boundingRect.left;\n    Object.freeze(boundingRect);\n    return boundingRect;\n  }\n\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\n    for (let side = 0; side < this.sideCount; side++) {\n      const sideIndexStart = side * this.nailsPerSide;\n\n      if (drawSides) {\n        for (let index = 0; index < this.nailsPerSide; index++) {\n          nails.addNail({\n            point: this.getSidePoint({ side, index }),\n            number: sideIndexStart + index,\n          });\n        }\n      }\n\n      if (drawCenter) {\n        for (let index = 0; index < this.radiusNailsCount; index++) {\n          nails.addNail({\n            point: this.getCenterPoint({ side, index }),\n            number: `${side}_${index}`,\n          });\n        }\n      }\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 1,\n    multicolorStart: 0,\n    multicolorByLightness: true,\n    minLightness: 20,\n    maxLightness: 50,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class PolygonPattern extends StringArt {\n  name = 'Polygon';\n  id = 'polygon';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'bezier',\n      label: 'Bezier',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 4,\n        step: 1,\n      },\n      show: ({ sides }) => sides > 4,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#5c5c5c',\n    nailRadius: 1,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const polygonConfig = {\n      sides,\n      rotation,\n      margin,\n      size,\n      nailsSpacing: 1 / n,\n      fitSize: true,\n    };\n\n    if (this.polygon) {\n      this.polygon.setConfig(polygonConfig);\n    } else {\n      this.polygon = new Polygon(polygonConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: sides,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: sides,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier } = this.config;\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let side = 0; side < sides; side++) {\n      const nextSide = (side + limitedBezier) % sides;\n\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\n        if (this.colorMap) {\n          color = this.colorMap.get(step);\n        }\n\n        this.ctx.strokeStyle = color;\n        this.ctx.beginPath();\n        this.ctx.moveTo(...this.polygon.getSidePoint({ side, index }));\n        this.ctx.lineTo(\n          ...this.polygon.getSidePoint({ side: nextSide, index })\n        );\n\n        this.ctx.stroke();\n\n        yield;\n        step++;\n      }\n    }\n  }\n\n  getStepCount() {\n    const { sides, n } = this.config;\n    return sides * n;\n  }\n\n  drawNails() {\n    this.polygon.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 264,\n    multicolorStart: 53,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class Flower extends StringArt {\n  name = 'Flower';\n  id = 'flower';\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\n  controls = [\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#29f1ff',\n    nailRadius: 1,\n    stringWidth: 0.5,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const layerAngleShift = 1 / (sides * layers);\n\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\n      const polygonConfig = {\n        sides,\n        rotation: rotation + i * layerAngleShift,\n        margin,\n        size,\n        nailsSpacing: 1 / n,\n      };\n\n      return new Polygon(polygonConfig);\n    });\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: layers,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: layers,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier, layers } = this.config;\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const polygon = this.polygons[layer];\n\n      for (let side = 0; side < sides; side++) {\n        const leftSide = side === sides - 1 ? 0 : side + 1;\n\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\n          if (this.colorMap) {\n            color = this.colorMap.get(step);\n          }\n\n          const centerIndexes = this.getCenterIndexes({\n            polygon,\n            sideIndex: index,\n          });\n\n          this.ctx.strokeStyle = color;\n          this.ctx.beginPath();\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: side,\n              index: centerIndexes[0],\n            })\n          );\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: leftSide,\n              index: centerIndexes[1],\n            })\n          );\n\n          this.ctx.stroke();\n\n          yield;\n          step++;\n        }\n      }\n    }\n  }\n\n  getCenterIndexes({ polygon, sideIndex }) {\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\n\n    return [\n      sideIndex < extraNailCount\n        ? -extraNailCount + sideIndex\n        : sideIndex - extraNailCount,\n      polygon.radiusNailsCount - sideIndex,\n    ];\n  }\n\n  getStepCount() {\n    const { sides, n, layers } = this.config;\n    return sides * (n + 1) * layers;\n  }\n\n  drawNails() {\n    this.polygons.forEach(polygon =>\n      polygon.drawNails(this.nails, { drawCenter: true })\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport TimesTables from './string_art_types/TimesTables.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Circles from './string_art_types/Circles.js';\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\nimport Flower from './string_art_types/Flower.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  TimesTables,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Circles,\n  PolygonPattern,\n  Flower,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0 } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails } = this.config;\n\n    this.ctx.strokeStyle = innerColor;\n    let prevPoint;\n\n    for (const { prevSide, sideIndex, point } of this.generateStarPoints()) {\n      this.ctx.beginPath();\n\n      if (sideIndex && !(sideIndex % 2)) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...point);\n      } else {\n        this.ctx.moveTo(...point);\n      }\n\n      const prevSideIndex = sideNails - sideIndex;\n      this.ctx.lineTo(\n        ...this.getStarPoint({ side: prevSide, sideIndex: prevSideIndex })\n      );\n      prevPoint = point;\n      this.ctx.stroke();\n      yield;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor } = this.config;\n\n    let prevCirclePoint;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = outterColor;\n    for (const { side, prevSide, sideIndex, point } of this.generateStarPoints({\n      reverseOrder: true,\n    })) {\n      this.ctx.beginPath();\n      if (!prevCirclePoint) {\n        prevCirclePoint = this.circle.getPoint(\n          this.sides[prevSide].circlePointsStart\n        );\n      }\n\n      this.ctx.moveTo(...prevCirclePoint);\n\n      this.ctx.lineTo(...point);\n      this.ctx.stroke();\n\n      yield;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      const nextPointIndex = isPrevSide\n        ? this.sides[prevSide].circlePointsEnd - sideIndex\n        : this.sides[side].circlePointsStart + sideIndex;\n\n      const nextPoint = this.circle.getPoint(nextPointIndex);\n      this.ctx.lineTo(...nextPoint);\n\n      prevCirclePoint = this.circle.getPoint(\n        isPrevSide\n          ? this.sides[prevSide].circlePointsEnd - sideIndex + 1\n          : this.sides[side].circlePointsStart + sideIndex - 1\n      );\n\n      this.ctx.lineTo(...prevCirclePoint);\n\n      this.ctx.stroke();\n      isPrevSide = !isPrevSide;\n      yield;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails } = this.config;\n    const starCount = sideNails * sides;\n    return starCount * 3; // Once for each side + two more times for the side's circle\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size1',\n              label: 'Size',\n              defaultValue: 0.25,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size1, n }) => Math.round(n * size1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'end1',\n              label: 'End Position',\n              defaultValue: 1,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end1, n }) => Math.round(n * end1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'color1',\n              label: 'Color',\n              defaultValue: '#a94fb0',\n              type: 'color',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size2',\n              label: 'Size',\n              defaultValue: 0.125,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size2, n }) => Math.round(n * size2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'end2',\n              label: 'End Position',\n              defaultValue: 0.888,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'color2',\n              label: 'Color',\n              defaultValue: '#ec6ad0',\n              type: 'color',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size3',\n              label: 'Size',\n              defaultValue: 0,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size3, n }) => Math.round(n * size3),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'end3',\n              label: 'End Position',\n              defaultValue: 0.826,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'color3',\n              label: 'Color',\n              defaultValue: '#f08ad5',\n              type: 'color',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: true,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = color;\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      this.ctx.beginPath();\n\n      if (prevPoint) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...this.getPoint(prevPointIndex + advance));\n      } else {\n        this.ctx.moveTo(...this.getPoint(getPointIndex(index)));\n      }\n\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      prevPoint = this.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class TimesTables extends StringArt {\n  name = 'Times Tables';\n  id = 'times_tables';\n  link =\n    'https://www.youtube.com/watch?v=LWin7w9hF-E&ab_channel=Jorgedelatierra';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, margin } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', steps, time }) {\n    const { base } = this.config;\n    const n = this.n;\n    const stepsToRender = steps ?? n;\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= stepsToRender; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      point = this.circle.getPoint(i + shift);\n      this.ctx.lineTo(...point);\n      const toIndex = (i * base) % n;\n      this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    return this.config.layers * this.n;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport Circle from '../helpers/Circle.js';\nimport Spiral from './Spiral.js';\n\nexport default class Wave extends Spiral {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 144,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 0.075,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n  }\n\n  *generateStrings() {\n    for (let layer = 0; layer < this.layersCount; layer++) {\n      yield* this.drawSpiral({\n        color: this.color.getColor(layer),\n        shift: -this.layerShift * layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 40,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Circles extends StringArt {\n  name = 'Circles';\n  id = 'circles';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.ctx.strokeStyle = color;\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        this.ctx.beginPath();\n        this.ctx.moveTo(...(prevCirclePoint ?? this.getPoint(layer, i)));\n\n        if (layerIndex === 0 && i) {\n          this.ctx.lineTo(...this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n        this.ctx.lineTo(...prevCirclePoint);\n        this.ctx.stroke();\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd(e) {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      this.currentInputRange.value = this.currentInputRangeValue;\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll(e) {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.config = Object.freeze({\n      ...this.pattern.config,\n      [controlKey]: inputValue,\n    });\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","export function serializeConfig(pattern) {\n    const {defaultConfig, config} = pattern;\n\n    const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\n        if (value === defaultConfig[key]) {\n            return null;\n        }\n\n        if (typeof(value) === \"boolean\") {\n            return `!${value ? 1 : 0}`;\n        }\n\n        return value;\n    });\n\n    while(nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\n        nonDefaultConfigValues.pop();\n    }\n\n    if (!nonDefaultConfigValues.length) {\n        return '';\n    }\n\n    const serializedConfigValues = nonDefaultConfigValues.join(\"_\").replace(/\\_{2,}/g, match => '~' + match.length + '_');\n    return serializedConfigValues;\n}\n\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\nconst booleanRegExp = /^(?:!)([01])$/;\n\nexport function deserializeConfig(pattern, serializedCofig) {\n    const serializedConfigValues = serializedCofig\n        .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) => new Array(+commaCount).fill('_').join(\"\"))\n        .split('_')\n        .map(v => {\n            if (v === '') {\n                return null;\n            }\n\n            if (numberRegExp.test(v)) {\n                return parseFloat(v);\n            }\n\n            const booleanMatch = v.match(booleanRegExp);\n            if (booleanMatch) {\n                return booleanMatch[1] === '1';\n            }\n\n            return v;\n        });\n\n    const configKeys = Object.keys(pattern.defaultConfig);\n\n    return serializedConfigValues.reduce((config, serializedValue, i) => {\n        if (serializedValue !== null) {\n            const key = configKeys[i];\n            return { ...config, [key]: serializedValue};\n        }\n\n        return config;\n    }, {});\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\nimport {deserializeConfig, serializeConfig} from './Serialize.js';\n\nconst elements = {\n  canvas: document.querySelector('canvas'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  buttons: document.querySelector('#buttons'),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\nlet activeDialog;\n\nwindow.addEventListener('load', main);\n\nfunction main() {\n  initRouting();\n  initSize();\n\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      selectPattern(patterns[0]);\n    }\n  }\n\n  window.addEventListener('resize', () => currentPattern.draw());\n\n  elements.canvas.addEventListener('click', () => {\n    player.toggle();\n  });\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = elements.canvas.toDataURL('image/png');\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      (withConfig && configQuery) ? `&config=${encodeURIComponent(configQuery)}` : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize({ width, height }) {\n  elements.canvas.removeAttribute('width');\n  elements.canvas.removeAttribute('height');\n\n  if (width && height) {\n    elements.canvas.style.width = `${width}px`;\n    elements.canvas.style.height = `${height}px`;\n    if (!elements.canvas.parentElement.classList.contains('overflow')) {\n      elements.canvas.parentElement.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.parentElement.classList.remove('overflow');\n    elements.canvas.removeAttribute('style');\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  const pattern = findPatternById(state.pattern);\n  selectPattern(pattern, {\n    draw: false,\n    config: state.config ? deserializeConfig(pattern, state.config) : {},\n  });\n\n  currentPattern.draw();\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId} not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.config = config;\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  if (pattern.link) {\n    elements.patternLink.setAttribute('href', pattern.link);\n    elements.patternLink.removeAttribute('hidden');\n  } else {\n    elements.patternLink.setAttribute('hidden', 'hidden');\n  }\n\n  if (draw) {\n    currentPattern.draw();\n  }\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\n\nconst THUMBNAIL_WIDTH = 100;\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    } else {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern.name;\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const canvas = document.createElement('canvas');\n      canvas.style.width = canvas.style.height = `${THUMBNAIL_WIDTH}px`;\n\n      const pattern = new PatternType(canvas);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n      const patternLink = document.createElement('a');\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      patternLink.appendChild(canvas);\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","show","isMultiColor","attr","min","max","step","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","getColorMap","stepCount","Error","stepsPerColor","Math","floor","colorMap","Map","i","set","include","exclude","defaults","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","$a8180031c78213da$var$PI2","PI","canvas","context","getContext","setConfig","centerX","width","nails","nailRadius","nailsColor","nailNumbersFontSize","addNail","nail","push","drawNumbers","globalCompositeOperation","beginPath","fillStyle","textBaseline","font","nailNumberOffset","forEach","point","x","y","number","moveTo","arc","isRightAlign","numberPosition","textAlign","fillText","String","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","margin","showNailNumbers","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","concat","defaultConfig","_defaultConfig","assign","defaultValues","_config","value","getSize","clientWidth","clientHeight","v","setUpDraw","removeAttribute","height","size","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$ff21866e88ed26dc$var$PI2","getPoint","index","points","has","get","realIndex","isReverse","n","sin","indexAngle","rotationAngle","radius","cos","serializedConfig","_serializeConfig","rotation","configCenter","props","clear","join","nailsNumberStart","getNumber","round","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","id","link","$ff21866e88ed26dc$export$2e2bcd8739ae039","nailsConfig","innerLength","rotationConfig","super","layers","layersCount","circleConfig","circle","shift","repetition","currentInnerLength","repetitionCount","strokeStyle","prevPointIndex","prevPoint","isPrevPoint","stepColor","nextPointIndex","lineTo","stroke","drawSpiral","$17fe1039ca333e84$export$2e2bcd8739ae039","nSpirals","radiusIncrease","angleStep","PI2","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","generatePoints","lastPoint","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$6489b1167eb82c4c$var$PI2","configSize","sides","sideCount","sideAngle","radiusAngle","_getProps","fitSize","boundingRect","getBoundingRect","scale","overrideConfig","nailsSpacing","sideSize","start","nailsDistance","radiusNailsCount","nailsPerSide","getSidePoint","pointsMapIndex","startX","getCenterPoint","radiusNailsDistance","firstPoint","slice","drawCenter","drawSides","sideIndexStart","index1","$d89aefe1e0b94ba8$var$COLOR_CONFIG","$a3a02ffca86b5e03$var$COLOR_CONFIG","$8b13425f1e264518$export$2e2bcd8739ae039","_n","extraNails","sideNails","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerY","reverseOrder","prevSide","innerColor","generateStarPoints","prevSideIndex","outterColor","prevCirclePoint","isPrevSide","nextPoint","drawCircle","drawStar","size1","show1","end1","size2","show2","end2","size3","show3","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","self","advance","getPointIndex","layerShift","steps","time","base","stepsToRender","toIndex","instructions","drawTimesTable","$828d2af56886c091$export$2e2bcd8739ae039","layerSpread","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","nextLayerIndex","polygonConfig","polygon","$6489b1167eb82c4c$export$2e2bcd8739ae039","bezier","limitedBezier","ceil","layerAngleShift","polygons","leftSide","centerIndexes","getCenterIndexes","extraNailCount","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","Set","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","parentElement","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","Function","add","_triggerEvent","eventData","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","controlKey","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","$2085f05924b9087c$var$numberRegExp","$2085f05924b9087c$var$booleanRegExp","$2085f05924b9087c$export$39ef19ebad6081a3","serializedCofig","serializedConfigValues","commaCount","split","test","booleanMatch","match","configKeys","keys","serializedValue","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadNailsBtn","resetBtn","buttons","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","text","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","style","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","thumbnailConfig","li","href","title","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$downloadCanvas","downloadLink","download","toDataURL","click","$52852adbc3c0b381$var$downloadNailsImage","currentConfig","$52852adbc3c0b381$var$reset","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","nonDefaultConfigValues","pop","$2085f05924b9087c$export$fa8157df3262779b","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","patternId","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$initRouting","$52852adbc3c0b381$var$setSize","$52852adbc3c0b381$var$initSize","queryParams","URLSearchParams","location","search","queryPattern","dialogId","toggleFor"],"version":3,"file":"index.0be07608.js.map"}