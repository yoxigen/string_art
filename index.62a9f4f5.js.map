{"mappings":"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","sources":["src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Circle.js","src/scripts/string_art_types/Eye.js","src/scripts/pattern_types.js","src/scripts/string_art_types/TimesTables.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Star.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/main.js","src/scripts/editor/Player.js"],"sourcesContent":["const PI2 = Math.PI * 2;\n\nexport default class Nails {\n    constructor(canvas, config) {\n        this.context = canvas.getContext(\"2d\");\n        this.setConfig(config);\n        this.nails = [];\n    }\n\n    setConfig({ nailRadius, darkMode}) {\n        this.nailRadius = nailRadius;\n        this.nailsColor = darkMode ? '#ffffff' : '#000000';\n        this.nails = [];\n    }\n\n    // Adds a nail to be rendered. nail: { point, number }\n    addNail(nail) {\n        this.nails.push(nail);\n    }\n\n    fill() {\n        this.context.globalCompositeOperation = \"source-over\";\n        this.context.beginPath();\n        this.nails.forEach(({ point: [x, y] }) => {\n            this.context.moveTo(x + this.nailRadius, y);\n            this.context.arc(x, y, this.nailRadius, 0, PI2)\n        });\n\n        this.context.fillStyle = this.nailsColor;\n        this.context.fill();\n\n        this.nails = [];\n    }\n}","import Nails from \"./Nails.js\";\n\nconst COMMON_CONFIG_CONTROLS = [\n    {\n        key: 'general',\n        label: 'General',\n        type: 'group',\n        children: [\n            {\n                key: 'showStrings',\n                label: 'Show strings',\n                defaultValue: true,\n                type: \"checkbox\",\n                isDisabled: ({showNails}) => !showNails\n            },\n            {\n                key: 'stringWidth',\n                label: 'String width',\n                defaultValue: 1,\n                type: \"range\",\n                attr: {\n                    min: 0.2,\n                    max: 4,\n                    step: 0.2\n                },\n                show: ({showStrings}) => showStrings\n            },\n            {\n                key: 'showNails',\n                label: 'Show nails',\n                defaultValue: true,\n                type: \"checkbox\",\n                isDisabled: ({showStrings}) => !showStrings\n            },\n            {\n                key: 'nailRadius',\n                label: 'Nail size',\n                defaultValue: 1,\n                type: \"range\",\n                attr: {\n                    min: 0.5,\n                    max: 5,\n                    step: 0.25\n                },\n                show: ({showNails}) => showNails\n            },\n            {\n                key: 'margin',\n                label: 'Margin',\n                defaultValue: 20,\n                type: \"number\",\n                attr: {\n                    min: 0,\n                    max: 500,\n                    step: 1\n                }\n            }\n        ]\n    },\n    {\n        key: 'theme',\n        label: 'Theme',\n        type: 'group',\n        children: [\n            {\n                key: 'darkMode',\n                label: 'Dark mode',\n                defaultValue: true,\n                type: 'checkbox'\n            },\n            {\n                key: 'customBackgroundColor',\n                label: 'Custom background color',\n                defaultValue: false,\n                type: 'checkbox',\n            },\n            {\n                key: 'backgroundColor',\n                label: 'Background color',\n                defaultValue: '#222222',\n                type: 'color',\n                show: ({customBackgroundColor}) => customBackgroundColor\n            },\n        ]\n    }\n];\n\nclass StringArt {\n    constructor(canvas) {\n        if (!canvas) {\n            throw new Error(\"Canvas not specified!\");\n        }\n\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = this.ctx.webkitBackingStorePixelRatio ||\n            this.ctx.mozBackingStorePixelRatio ||\n            this.ctx.msBackingStorePixelRatio ||\n            this.ctx.oBackingStorePixelRatio ||\n            this.ctx.backingStorePixelRatio || 1;\n        this.pixelRatio = dpr / bsr;\n    }\n\n    get configControls() {\n        return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n    }\n\n    get defaultConfig() {\n        if (!this._defaultConfig) {\n            this._defaultConfig = flattenConfig(this.configControls);\n        }\n\n        return this._defaultConfig;\n    }\n\n    get config() {\n        return this._config ?? this.defaultConfig;\n    }\n\n    set config(value) {\n        this._config = Object.assign({}, this.defaultConfig, value);\n    }\n\n    setUpDraw() {\n        this.canvas.removeAttribute('width');\n        this.canvas.removeAttribute('height');\n\n        const canvasScreenSize = [this.canvas.clientWidth, this.canvas.clientHeight];\n        const [width, height] = this.size = canvasScreenSize.map(v => v * this.pixelRatio);\n        Object.assign(this, this.size);\n        this.canvas.setAttribute('width', width);\n        this.canvas.setAttribute('height', height);\n        this.center = this.size.map(value => value / 2);\n\n        if (this.nails) {\n            this.nails.setConfig(this.config);\n        } else {\n            this.nails = new Nails(this.canvas, this.config);\n        }\n\n        this.ctx.clearRect(0, 0, ...this.size);\n        this.ctx.lineWidth = this.config.stringWidth;\n    }\n\n    afterDraw() {\n        if (this.config.showNails) {\n            this.drawNails();\n            this.nails.fill();\n        }\n    }\n\n    initDraw() {\n        this.setUpDraw(this.config);\n        const { showNails, darkMode, backgroundColor, customBackgroundColor } = this.config;\n\n        this.ctx.beginPath();\n        this.ctx.globalCompositeOperation = 'destination-over';\n        this.ctx.fillStyle = customBackgroundColor ? backgroundColor : this.config.darkMode ? '#222222' : '#ffffff';\n        this.ctx.fillRect(0, 0, ...this.size);\n\n        this.ctx.globalCompositeOperation = 'source-over';\n        if (showNails) {\n            this.drawNails();\n            this.nails.fill();\n        }\n    }\n\n    /**\n     * Draws the string art on canvas\n     * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n     */\n    draw({position = Infinity} = {}) {\n        this.initDraw();\n        const { showStrings } = this.config;\n\n        if (showStrings) {\n            this.stringsIterator = this.generateStrings();\n            this.position = 0;\n\n            while(!this.drawNext().done && this.position < position);\n            this.afterDraw();\n        }\n    }\n\n    goto(position) {\n        if (position === this.position) {\n            return;\n        }\n\n        if (this.stringsIterator && position > this.position) {\n            while(!this.drawNext().done && this.position < position);\n            this.afterDraw();\n        } else {\n            this.draw({ position });\n        }\n    }\n\n    drawNext() {\n        const result = this.stringsIterator.next();\n\n        if (result.done) {\n            this.afterDraw();\n        } else {\n            this.position++;\n        }\n\n        return result;\n    }\n\n    generateStrings(config) {\n        throw new Error(\"generateStrings method not defined!\");\n    }\n\n    getStepCount(config) {\n        throw new Error(`'getStepCount' method not implemented for string art type \"${this.name}\"`);\n    }\n}\n\nfunction flattenConfig(configControls) {\n    return configControls.reduce((config, {key, defaultValue, children}) =>\n        children ? {\n            ...config,\n            ...flattenConfig(children)\n        } : {\n            ...config,\n            [key]: defaultValue\n        },\n    {});\n}\n\nexport default StringArt;\n","import StringArt from \"../StringArt.js\";\n\nclass Spirals extends StringArt{\n    name = \"Spirals\";\n    id = \"spirals\";\n    link = \"https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1\";\n    controls = [\n        {\n            key: 'n',\n            label: 'Number of nails',\n            defaultValue: 92,\n            type: \"range\",\n            attr: {\n                min: 3,\n                max: 200,\n                step: 1\n            }\n        },\n        {\n            key: 'radiusIncrease',\n            label: 'Size',\n            defaultValue: 3,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 20,\n                step: 0.2\n            }\n        },\n        {\n            key: 'angleStep',\n            label: 'Angle step',\n            defaultValue: 0.05,\n            type: \"range\",\n            attr: {\n                min: 0.01,\n                max: 1,\n                step: 0.01,\n            }\n        },\n        {\n            key: 'nSpirals',\n            label: 'Number of spirals',\n            defaultValue: 3,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 20,\n                step: 1\n            }\n        },\n        {\n            key: 'color',\n            label: 'String color',\n            defaultValue: \"#00ddff\",\n            type: \"color\",\n        }\n    ];\n    \n    *generatePoints() {\n        const {\n            n, radiusIncrease, angleStep, nSpirals,\n        } = this.config;\n        \n        let currentRadius = 0;\n        let angle = 0;\n        const [centerx, centery] = this.center;\n\n        for (let i = 0; i < n; i++) {\n            for (let s = 0; s < nSpirals; s++) {\n                const rotation = s * 2 * Math.PI / nSpirals;\n                const point = [\n                    centerx + currentRadius * Math.sin(angle + rotation),\n                    centery + currentRadius * Math.cos(angle + rotation)\n                ];\n                yield point;\n            }\n            \n            angle += angleStep;\n            currentRadius += radiusIncrease;\n        }\n    }\n\n    *generateStrings() {\n        const points = this.generatePoints();\n        let index = 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(...this.center);\n        this.ctx.strokeStyle = this.config.color;\n\n        let lastPoint = this.center;\n\n        for (const point of points) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(...lastPoint);\n            lastPoint = point;\n            this.ctx.lineTo(...point);\n            this.ctx.strokeStyle = this.config.color;\n            this.ctx.stroke();\n            yield index++;\n        }\n    }\n\n    getStepCount() {\n        const { n, nSpirals } = this.config;\n        return n * nSpirals;\n    }\n\n    drawNails() {\n        const points = this.generatePoints();\n        let index = 0;\n        for (const point of points) {\n            this.nails.addNail({point, number: `${index++}`});\n        }\n    }\n}\n\nexport default Spirals;","const PI2 = Math.PI * 2;\n\nexport default class Circle {\n    constructor(config) {\n        const { n, size, margin = 0, rotation = 0, center } = this.config = config;\n        \n        this.center = center ?? size.map(v => v / 2);\n        this.radius = Math.min(...this.center) - margin;\n\n        this.indexAngle = PI2 / n;\n        this.rotationAngle = -PI2 * rotation;\n    }\n\n    getPoint(index = 0) {\n        return [\n            this.center[0] + Math.sin(index * this.indexAngle + this.rotationAngle) * this.radius,\n            this.center[1] + Math.cos(index * this.indexAngle + this.rotationAngle) * this.radius\n        ];\n    }\n\n    drawNails(nails) {\n        for (let i=0; i < this.config.n; i++) {\n            nails.addNail({point: this.getPoint(i)});\n        }\n    }\n}","import StringArt from \"../StringArt.js\";\n\nconst MARGIN = 20;\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n    left: 0,\n    bottom: Math.PI / 2,\n    right: Math.PI,\n    top: Math.PI * 1.5\n};\n\nclass Eye extends StringArt{\n    name = \"Eye\"\n    id = \"eye\"\n    link = \"https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv\";\n    controls = [\n        {\n            key: 'n',\n            label: 'Number of nails per side',\n            defaultValue: 82,\n            type: \"range\",\n            attr: {\n                min: 2,\n                max: 200,\n                step: 1\n            }\n        },\n        {\n            key: 'layers',\n            label: 'Layers',\n            defaultValue: 13,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 20,\n                step: 1\n            }\n        },\n        {\n            key: 'angle',\n            label: 'Layer angle',\n            defaultValue: 30,\n            type: \"range\",\n            attr: {\n                min: 0,\n                max: 45,\n                step: 1\n            }\n        },\n        {\n            key: 'color1',\n            label: 'String #1 color',\n            defaultValue: \"#11e8bd\",\n            type: \"color\",\n        },\n        {\n            key: 'color2',\n            label: 'String #2 color',\n            defaultValue: \"#6fff52\",\n            type: \"color\",\n        },\n    ];\n\n    setUpDraw() {\n        super.setUpDraw();\n\n        const { n, angle } = this.config;\n\n        this.maxSize = Math.min(...this.size) - 2 * MARGIN;\n        this.nailSpacing = this.maxSize / (n - 1);\n        this.layerAngle = angle * Math.PI / 180;\n    }\n\n    // Sides: top, right, bottom, left\n    getPoint({index, angle, layerStart, rotation}) {\n        const theta = angle + rotation;\n\n        const point = { \n            x: layerStart.x, \n            y: layerStart.y + this.nailSpacing * index\n        };\n\n        const pivot = { x: this.center[0], y: this.center[1] };\n\n        const cosAngle = Math.cos(theta);\n        const sinAngle = Math.sin(theta);\n\n        const position = [\n            (cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x),\n            (sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y),\n        ];\n        return position;\n    }\n\n    *drawSide({ side, color = '#ffffff', angle, size, layerStart }) {\n        const sideIndex = SIDES.indexOf(side);\n        const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n        const rotation = SIDES_ROTATION[side];\n        const nextSideRotation = SIDES_ROTATION[nextSide];\n        const nLayer = Math.floor(size / this.nailSpacing);\n        \n        const sideProps = { nLayer, size, layerStart, angle };\n        \n        for(let i=0; i <= nLayer; i++) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(...this.getPoint({ side, index: i, rotation, ...sideProps}));\n            this.ctx.lineTo(...this.getPoint({side: nextSide, index: i, rotation: nextSideRotation, ...sideProps}));\n            this.ctx.strokeStyle = color;\n            this.ctx.stroke();\n            yield i;\n        }\n    }\n\n    *drawLayer(layer) {\n        const { color1, color2 } = this.config;\n        const colors = [color2, color1, color2, color1];\n        const layerAngle = this.layerAngle * layer;\n        const layerSize = this.maxSize / Math.pow(Math.cos(this.layerAngle) + Math.sin(this.layerAngle), layer);\n        const layerStart = { \n            x: this.center[0] - layerSize / 2, \n            y: this.center[1] - layerSize / 2\n        };\n\n        for (let i = 0; i < SIDES.length; i++) {\n            yield* this.drawSide({ \n                color: colors[i], \n                side: SIDES_ORDER[i],\n                angle: layerAngle,\n                size: layerSize,\n                layerStart,\n            });\n        }\n    }\n\n    *generateStrings() {\n        const {layers} =  this.config;\n        for(let layer=layers - 1; layer >= 0; layer--) {\n            yield* this.drawLayer(layer);\n        }\n    }\n\n    getStepCount() {\n        let count = 0;\n        const {layers, angle, n} = this.config;\n        const layerAngle = angle * Math.PI / 180;\n        const maxSize = Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * MARGIN;\n        const nailSpacing = maxSize / (n - 1);\n\n        for(let layer = 0; layer < layers; layer++) {\n            const layerSize = maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n            count += 4 * (Math.floor(layerSize / nailSpacing) + 1)\n        }\n\n        return count;\n    }\n\n    drawNails() {\n        const {n} = this.config;\n\n        for(let i=0; i < 4; i++) {\n            const side = SIDES[i];\n            for (let nail = 0; nail < n; nail++) {\n               //this.nails.addNail({ point: this.getPoint({ side, index: nail })})\n            }\n        }\n    }\n}\n\nexport default Eye;","import Spirals from \"./string_art_types/Spirals.js\";\nimport Spiral from './string_art_types/Spiral.js';\nimport Eye from './string_art_types/Eye.js';\nimport TimesTables from './string_art_types/TimesTables.js';\nimport Star from \"./string_art_types/Star.js\";\n\nconst patternTypes = [TimesTables, Spirals, Spiral, Eye, Star];\n\nexport default patternTypes;","import StringArt from \"../StringArt.js\";\nimport Circle from \"./Circle.js\";\n\nconst MARGIN = 20;\n\nexport default class TimesTables extends StringArt{\n    name = \"Times Tables\";\n    id = \"times_tables\";\n    link = \"https://www.youtube.com/watch?v=LWin7w9hF-E&ab_channel=Jorgedelatierra\";\n    controls = [\n        {\n            key: 'n',\n            label: 'Number of nails',\n            defaultValue: 180,\n            type: \"range\",\n            attr: {\n                min: 3,\n                max: 240,\n                step: 1\n            }\n        },\n        {\n            key: 'base',\n            label: 'Multiplication',\n            defaultValue: 2,\n            type: \"range\",\n            attr: {\n                min: 2,\n                max: 99,\n                step: 1\n            }\n        },\n        {\n            key: 'layers',\n            label: 'Layers',\n            defaultValue: 7,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 20,\n                step: 1\n            }\n        },\n        {\n            key: 'colorGroup',\n            label: 'Color',\n            type: 'group',\n            children: [\n                {\n                    key: 'multicolor',\n                    label: 'Use multiple colors',\n                    defaultValue: true,\n                    type: \"checkbox\",\n                },\n                {\n                    key: 'multicolorRange',\n                    label: 'Multicolor range',\n                    defaultValue: 180,\n                    type: \"range\",\n                    attr: {\n                        min: 1,\n                        max: 360,\n                        step: 1\n                    },\n                    show: ({multicolor}) => multicolor,\n                },\n                {\n                    key: 'multicolorStart',\n                    label: 'Multicolor start',\n                    defaultValue: 256,\n                    type: \"range\",\n                    attr: {\n                        min: 0,\n                        max: 360,\n                        step: 1\n                    },\n                    show: ({multicolor}) => multicolor,\n                },\n                {\n                    key: 'color',\n                    label: 'String color',\n                    defaultValue: \"#ff4d00\",\n                    type: \"color\",\n                    show: ({multicolor}) => !multicolor\n                },\n            ]\n        },\n    ];\n\n    get n() {\n        if (!this._n) {\n            const {n, layers} = this.config;\n            const extraNails = n % layers;\n            this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n        }\n\n        return this._n;\n    }\n\n    setUpDraw() {\n        this._n = null;\n        super.setUpDraw();\n\n        const {layers, multicolorRange} = this.config;\n        this.circle = new Circle({\n            size: this.size,\n            n: this.n,\n            margin: MARGIN\n        });\n        this.multiColorStep = multicolorRange / layers;\n        this.layerShift = Math.floor(this.n / layers);\n    }\n\n    *drawTimesTable({ shift = 0, color = \"#f00\", steps, time }) {\n        const {base} = this.config;\n        const n = this.n;\n        const stepsToRender = steps ?? n;\n\n        let point = this.circle.getPoint(shift);\n\n        for(let i=1; i <= stepsToRender; i++) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(...point);\n            point = this.circle.getPoint(i + shift);\n            this.ctx.lineTo(...point);\n            const toIndex = (i * base) % n;\n            this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n            this.ctx.strokeStyle = color;\n            this.ctx.stroke();\n            \n            yield { instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`, index: time * n + i };\n        }\n    }\n\n    *generateStrings() {\n        const {color, multicolor, layers} = this.config;\n\n        for(let time = 0; time < layers; time++) {\n            const timeColor = multicolor ? this.getTimeColor(time, layers) : color;\n            yield* this.drawTimesTable({ \n                time,\n                color: timeColor, \n                shift: this.layerShift * time,\n            });\n        }\n    }\n\n    drawNails() {\n        this.circle.drawNails(this.nails);\n    }\n\n    getTimeColor(time) {\n        const {multicolorStart, darkMode} = this.config;\n\n        return `hsl(${multicolorStart + time * this.multiColorStep}, 80%, ${darkMode ? 50 : 40}%)`;\n    }\n\n    getStepCount() {\n        return this.config.layers * this.n;\n    }\n}\n            ","import StringArt from \"../StringArt.js\";\nimport Circle from \"./Circle.js\";\n\nexport default class Spiral extends StringArt{\n    id = \"spiral\";\n    name = \"Spiral\";\n    link = \"https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1\";\n    controls = [\n        {\n            key: 'n',\n            label: 'Number of nails',\n            defaultValue: 144,\n            type: \"range\",\n            attr: {\n                min: 3,\n                max: 200,\n                step: 1\n            }\n        },\n        {\n            key: 'repetition',\n            label: 'Repetition',\n            defaultValue: 2,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 60,\n                step: 1\n            }\n        },\n        {\n            key: 'innerLength',\n            label: 'Spiral thickness',\n            defaultValue: 72,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 144,\n                step: 1,\n            }\n        },\n        {\n            key: 'rotation',\n            label: 'Rotation',\n            defaultValue: 0.49,\n            type: \"range\",\n            attr: {\n                min: 0,\n                max: 1,\n                step: 0.01,\n            }\n        },\n        {\n            key: 'layers',\n            label: 'Layers',\n            defaultValue: 9,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 20,\n                step: 1\n            }\n        },\n        {\n            key: 'layerSpread',\n            label: 'Layer spread',\n            defaultValue: 13,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 200,\n                step: 1\n            }\n        },\n        {\n            key: 'colorGroup',\n            label: 'Color',\n            type: 'group',\n            children: [\n                {\n                    key: 'multicolorRange',\n                    label: 'Multicolor range',\n                    defaultValue: 216,\n                    type: \"range\",\n                    attr: {\n                        min: 1,\n                        max: 360,\n                        step: 1\n                    },\n                },\n                {\n                    key: 'multicolorStart',\n                    label: 'Multicolor start',\n                    defaultValue: 263,\n                    type: \"range\",\n                    attr: {\n                        min: 0,\n                        max: 360,\n                        step: 1\n                    },\n                },\n                {\n                    key: 'multicolorByLightness',\n                    label: 'Multicolor by lightness',\n                    defaultValue: true,\n                    type: 'checkbox'\n                }\n            ]\n        }\n    ];\n\n    setUpDraw() {\n        super.setUpDraw();\n        const { n, rotation } = this.config;\n\n        this.circle = new Circle({\n            size: this.size,\n            n,\n            rotation,\n            margin: 20,\n        });\n        const {layers, multicolorRange, multicolorByLightness, layerSpread} = this.config;\n        this.multiColorStep = multicolorRange / layers;\n        this.multiColorLightnessStep = multicolorByLightness ? 100 / layers : 1;\n        this.layerShift = layerSpread;\n    }\n\n    *drawSpiral({ shift = 0, color = \"#f00\" } = {}) {\n        const {repetition, innerLength} = this.config;\n        \n        this.ctx.moveTo(...this.circle.getPoint(shift));\n        \n        let currentInnerLength = innerLength;\n        let repetitionCount = 0;\n        this.ctx.strokeStyle = color;\n        \n        for(let i=0; currentInnerLength; i++) {\n            this.ctx.beginPath();\n            this.ctx.lineTo(...this.circle.getPoint(i + currentInnerLength + shift));\n            this.ctx.lineTo(...this.circle.getPoint(i + 1 + shift));\n            this.ctx.stroke();\n\n            repetitionCount++;\n            if (repetitionCount === repetition) {\n                currentInnerLength--;\n                repetitionCount = 0;\n            }\n\n            yield i;\n        }\n      \n    }\n\n    *generateStrings() {\n        const { layers } = this.config;\n        for(let layer = 0; layer < layers; layer++) {\n            yield* this.drawSpiral({ \n                color: this.getLayerColor(layer), \n                shift: -this.layerShift * layer \n            });\n        }\n    }\n\n    getLayerColor(layer) {\n        const {multicolorStart, darkMode, multicolorByLightness} = this.config;\n        const lightness = multicolorByLightness ? this.multiColorLightnessStep * layer : darkMode ? 50 : 40;\n\n        return `hsl(${multicolorStart + layer * this.multiColorStep}, 80%, ${lightness}%)`;\n    }\n\n    getStepCount() {\n        const {innerLength, repetition, layers} = this.config;\n        return layers * innerLength * repetition;\n    }\n\n    drawNails() {\n        this.circle.drawNails(this.nails);\n    }\n}","import StringArt from \"../StringArt.js\";\nimport Circle from \"./Circle.js\";\n\nexport default class Star extends StringArt{\n    name = \"Star\";\n    id = \"star\";\n    link = \"https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj\";\n    controls = [\n        {\n            key: 'sides',\n            label: 'Sides',\n            defaultValue: 3,\n            type: 'range',\n            attr: {\n                min: 3,\n                max: 20,\n                step: 1\n            }\n        },\n        {\n            key: 'sideNails',\n            label: 'Nails per side',\n            defaultValue: 40,\n            type: \"range\",\n            attr: {\n                min: 1,\n                max: 200,\n                step: 1\n            }\n        },\n        {\n            key: 'rotation',\n            label: 'Rotation',\n            defaultValue: 0,\n            type: \"range\",\n            attr: {\n                min: 0,\n                max: 1,\n                step: 0.01,\n            }\n        },\n        {\n            key: 'colorGroup',\n            label: 'Color',\n            type: 'group',\n            children: [\n                {\n                    key: 'innerColor',\n                    label: 'Star color',\n                    defaultValue: \"#2ec0ff\",\n                    type: \"color\",\n                },\n                {\n                    key: 'outterColor',\n                    label: 'Outter color',\n                    defaultValue: \"#2a82c6\",\n                    type: \"color\",\n                },\n            ]\n        }\n    ];\n\n    get n() {\n        if (!this._n) {\n            const {n, sides} = this.config;\n            const extraNails = n % sides;\n            this._n = n - extraNails;\n        }\n\n        return this._n;\n    }\n\n    setUpDraw() {\n        this._n = null;\n        super.setUpDraw();\n\n        const { sides, rotation, sideNails, margin = 0 } = this.config;\n        this.circle = new Circle({\n            size: this.size,\n            n: sideNails * sides,\n            margin,\n            rotation,\n        });\n\n        this.sideAngle = Math.PI * 2 / sides;\n        this.nailSpacing = this.circle.radius / sideNails;\n        this.starCenterStart = (sideNails % 1) * this.nailSpacing;     \n\n        this.sides = new Array(sides).fill(null).map((_, side) => {\n            const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n            const circlePointsStart = side * sideNails;\n\n            return {\n                sinSideAngle: Math.sin(sideAngle),\n                cosSideAngle: Math.cos(sideAngle),\n                circlePointsStart,\n                circlePointsEnd: circlePointsStart + sideNails\n            };\n        });\n    }\n\n    getStarPoint({ side, sideIndex }) {\n        const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n        const {sinSideAngle, cosSideAngle} = this.sides[side];\n        const [centerX, centerY] = this.circle.center;\n\n        return [\n            centerX + sinSideAngle * radius,\n            centerY + cosSideAngle * radius\n        ];\n    }\n\n    *generateStarPoints({ reverseOrder  = false} = {}) {\n        const {sides, sideNails} = this.config;\n\n        for (let side = 0; side < sides; side++) {\n            const prevSide = side === 0 ? sides - 1 : side - 1;\n            for (let i=0; i < sideNails; i++) {\n                const sideIndex = reverseOrder ? sideNails - i : i;\n                yield { side, prevSide, sideIndex, point: this.getStarPoint({ side, sideIndex }) };\n            }\n        }\n    }\n\n    *drawStar() {\n        const {innerColor, sideNails} = this.config;\n\n        this.ctx.strokeStyle = innerColor;\n        let prevPoint;\n\n        for (const { prevSide, sideIndex, point} of this.generateStarPoints()) {\n            this.ctx.beginPath();\n\n            if (sideIndex && !(sideIndex % 2)) {\n                this.ctx.moveTo(...prevPoint);\n                this.ctx.lineTo(...point);\n            } else {\n                this.ctx.moveTo(...point);\n            }\n\n            const prevSideIndex = sideNails - sideIndex;\n            this.ctx.lineTo(...this.getStarPoint({ side: prevSide, sideIndex: prevSideIndex}))\n            prevPoint = point;\n            this.ctx.stroke();\n            yield;\n        }\n    }\n\n    *drawCircle() {\n        const {outterColor, sides} = this.config;\n\n        let prevCirclePoint;\n        let isPrevSide = false;\n        this.ctx.strokeStyle = outterColor;\n        for (const { side, prevSide, sideIndex, point} of this.generateStarPoints({ reverseOrder: true })) {\n            this.ctx.beginPath();\n            if (!prevCirclePoint) {\n                prevCirclePoint = this.circle.getPoint(this.sides[prevSide].circlePointsStart);\n            }\n           \n            this.ctx.moveTo(...prevCirclePoint);\n\n            this.ctx.lineTo(...point);\n            this.ctx.stroke();\n\n            yield;\n\n            this.ctx.beginPath();\n            this.ctx.moveTo(...point);\n            const nextPointIndex = isPrevSide \n                ? this.sides[prevSide].circlePointsEnd - sideIndex \n                : this.sides[side].circlePointsStart + sideIndex;\n\n            const nextPoint = this.circle.getPoint(nextPointIndex);\n            this.ctx.lineTo(...nextPoint);\n\n            prevCirclePoint = this.circle.getPoint(isPrevSide \n                ? this.sides[prevSide].circlePointsEnd - sideIndex + 1\n                : this.sides[side].circlePointsStart + sideIndex - 1);\n\n            this.ctx.lineTo(...prevCirclePoint);\n\n            this.ctx.stroke();\n            isPrevSide = !isPrevSide;\n            yield;\n        }\n    }\n\n    *generateStrings() {\n        yield* this.drawCircle();\n        yield* this.drawStar();\n    }\n\n    drawNails() {\n        this.circle.drawNails(this.nails);\n\n        for (const {point} of this.generateStarPoints()) {\n            this.nails.addNail({ point });\n        }\n\n        this.circle.drawNails(this.nails);\n    }\n\n    getStepCount() {\n        const {sides, sideNails} = this.config;\n        const starCount = sideNails * sides;\n        return starCount * 3; // Once for each side + two more times for the side's circle\n    }\n}","const elements = {\n    controls: document.querySelector(\"#controls\"),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nlet inputTimeout;\n\nexport default class EditorControls {\n    constructor({pattern}) {\n        this.pattern = pattern;\n        this.eventHandlers = {\n            input: new Set(),\n            change: new Set()\n        }\n\n        this._wrappedOnInput = e => this._onInput(e);\n\n        elements.controls.addEventListener(\"input\", this._wrappedOnInput);\n        this.controlElements = {};\n        this.renderControls();\n    }\n\n    destroy() {\n        elements.controls.removeEventListener(\"input\", this._wrappedOnInput);\n        elements.controls.innerHTML = \"\";\n    }\n\n    addEventListener(event, eventHandler) {\n        if (!EVENTS.has(event)) {\n            throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n        }\n\n        if (!(eventHandler instanceof Function)) {\n            throw new Error('Invalid event handler.');\n        }\n\n        this.eventHandlers[event].add(eventHandler);\n    }\n\n    _triggerEvent(event, eventData) {\n        for(const eventHandler of this.eventHandlers[event]) {\n            eventHandler(eventData);\n        }\n    }\n\n    _onInput(e) {\n        requestAnimationFrame(() => {\n            clearTimeout(inputTimeout);\n\n            const inputValue = getInputValue(e.target.type, e.target);\n            const controlKey = e.target.id.replace(/^config_/, '');\n\n            this.pattern.config = Object.freeze({\n                ...this.pattern.config,\n                [controlKey]: inputValue\n            });\n            \n            const inputValueEl = this.controlElements[controlKey].value;\n            if (inputValueEl) {\n                inputValueEl.innerText = e.target.value;\n            }\n\n            const eventData = Object.freeze({\n                control: controlKey, \n                value: inputValue, \n                originalEvent: e,\n                pattern: this.pattern,\n            });\n\n            this._triggerEvent('input', eventData);\n\n            inputTimeout = setTimeout(() => {\n                this._triggerEvent('change', eventData);\n                this.updateControlsVisibility();\n            }, 100);\n        });\n    }\n\n    updateControlsVisibility(configControls = this.pattern.configControls) {\n        configControls.forEach(control => {\n            if (control.show) {\n                const shouldShowControl = control.show(this.pattern.config);\n                const controlEl = this.controlElements[control.key].control;\n                if (controlEl) {\n                    if (shouldShowControl) {\n                        controlEl.removeAttribute('hidden');\n                    } else {\n                        controlEl.setAttribute('hidden', 'hidden');\n                    }\n                }\n            }\n    \n            if (control.isDisabled) {\n                const shouldDisableControl = control.isDisabled(this.pattern.config);\n                const inputEl = this.controlElements[control.key].input;\n                if (inputEl) {\n                    if (shouldDisableControl) {\n                        inputEl.setAttribute('disabled', 'disabled');\n                    } else {\n                        inputEl.removeAttribute('disabled');\n                    }\n                }\n            }\n    \n            if (control.children) {\n                this.updateControlsVisibility(control.children);\n            }\n        });\n    }\n\n    updateInputs(config) {\n        Object.entries(config).forEach(([key, value]) => {\n            const {input, value: valueEl} = this.controlElements[key];\n            if (input) {\n                if (input.type === \"checkbox\") {\n                    input.checked = value;\n                } else {\n                    input.value = value;\n                }\n                if (valueEl) {\n                    valueEl.innerText = value;\n                }\n            }\n        });\n    }\n\n    renderControls(containerEl = elements.controls, _configControls) {\n        const configControls = _configControls ?? this.pattern.configControls;\n        containerEl.innerHTML = \"\";\n        const controlsFragment = document.createDocumentFragment();\n        \n\n        configControls.forEach(control => {\n            const controlId = `config_${control.key}`;\n            const controlElements = this.controlElements[control.key] = {};\n\n            let controlEl;\n            \n            if (control.type === \"group\") {\n                controlEl = document.createElement(\"fieldset\");\n                const groupTitleEl = document.createElement(\"legend\");\n                groupTitleEl.innerText = control.label;\n                controlEl.appendChild(groupTitleEl);\n                controlEl.className = \"control control_group\";\n                const childrenContainer = document.createElement('div');\n                controlEl.appendChild(childrenContainer);\n                this.renderControls(childrenContainer, control.children);\n            }\n            else {\n                controlEl = document.createElement(\"div\");\n                controlEl.className = \"control\";\n    \n                const label = document.createElement(\"label\");\n                label.innerHTML = control.label;\n                label.setAttribute(\"for\", controlId);\n    \n                const inputEl = controlElements.input = document.createElement(\"input\");\n                inputEl.setAttribute(\"type\", control.type);\n                const inputValue = this.pattern.config[control.key] ?? control.defaultValue;\n    \n                if (control.attr) {\n                    Object.entries(control.attr).forEach(([attr, value]) => {\n                        const realValue = value instanceof Function ? value(this.pattern) : value;\n                        inputEl.setAttribute(attr, realValue)\n                    });\n                }\n    \n                if (control.type === \"checkbox\") {\n                    inputEl.checked = inputValue;\n                    controlEl.appendChild(inputEl);\n                    controlEl.appendChild(label);\n                } else {\n                    controlEl.appendChild(label);\n                    controlEl.appendChild(inputEl);\n                    inputEl.value = inputValue;\n                    const inputValueEl = controlElements.value = document.createElement('span');\n                    inputValueEl.id = `config_${control.key}_value`;\n                    inputValueEl.innerText = inputValue;\n                    inputValueEl.className = \"control_input_value\";\n                    controlEl.appendChild(inputValueEl);\n                }\n                inputEl.id = controlId;\n            }\n    \n            this.controlElements[control.key].control = controlEl;\n            controlEl.id = `control_${control.key}`;\n            controlsFragment.appendChild(controlEl);\n        });\n    \n        containerEl.appendChild(controlsFragment);\n        requestAnimationFrame(() => this.updateControlsVisibility())\n    }\n    \n}\n\n\nfunction getInputValue(type, inputElement) {\n    switch(type) {\n        case 'range':\n            return parseFloat(inputElement.value);\n        case 'checkbox':\n            return inputElement.checked;\n        default:\n            return inputElement.value;\n    }\n}","const elements = {\n    sizeSelect: document.querySelector(\"#size_select\"),\n    sizeCustom: document.querySelector(\"#size_custom\"),\n    width: document.querySelector(\"#size_custom_width\"),\n    height: document.querySelector(\"#size_custom_height\"),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n    return Math.floor(cm / 2.54 * dpi);\n}\n\nconst SCREEN_SIZE = [\n    Math.floor(window.screen.width * window.devicePixelRatio),\n    Math.floor(window.screen.height * window.devicePixelRatio),\n];\n\nconst SIZES = [\n    { id: 'fit', name: 'Fit to screen' },\n    { id: 'A4', value: [20, 28].map(v => cmToPixels(v)) },\n    { id: 'A3', value: [28, 40].map(v => cmToPixels(v)) },\n    { id: 'screen', name: `Screen size (${SCREEN_SIZE.join('x')})`, value: SCREEN_SIZE},\n    { id: 'custom', name: 'Custom...' }\n];\n\nexport default class EditorSizeControls {\n    element = document.querySelector(\"#size_controls\");\n\n    constructor({ getCurrentSize }) {\n        const sizeOptionsFragment = document.createDocumentFragment();\n        SIZES.forEach(size => {\n            const sizeListItem = document.createElement('option');\n            sizeListItem.setAttribute('value', size.id);\n            sizeListItem.innerText = size.name ?? size.id;\n            sizeOptionsFragment.appendChild(sizeListItem);\n        });\n        elements.sizeSelect.appendChild(sizeOptionsFragment)\n        elements.sizeSelect.addEventListener(\"change\", e => {\n            const selectedSizeId = e.target.value;\n            const size = SIZES.find(({id}) => id === selectedSizeId);\n\n            if (size.id === \"custom\") {\n                elements.sizeCustom.removeAttribute('hidden');\n                const [width, height] = getCurrentSize();\n                elements.width.value = width;\n                elements.height.value = height;\n            } else {\n                elements.sizeCustom.setAttribute('hidden', 'hidden');\n                this._notifyOnChange(size.value);\n            }\n        });\n\n        elements.sizeCustom.addEventListener(\"focusin\", e => {\n            e.target.select();\n        });\n\n        elements.sizeCustom.addEventListener('input', () => {\n            this._notifyOnChange([\n                elements.width.value ? parseInt(elements.width.value) : null,\n                elements.height.value ? parseInt(elements.height.value) : null\n            ]);\n        });\n    }\n\n    _notifyOnChange([width, height] = []) {\n        this.element.dispatchEvent(new CustomEvent('sizechange', { detail: { width, height }}));\n    }\n}\n","import Player from \"./editor/Player.js\";\nimport patternTypes from \"./pattern_types.js\";\nimport EditorControls from \"./editor/EditorControls.js\";\nimport EditorSizeControls from \"./editor/EditorSizeControls.js\";\n\nconst elements = {\n    canvas: document.querySelector(\"canvas\"),\n    patternSelector: document.querySelector(\"#pattern_select\"),\n    patternLink: document.querySelector(\"#pattern_link\"),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector(\"#player\"));\nconst sizeControls = new EditorSizeControls({\n    getCurrentSize: () => [\n        elements.canvas.clientWidth,\n        elements.canvas.clientHeight\n    ]\n});\n\nlet controls;\n\nmain();\n\nfunction main() {\n    initRouting();\n    initSize();\n    initControls();\n\n    if (history.state?.pattern) {\n        updateState(history.state);\n    } else {\n        const queryParams = new URLSearchParams(document.location.search);\n        const queryPattern = queryParams.get('pattern');\n\n        if (queryPattern) {\n            const config = queryParams.get('config');\n            updateState({ pattern: queryPattern, config })\n        } else {\n            selectPattern(patterns[0]);\n        }\n    }\n\n    window.addEventListener(\"resize\", () =>\n        currentPattern.draw()\n    );\n\n    elements.canvas.addEventListener('click', () => {\n        player.toggle();\n    });\n}\n\nfunction onInputsChange() {\n    player.update(currentPattern, { goToEnd: false });\n    const configQuery = JSON.stringify(currentPattern.config);\n    history.replaceState({\n        pattern: currentPattern.id,\n        config: configQuery\n    }, currentPattern.name, `?pattern=${currentPattern.id}&config=${encodeURIComponent(configQuery)}`);\n}\n\nfunction initControls() {\n    patterns.forEach(pattern => {\n        const option = document.createElement('option');\n        option.innerText = pattern.name;\n        option.value = pattern.id;\n        elements.patternSelector.appendChild(option);\n    });\n\n    elements.patternSelector.addEventListener('change', e => {\n        const patternId = e.target.value;\n        selectPattern(findPatternById(patternId));\n        history.pushState({ pattern: patternId }, patternId, \"?pattern=\" + patternId)\n    });\n}\n\nfunction initSize() {\n    sizeControls.element.addEventListener('sizechange', ({ detail: {width, height}}) => {\n        elements.canvas.removeAttribute('width');\n        elements.canvas.removeAttribute('height');\n\n        if (width && height) {\n            elements.canvas.style.width = `${width}px`;\n            elements.canvas.style.height = `${height}px`;\n        } else {\n            elements.canvas.removeAttribute('style');\n        }\n\n        currentPattern.draw();\n    });\n}\n\nfunction initRouting() {\n    window.addEventListener('popstate', ({state}) => {\n        updateState(state);\n    });\n}\n\nfunction updateState(state) {\n    const pattern = findPatternById(state.pattern);\n    elements.patternSelector.value = pattern.id;\n    selectPattern(pattern, {\n        draw: false,\n        config: state.config ? JSON.parse(state.config) : null\n    });\n\n    currentPattern.draw();\n}\n\nfunction findPatternById(patternId) {\n    const pattern = patterns.find(({id}) => id === patternId);\n    if (!pattern) {\n        throw new Error(`Pattern with id \"${patternId} not found!`);\n    }\n    return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true} = {}) {\n    currentPattern = pattern;\n    if (config) {\n        currentPattern.config = config;\n    }\n    if (controls) {\n        controls.destroy();\n    }\n    controls = new EditorControls({pattern, config});\n    controls.addEventListener('input', () => currentPattern.draw());\n    controls.addEventListener('change', onInputsChange);\n\n    elements.patternLink.setAttribute(\"href\", pattern.link);\n    if (draw) {\n        currentPattern.draw();\n    }\n    player.update(currentPattern);\n    document.title = `${pattern.name} - String Art Studio`;\n}\n","export default class Player {\n    constructor(parentEl) {\n        this.elements = {\n            player: parentEl,\n            step: parentEl.querySelector('#step'),\n            stepInstructions: parentEl.querySelector('#step_instructions'),\n            playerPosition: parentEl.querySelector('#player_position'),\n            playBtn: parentEl.querySelector('#play_btn'),\n            pauseBtn: parentEl.querySelector('#pause_btn')\n        };\n        this.stepCount = 0;\n        this._isPlaying = false;\n        \n        this.elements.playerPosition.addEventListener('input', ({ target }) => {\n            this.goto(+target.value)\n        });\n\n        this.elements.playBtn.addEventListener('click', () => {\n            this.play();\n        });\n\n        this.elements.pauseBtn.addEventListener('click', () => {\n            this.pause();\n        });\n    }\n\n    updateStatus(isPlaying) {\n        if (this._isPlaying !== isPlaying) {\n            this.elements.player.classList.toggle('playing');\n            this._isPlaying = isPlaying;\n        }\n    }\n\n    update(stringArt) {\n        this.stringArt = stringArt;\n        this.stepCount = stringArt.getStepCount();\n        this.elements.playerPosition.setAttribute('max', this.stepCount);\n        this.goto(this.stepCount);\n    }\n\n    updatePosition(position) {\n        this.elements.step.innerText = `${position}/${this.stepCount}`;\n        this.elements.playerPosition.value = position;\n    }\n    goto(position) {\n        this.pause();\n        this.updatePosition(position);\n        this.stringArt.goto(position);\n    }\n\n    setInstructions(instructions) {\n        this.elements.stepInstructions.innerText = instructions;\n    }\n\n    play() {\n        this.updateStatus(true);\n        cancelAnimationFrame(this.renderRafId);\n\n        if (this.stringArt.position === this.stepCount) {\n            this.stringArt.goto(0);\n        }\n\n        const self = this;\n\n        step();\n\n        function step() {\n            if (!self.stringArt.drawNext().done) {\n                self.renderRafId = requestAnimationFrame(step);\n            } else {\n                self.updateStatus(false);\n            }\n            self.updatePosition(self.stringArt.position);\n        }\n    }\n\n    pause() {\n        cancelAnimationFrame(this.renderRafId);\n        this.updateStatus(false);\n    }\n\n    toggle() {\n        if (this._isPlaying) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    }\n}\n"],"names":["$a8180031c78213da$var$PI2","Math","PI","canvas","config","this","context","getContext","setConfig","nails","nailRadius","darkMode","nailsColor","addNail","nail","push","fill","globalCompositeOperation","beginPath","forEach","point","x","y","moveTo","arc","fillStyle","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","key","label","type","children","defaultValue","isDisabled","showNails","attr","min","max","step","show","showStrings","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","Error","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","controls","concat","defaultConfig","_defaultConfig","_config","value","Object","assign","setUpDraw","removeAttribute","canvasScreenSize","clientWidth","clientHeight","width","height","size","map","v","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$17fe1039ca333e84$export$2e2bcd8739ae039","id","link","n","radiusIncrease","angleStep","nSpirals","currentRadius","angle","centerx","centery","i","s","rotation","sin","cos","points","generatePoints","index","strokeStyle","color","lastPoint","lineTo","stroke","number","$188437ce07b37c18$var$PI2","margin","radius","indexAngle","rotationAngle","getPoint","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","super","maxSize","nailSpacing","layerAngle","layerStart","theta","pivot","cosAngle","sinAngle","side","sideIndex","indexOf","nextSide","length","nextSideRotation","nLayer","floor","sideProps","layer","color1","color2","colors","layerSize","pow","drawSide","layers","drawLayer","count","$8b13425f1e264518$export$2e2bcd8739ae039","multicolor","_n","extraNails","multicolorRange","circle","$188437ce07b37c18$export$2e2bcd8739ae039","multiColorStep","layerShift","shift","steps","time","base","stepsToRender","toIndex","instructions","timeColor","getTimeColor","drawTimesTable","multicolorStart","multicolorByLightness","layerSpread","multiColorLightnessStep","repetition","innerLength","currentInnerLength","repetitionCount","drawSpiral","getLayerColor","lightness","sides","sideNails","sideAngle","starCenterStart","Array","_","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerX","centerY","reverseOrder","prevSide","innerColor","prevPoint","generateStarPoints","prevSideIndex","outterColor","prevCirclePoint","isPrevSide","nextPointIndex","nextPoint","drawCircle","drawStar","$2fc16ffa17719734$var$elements","document","querySelector","$2fc16ffa17719734$var$EVENTS","Set","$2fc16ffa17719734$var$inputTimeout","pattern","eventHandlers","input","change","_wrappedOnInput","e","_onInput","addEventListener","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","has","Function","add","_triggerEvent","eventData","requestAnimationFrame","clearTimeout","inputValue","inputElement","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","target","controlKey","replace","freeze","inputValueEl","innerText","control","originalEvent","setTimeout","updateControlsVisibility","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","join","$52852adbc3c0b381$var$elements","patternSelector","patternLink","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","stepInstructions","playerPosition","playBtn","pauseBtn","stepCount","_isPlaying","play","pause","updateStatus","isPlaying","classList","toggle","update","stringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","self","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSizeId","find","_notifyOnChange","select","parseInt","dispatchEvent","CustomEvent","detail","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$onInputsChange","goToEnd","configQuery","JSON","stringify","history","replaceState","encodeURIComponent","$52852adbc3c0b381$var$updateState","state","$52852adbc3c0b381$var$findPatternById","$52852adbc3c0b381$var$selectPattern","parse","patternId","$2fc16ffa17719734$export$2e2bcd8739ae039","title","$52852adbc3c0b381$var$initRouting","style","$52852adbc3c0b381$var$initSize","option","pushState","$52852adbc3c0b381$var$initControls","queryParams","URLSearchParams","location","search","queryPattern","get","$52852adbc3c0b381$var$main"],"version":3,"file":"index.62a9f4f5.js.map"}