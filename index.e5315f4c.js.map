{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/string_art_types/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Eye.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/TimesTables.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Circles.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/main.js","src/scripts/editor/Player.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / colorCount\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {} }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: controls,\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const PI2 = Math.PI * 2;\nconst NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(canvas, config) {\n    this.context = canvas.getContext('2d');\n    this.setConfig(config);\n    this.centerX = canvas.width / 2;\n    this.nails = [];\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    this.nails.push(nail);\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.beginPath();\n    this.context.fillStyle = this.nailsColor;\n    this.context.textBaseline = 'middle';\n    this.context.font = `${this.nailNumbersFontSize}px sans-serif`;\n    const nailNumberOffset = this.nailRadius + NUMBER_MARGIN;\n\n    this.nails.forEach(({ point: [x, y], number }) => {\n      this.context.moveTo(x + this.nailRadius, y);\n      this.context.arc(x, y, this.nailRadius, 0, PI2);\n      if (drawNumbers && number !== undefined && number !== null) {\n        const isRightAlign = x < this.centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.context.textAlign = isRightAlign ? 'right' : 'left';\n        this.context.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.context.fill();\n    this.nails = [];\n  }\n}\n","import Nails from './Nails.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.2 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(canvas) {\n    if (!canvas) {\n      throw new Error('Canvas not specified!');\n    }\n\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = flattenConfig(this.configControls);\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  getSize() {\n    const canvasScreenSize = [\n      this.canvas.clientWidth,\n      this.canvas.clientHeight,\n    ];\n    return canvasScreenSize.map(v => v * this.pixelRatio);\n  }\n\n  setUpDraw() {\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.center = this.size.map(value => value / 2);\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.canvas, this.config);\n    }\n\n    this.ctx.clearRect(0, 0, ...this.size);\n    this.ctx.lineWidth = this.config.stringWidth;\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n    } = this.config;\n\n    this.ctx.beginPath();\n    this.ctx.globalCompositeOperation = 'destination-over';\n    this.ctx.fillStyle = customBackgroundColor\n      ? backgroundColor\n      : darkMode\n      ? COLORS.dark\n      : COLORS.light;\n    this.ctx.fillRect(0, 0, ...this.size);\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art on canvas\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","import Nails from '../Nails.js';\n\nconst PI2 = Math.PI * 2;\n\nexport default class Circle {\n  constructor(config) {\n    const {\n      n,\n      size,\n      margin = 0,\n      rotation = 0,\n      center,\n      radius,\n      reverse = false,\n    } = (this.config = config);\n\n    this.center = center ?? size.map(v => v / 2);\n    this.radius = radius ?? Math.min(...this.center) - margin;\n\n    this.indexAngle = PI2 / n;\n    this.rotationAngle = -PI2 * rotation;\n    this.isReverse = reverse;\n  }\n\n  getPoint(index = 0) {\n    const realIndex = this.isReverse ? this.config.n - 1 - index : index;\n\n    return [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 5,\n      type: 'range',\n      attr: { min: 1, max: 60, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount } = this.config;\n    this.layersCount = layers ?? 1;\n\n    this.circle = new Circle({\n      size: this.size,\n      n,\n      rotation,\n      margin,\n    });\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { repetition, innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.ctx.strokeStyle = color;\n    let prevPoint = this.circle.getPoint(shift);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      const nextPointIndex = isPrevPoint\n        ? i + shift\n        : i + currentInnerLength + shift;\n\n      this.ctx.lineTo(...this.circle.getPoint(nextPointIndex));\n      repetitionCount++;\n      if (repetitionCount === repetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n        i++;\n        this.ctx.lineTo(...this.circle.getPoint(nextPointIndex + 1));\n        prevPoint = this.circle.getPoint(nextPointIndex + 2);\n      } else {\n        prevPoint = this.circle.getPoint(nextPointIndex + 1);\n      }\n\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n } = this.config;\n    return this.layersCount * Math.round(innerLength * n) * repetition;\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\nimport Color from '../helpers/Color.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n    const PI2 = Math.PI * 2;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.ctx.beginPath();\n    this.ctx.moveTo(...this.center);\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    let lastPoint;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      if (lastPoint) {\n        this.ctx.moveTo(...lastPoint);\n        this.ctx.lineTo(...point);\n      }\n      lastPoint = point;\n      this.ctx.stroke();\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n}\n\nexport default Spirals;\n","import StringArt from '../StringArt.js';\n\nconst MARGIN = 20;\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * MARGIN;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(\n        ...this.getPoint({ side, index: i, rotation, ...sideProps })\n      );\n      this.ctx.lineTo(\n        ...this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize =\n      Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * MARGIN;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n}\n\nexport default Eye;\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport TimesTables from './string_art_types/TimesTables.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Circles from './string_art_types/Circles.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  TimesTables,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Circles,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0 } = this.config;\n    this.circle = new Circle({\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    });\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails } = this.config;\n\n    this.ctx.strokeStyle = innerColor;\n    let prevPoint;\n\n    for (const { prevSide, sideIndex, point } of this.generateStarPoints()) {\n      this.ctx.beginPath();\n\n      if (sideIndex && !(sideIndex % 2)) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...point);\n      } else {\n        this.ctx.moveTo(...point);\n      }\n\n      const prevSideIndex = sideNails - sideIndex;\n      this.ctx.lineTo(\n        ...this.getStarPoint({ side: prevSide, sideIndex: prevSideIndex })\n      );\n      prevPoint = point;\n      this.ctx.stroke();\n      yield;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor } = this.config;\n\n    let prevCirclePoint;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = outterColor;\n    for (const { side, prevSide, sideIndex, point } of this.generateStarPoints({\n      reverseOrder: true,\n    })) {\n      this.ctx.beginPath();\n      if (!prevCirclePoint) {\n        prevCirclePoint = this.circle.getPoint(\n          this.sides[prevSide].circlePointsStart\n        );\n      }\n\n      this.ctx.moveTo(...prevCirclePoint);\n\n      this.ctx.lineTo(...point);\n      this.ctx.stroke();\n\n      yield;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      const nextPointIndex = isPrevSide\n        ? this.sides[prevSide].circlePointsEnd - sideIndex\n        : this.sides[side].circlePointsStart + sideIndex;\n\n      const nextPoint = this.circle.getPoint(nextPointIndex);\n      this.ctx.lineTo(...nextPoint);\n\n      prevCirclePoint = this.circle.getPoint(\n        isPrevSide\n          ? this.sides[prevSide].circlePointsEnd - sideIndex + 1\n          : this.sides[side].circlePointsStart + sideIndex - 1\n      );\n\n      this.ctx.lineTo(...prevCirclePoint);\n\n      this.ctx.stroke();\n      isPrevSide = !isPrevSide;\n      yield;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails } = this.config;\n    const starCount = sideNails * sides;\n    return starCount * 3; // Once for each side + two more times for the side's circle\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size1',\n              label: 'Size',\n              defaultValue: 0.25,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size1, n }) => Math.round(n * size1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'end1',\n              label: 'End Position',\n              defaultValue: 1,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end1, n }) => Math.round(n * end1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'color1',\n              label: 'Color',\n              defaultValue: '#a94fb0',\n              type: 'color',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size2',\n              label: 'Size',\n              defaultValue: 0.125,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size2, n }) => Math.round(n * size2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'end2',\n              label: 'End Position',\n              defaultValue: 0.888,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'color2',\n              label: 'Color',\n              defaultValue: '#ec6ad0',\n              type: 'color',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size3',\n              label: 'Size',\n              defaultValue: 0,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size3, n }) => Math.round(n * size3),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'end3',\n              label: 'End Position',\n              defaultValue: 0.826,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'color3',\n              label: 'Color',\n              defaultValue: '#f08ad5',\n              type: 'color',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: true,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const circle = new Circle({\n      size: this.getSize(),\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    });\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = color;\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      this.ctx.beginPath();\n\n      if (prevPoint) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...this.getPoint(prevPointIndex + advance));\n      } else {\n        this.ctx.moveTo(...this.getPoint(getPointIndex(index)));\n      }\n\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      prevPoint = this.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nconst MARGIN = 20;\n\nexport default class TimesTables extends StringArt {\n  name = 'Times Tables';\n  id = 'times_tables';\n  link =\n    'https://www.youtube.com/watch?v=LWin7w9hF-E&ab_channel=Jorgedelatierra';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation } = this.config;\n    this.circle = new Circle({\n      size: this.size,\n      n: this.n,\n      margin: MARGIN,\n      rotation,\n    });\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', steps, time }) {\n    const { base } = this.config;\n    const n = this.n;\n    const stepsToRender = steps ?? n;\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= stepsToRender; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      point = this.circle.getPoint(i + shift);\n      this.ctx.lineTo(...point);\n      const toIndex = (i * base) % n;\n      this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    return this.config.layers * this.n;\n  }\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\nimport Spiral from './Spiral.js';\n\nexport default class Wave extends Spiral {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 1,\n      type: 'range',\n      attr: { min: 1, max: 60, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.5,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 0.075,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n  }\n\n  *generateStrings() {\n    for (let layer = 0; layer < this.layersCount; layer++) {\n      yield* this.drawSpiral({\n        color: this.color.getColor(layer),\n        shift: -this.layerShift * layer,\n      });\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class Circles extends StringArt {\n  name = 'Circles';\n  id = 'circles';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.ctx.strokeStyle = color;\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        this.ctx.beginPath();\n        this.ctx.moveTo(...(prevCirclePoint ?? this.getPoint(layer, i)));\n\n        if (layerIndex === 0 && i) {\n          this.ctx.lineTo(...this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n        this.ctx.lineTo(...prevCirclePoint);\n        this.ctx.stroke();\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  _onInput(e) {\n    requestAnimationFrame(() => {\n      clearTimeout(inputTimeout);\n\n      const inputValue = getInputValue(e.target.type, e.target);\n      const controlKey = e.target.id.replace(/^config_/, '');\n\n      this.pattern.config = Object.freeze({\n        ...this.pattern.config,\n        [controlKey]: inputValue,\n      });\n\n      const { config, displayValue } = this.controlElements[controlKey];\n      if (displayValue) {\n        const formattedValue = config.displayValue\n          ? config.displayValue(this.pattern.config, config)\n          : e.target.value;\n        displayValue.innerText = formattedValue;\n      }\n\n      const eventData = Object.freeze({\n        control: controlKey,\n        value: inputValue,\n        originalEvent: e,\n        pattern: this.pattern,\n      });\n\n      this._triggerEvent('input', eventData);\n\n      inputTimeout = setTimeout(() => {\n        this._triggerEvent('change', eventData);\n        this.updateControlsVisibility();\n      }, 100);\n    });\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\n\nconst elements = {\n  canvas: document.querySelector('canvas'),\n  patternSelector: document.querySelector('#pattern_select'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nlet controls;\n\nwindow.addEventListener('load', main);\n\nfunction main() {\n  initRouting();\n  initSize();\n  initControls();\n\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      selectPattern(patterns[0]);\n    }\n  }\n\n  window.addEventListener('resize', () => currentPattern.draw());\n\n  elements.canvas.addEventListener('click', () => {\n    player.toggle();\n  });\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = elements.canvas.toDataURL('image/png');\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n}\n\nfunction reset() {\n  setCurrentPattern(currentPattern, { config: {} });\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? JSON.stringify(currentPattern.config) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig ? `config=${encodeURIComponent(configQuery)}` : ''\n    }`\n  );\n}\n\nfunction initControls() {\n  patterns.forEach(pattern => {\n    const option = document.createElement('option');\n    option.innerText = pattern.name;\n    option.value = pattern.id;\n    elements.patternSelector.appendChild(option);\n  });\n\n  elements.patternSelector.addEventListener('change', e => {\n    const patternId = e.target.value;\n    setCurrentPattern(findPatternById(patternId));\n  });\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize({ width, height }) {\n  elements.canvas.removeAttribute('width');\n  elements.canvas.removeAttribute('height');\n\n  if (width && height) {\n    elements.canvas.style.width = `${width}px`;\n    elements.canvas.style.height = `${height}px`;\n  } else {\n    elements.canvas.removeAttribute('style');\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  const pattern = findPatternById(state.pattern);\n  elements.patternSelector.value = pattern.id;\n  selectPattern(pattern, {\n    draw: false,\n    config: state.config ? JSON.parse(state.config) : {},\n  });\n\n  currentPattern.draw();\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId} not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.config = config;\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  elements.patternLink.setAttribute('href', pattern.link);\n  if (draw) {\n    currentPattern.draw();\n  }\n  player.update(currentPattern, { draw: false });\n  document.title = `${pattern.name} - String Art Studio`;\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","show","isMultiColor","attr","min","max","step","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","getColorMap","stepCount","stepsPerColor","Math","floor","colorMap","Map","i","set","include","exclude","defaults","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","$a8180031c78213da$var$PI2","PI","canvas","context","getContext","setConfig","centerX","width","nails","nailRadius","nailsColor","nailNumbersFontSize","addNail","nail","push","drawNumbers","globalCompositeOperation","beginPath","fillStyle","textBaseline","font","nailNumberOffset","forEach","point","x","y","number","moveTo","arc","isRightAlign","numberPosition","textAlign","fillText","String","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","margin","showNailNumbers","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","Error","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","concat","defaultConfig","_defaultConfig","_config","value","assign","getSize","clientWidth","clientHeight","v","setUpDraw","removeAttribute","height","size","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$188437ce07b37c18$var$PI2","n","rotation","radius","indexAngle","rotationAngle","isReverse","getPoint","index","realIndex","sin","cos","nailsNumberStart","getNumber","round","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","id","link","$188437ce07b37c18$export$2e2bcd8739ae039","nailsConfig","innerLength","rotationConfig","super","layers","layersCount","circle","shift","repetition","currentInnerLength","repetitionCount","strokeStyle","prevPoint","isPrevPoint","stepColor","get","nextPointIndex","lineTo","stroke","drawSpiral","$17fe1039ca333e84$export$2e2bcd8739ae039","nSpirals","radiusIncrease","angleStep","PI2","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","points","generatePoints","lastPoint","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$8b13425f1e264518$export$2e2bcd8739ae039","_n","sides","extraNails","sideNails","sideAngle","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerY","reverseOrder","prevSide","innerColor","generateStarPoints","prevSideIndex","outterColor","prevCirclePoint","isPrevSide","nextPoint","drawCircle","drawStar","size1","show1","end1","size2","show2","end2","size3","show3","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","prevPointIndex","self","advance","getPointIndex","layerShift","steps","time","base","stepsToRender","toIndex","instructions","drawTimesTable","$828d2af56886c091$export$2e2bcd8739ae039","layerSpread","minNailDistance","maxShapeNailsCount","prop","props","circumsference","circleNails","nextLayerIndex","$2fc16ffa17719734$var$elements","document","querySelector","sidebarForm","$2fc16ffa17719734$var$EVENTS","Set","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_wrappedOnInput","e","_onInput","_toggleFieldset","target","nodeName","parentElement","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","addEventListener","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","has","Function","add","_triggerEvent","eventData","requestAnimationFrame","clearTimeout","inputValue","inputElement","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","controlKey","replace","formattedValue","innerText","originalEvent","setTimeout","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","join","$52852adbc3c0b381$var$elements","patternSelector","patternLink","downloadBtn","downloadNailsBtn","resetBtn","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","stepInstructions","playerPosition","playBtn","pauseBtn","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$downloadCanvas","downloadLink","download","href","toDataURL","click","$52852adbc3c0b381$var$downloadNailsImage","$52852adbc3c0b381$var$reset","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","patternId","$2fc16ffa17719734$export$2e2bcd8739ae039","title","$52852adbc3c0b381$var$initRouting","style","$52852adbc3c0b381$var$setSize","$52852adbc3c0b381$var$initSize","option","$52852adbc3c0b381$var$initControls","queryParams","URLSearchParams","location","search","queryPattern"],"version":3,"file":"index.e5315f4c.js.map"}