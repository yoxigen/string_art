{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/renderers/Renderer.js","src/scripts/StringArt.js","src/scripts/helpers/math_utils.js","src/scripts/helpers/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Mandala.js","src/scripts/string_art_types/Eye.js","src/scripts/string_art_types/Assymetry.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/string_art_types/Flower.js","src/scripts/string_art_types/MaurerRose.js","src/scripts/string_art_types/FlowerOfLife.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Freestyle.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/renderers/CanvasRenderer.js","src/scripts/Serialize.js","src/scripts/share.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js","src/scripts/pwa.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'repeatColors',\n    label: 'Repeat colors',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / (Math.max(colorCount, 2) - 1)\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color, repeatColors } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = repeatColors ? colorIndex % colorCount : colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    if (!colorCount) {\n      throw new Error(\"Can't get color map, no colorCount provided!\");\n    }\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {}, customControls }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [...(customControls ?? []), ...controls],\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(renderer, config) {\n    this.setConfig(config);\n    this.nails = [];\n    this.addedPoints = new Set();\n    this.renderer = renderer;\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n    if (this.addedPoints) {\n      this.addedPoints.clear();\n    }\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    const nailPoint = nail.point.map(Math.round).join('_');\n    if (!this.addedPoints.has(nailPoint)) {\n      this.nails.push(nail);\n      this.addedPoints.add(nailPoint);\n    }\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.renderer.renderNails(this.nails, {\n      color: this.nailsColor,\n      fontSize: this.nailNumbersFontSize,\n      radius: this.nailRadius,\n      renderNumbers: drawNumbers,\n      margin: NUMBER_MARGIN,\n    });\n\n    this.nails = [];\n    this.addedPoints.clear();\n  }\n}\n","export default class Renderer {\n  constructor(parentElement) {\n    this.parentElement = parentElement;\n  }\n\n  destroy() {}\n\n  reset() {}\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  setLineWidth(width) {}\n\n  setBackground(color) {}\n\n  renderLines(startPosition, ...positions) {\n    throw new Error('Renderer \"renderLines\" method not implemented!');\n  }\n\n  /**\n   * Renders the nails for the string art\n   * @param {[{ point: [x: number, y: number], number: string }]} nails\n   * @param {*} param1\n   */\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin }) {\n    throw new Error('Renderer \"renderNails\" method not implemented!');\n  }\n\n  getSize() {\n    throw new Error('Renderer \"getSize\" method not implemented!');\n  }\n\n  setSize({ width, height }) {}\n  clear() {\n    throw new Error('Renderer \"clear\" method not implemented!');\n  }\n\n  toDataURL() {\n    throw new Error('Renderer \"toDataURL\" method not implemented!');\n  }\n}\n","import Nails from './Nails.js';\nimport Renderer from './renderers/Renderer.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.1 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n        show: ({ showNails }) => showNails,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(renderer) {\n    if (!renderer) {\n      throw new Error('Renderer not specified!');\n    }\n\n    if (!(renderer instanceof Renderer)) {\n      throw new Error('Renderer is not an instance of Renderer!');\n    }\n\n    this.renderer = renderer;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get controlsIndex() {\n    if (!this._controlsIndex) {\n      this._controlsIndex = getControlsIndex(this.controls);\n    }\n\n    return this._controlsIndex;\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = Object.freeze(\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\n      );\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  setConfig(config) {\n    const currentConfig = this.config;\n    this.config = config;\n    if (this.onConfigChange) {\n      const changedControlKeys = Object.keys(currentConfig).filter(\n        key => config[key] !== currentConfig[key]\n      );\n\n      this.onConfigChange({\n        controls: changedControlKeys.map(key => ({\n          control: this.controlsIndex[key],\n          value: config[key],\n        })),\n      });\n    }\n  }\n\n  setConfigValue(controlKey, value) {\n    this._config = Object.freeze({\n      ...(this._config ?? this.defaultConfig),\n      [controlKey]: value,\n    });\n\n    if (this.onConfigChange) {\n      this.onConfigChange({\n        controls: [{ control: this.controlsIndex[controlKey], value }].filter(\n          ({ control }) => !!control\n        ),\n      });\n    }\n  }\n\n  getSize() {\n    return this.renderer.getSize();\n  }\n\n  setUpDraw() {\n    const previousSize = this.size;\n    this.renderer.reset();\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.center = this.size.map(value => value / 2);\n\n    if (\n      previousSize &&\n      (previousSize[0] !== width || previousSize[1] !== height)\n    ) {\n      if (this.onResize) {\n        this.onResize();\n      }\n    }\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.renderer, this.config);\n    }\n\n    this.renderer.setLineWidth(this.config.stringWidth);\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    //this.ctx.beginPath();\n    if (enableBackground) {\n      this.renderer.setBackground(\n        customBackgroundColor\n          ? backgroundColor\n          : darkMode\n          ? COLORS.dark\n          : COLORS.light\n      );\n    }\n\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nfunction getControlsIndex(configControls) {\n  return configControls.reduce(\n    (controlsIndex, control) =>\n      control.children\n        ? {\n            ...controlsIndex,\n            ...getControlsIndex(control.children),\n          }\n        : {\n            ...controlsIndex,\n            [control.key]: control,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","/**\n * Returns the greatest common divisor of two integers\n * https://en.wikipedia.org/wiki/Euclidean_algorithm\n * @param {number} int1\n * @param {number} int2\n * @returns number\n */\nexport function gcd(int1, int2) {\n  if (!int2) return int1;\n\n  return gcd(int2, int1 % int2);\n}\n\nexport const PI2 = Math.PI * 2;\n","import Nails from '../Nails.js';\nimport { PI2 } from './math_utils.js';\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    const realIndex = this.getNailIndex(index);\n\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const point = [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  getNailIndex(index = 0) {\n    let realIndex = this.isReverse ? this.config.n - 1 - index : index;\n    if (realIndex > this.config.n - 1) {\n      realIndex = realIndex % this.config.n;\n    }\n    return realIndex;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const props = {\n        center,\n        radius: radius ?? Math.min(...center) - margin,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n    ].join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  *drawRing(renderer, { ringSize, color }) {\n    const { n } = this.config;\n    const ringDistance = Math.floor(ringSize * n);\n\n    let prevPoint;\n    let prevPointIndex = 0;\n    let isPrevSide = false;\n    renderer.setColor(color);\n\n    for (let i = 0; i < n; i++) {\n      if (!prevPoint) {\n        prevPoint = this.getPoint(0);\n      }\n\n      const startPoint = prevPoint;\n      const positions = [];\n      prevPointIndex = isPrevSide ? i : prevPointIndex + ringDistance;\n      prevPoint = this.getPoint(prevPointIndex);\n      positions.push(prevPoint);\n\n      if (i < n - 1) {\n        prevPointIndex++;\n        prevPoint = this.getPoint(prevPointIndex);\n        positions.push(prevPoint);\n      }\n\n      renderer.renderLines(startPoint, ...positions);\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n    isStructural: true,\n    affectsStepCount: false,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n    isStructural: true,\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 5,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount, repetition } = this.config;\n    this.layersCount = layers ?? 1;\n    this.realRepetition = repetition * 2 - 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.renderer.setColor(color);\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.renderer.setColor(stepColor);\n        }\n      }\n\n      prevPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength + 1\n        : prevPointIndex + currentInnerLength;\n\n      if (repetitionCount === this.realRepetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n        prevPointIndex++;\n      } else {\n        repetitionCount++;\n      }\n\n      const nextPoint = this.circle.getPoint(prevPointIndex);\n\n      this.renderer.renderLines(prevPoint, nextPoint);\n      prevPoint = nextPoint;\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return Math.round(layers * n * (innerLength * 2) * repetition);\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.renderer.setColor(this.color.getColor(0));\n    let lastPoint = this.center;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.renderer.setColor(stepColor);\n        }\n      }\n\n      if (lastPoint) {\n        this.renderer.renderLines(lastPoint, point);\n      }\n      lastPoint = point;\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Mandala extends StringArt {\n  name = 'Mandala';\n  id = 'mandala';\n  link = 'https://www.youtube.com/watch?v=qhbuKbxJsk8';\n  linkText = 'Learn';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, margin, layerFill, base, reverse } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n      reverse,\n    };\n    this.stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n    this.base = base;\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', time }) {\n    const n = this.n;\n    this.renderer.setColor(color);\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= this.stringsPerLayer; i++) {\n      const startPoint = point;\n      point = this.circle.getPoint(i + shift);\n      const toIndex = (i * this.base) % n;\n      this.renderer.renderLines(\n        startPoint,\n        point,\n        this.circle.getPoint(toIndex + shift)\n      );\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { layers, layerFill } = this.config;\n    const stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n    return (layers ?? 1) * stringsPerLayer;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n    this.renderer.setColor(color);\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.renderer.renderLines(\n        this.getPoint({ side, index: i, rotation, ...sideProps }),\n        this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize = Math.min(...this.renderer.getSize()) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst LAYER_DEFAULTS = [\n  { size: 0.25, end: 1, color: '#a94fb0' },\n  { size: 0.125, end: 0.888, color: '#ec6ad0' },\n  { size: 0, end: 0.826, color: '#f08ad5', reverse: true },\n];\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: LAYER_DEFAULTS.map(({ size, end, color, reverse }, i) => {\n        const layer = i + 1;\n        return {\n          key: `layer${layer}`,\n          label: `Layer ${layer}`,\n          type: 'group',\n          children: [\n            {\n              key: `show${layer}`,\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: `size${layer}`,\n              label: 'Size',\n              defaultValue: size,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: (config, { key }) =>\n                Math.round(config.n * config[key]),\n              show: config => config[`show${layer}`],\n            },\n            {\n              key: `end${layer}`,\n              label: 'End Position',\n              defaultValue: end,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: (config, { key }) =>\n                Math.round(config.n * config[key]),\n              show: config => config[`show${layer}`],\n            },\n            {\n              key: `color${layer}`,\n              label: 'Color',\n              defaultValue: color,\n              type: 'color',\n              show: config => config[`show${layer}`],\n            },\n            {\n              key: `reverse${layer}`,\n              label: 'Reverse',\n              defaultValue: reverse === true,\n              type: 'checkbox',\n              show: config => config[`show${layer}`],\n            },\n          ],\n        };\n      }),\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.renderer.setColor(color);\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      const startPoint = prevPoint ?? this.getPoint(getPointIndex(index));\n      const positions = [];\n      if (prevPoint) {\n        positions.push(this.getPoint(prevPointIndex + advance));\n      }\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      positions.push((prevPoint = this.getPoint(prevPointIndex)));\n\n      this.renderer.renderLines(startPoint, ...positions);\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import { PI2 } from './math_utils.js';\n\nexport default class Polygon {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const { rotation = 0, sides: sideCount } = (this.config = config);\n\n      const sideAngle = PI2 / sideCount;\n\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\n        const angle = sideAngle * i + PI2 * rotation;\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\n\n        return {\n          cos: Math.cos(angle),\n          sin: Math.sin(angle),\n          center: {\n            cos: Math.cos(radiusAngle),\n            sin: Math.sin(radiusAngle),\n          },\n        };\n      });\n\n      Object.assign(this, {\n        sides,\n        sideCount,\n        sideAngle,\n      });\n\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n\n      Object.assign(this, this._getProps());\n\n      if (config.fitSize) {\n        Object.assign(this, this._getProps(this.getSizeAndCenter()));\n        this.points.clear();\n      }\n    }\n  }\n\n  getSizeAndCenter() {\n    const { size: configSize, margin } = this.config;\n\n    const boundingRect = this.getBoundingRect();\n    const scale = Math.min(\n      (configSize[0] - 2 * margin) / boundingRect.width,\n      (configSize[1] - 2 * margin) / boundingRect.height\n    );\n\n    const size = configSize.map(v => v * scale);\n    const center = [\n      this.center[0] -\n        (scale * (boundingRect.left - configSize[0] + boundingRect.right)) / 2,\n      this.center[1] -\n        (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) / 2,\n    ];\n\n    this.points.clear();\n    return { size, center };\n  }\n\n  _getProps(overrideConfig) {\n    const {\n      nailsSpacing,\n      size,\n      margin = 0,\n      center: configCenter,\n    } = Object.assign({}, this.config, overrideConfig);\n\n    const center = configCenter ?? this.config.size.map(v => v / 2);\n\n    const radius = Math.min(...size) / 2 - margin;\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\n    const start = [\n      radius * Math.sin(this.sideAngle / 2),\n      radius * Math.cos(this.sideAngle / 2),\n    ];\n    const nailsDistance = sideSize * nailsSpacing;\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\n    const radiusNailsDistance = radius / radiusNailsCount;\n\n    return {\n      nailsSpacing,\n      nailsPerSide: 1 / nailsSpacing,\n      center,\n      radius,\n      sideSize,\n      start,\n      nailsDistance,\n      radiusNailsCount,\n      radiusNailsDistance,\n    };\n  }\n\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\n      '_'\n    );\n  }\n\n  getSidePoint({ side, index }) {\n    const pointsMapIndex = [side, index].join('_');\n\n    if (this.points.has(pointsMapIndex)) {\n      return this.points.get(pointsMapIndex);\n    }\n\n    const startX = this.start[0] - index * this.nailsDistance;\n    const { cos, sin } = this.sides[side];\n\n    const point = [\n      cos * startX - sin * this.start[1] + this.center[0],\n      sin * startX + cos * this.start[1] + this.center[1],\n    ];\n\n    this.points.set(pointsMapIndex, point);\n    return point;\n  }\n\n  getCenterPoint({ side, index }) {\n    const radius = index * this.radiusNailsDistance;\n    const { sin, cos } = this.sides[side].center;\n\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\n  }\n\n  getBoundingRect() {\n    const points = this.sides.map((_, side) =>\n      this.getSidePoint({ side, index: 0 })\n    );\n    const firstPoint = points[0];\n\n    const boundingRect = points.slice(1).reduce(\n      (boundingRect, [x, y]) => ({\n        left: Math.min(boundingRect.left, x),\n        right: Math.max(boundingRect.right, x),\n        top: Math.min(boundingRect.top, y),\n        bottom: Math.max(boundingRect.bottom, y),\n      }),\n      {\n        left: firstPoint[0],\n        right: firstPoint[0],\n        top: firstPoint[1],\n        bottom: firstPoint[1],\n      }\n    );\n\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\n    boundingRect.width = boundingRect.right - boundingRect.left;\n    Object.freeze(boundingRect);\n    return boundingRect;\n  }\n\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\n    for (let side = 0; side < this.sideCount; side++) {\n      const sideIndexStart = side * this.nailsPerSide;\n\n      if (drawSides) {\n        for (let index = 0; index < this.nailsPerSide; index++) {\n          nails.addNail({\n            point: this.getSidePoint({ side, index }),\n            number: sideIndexStart + index,\n          });\n        }\n      }\n\n      if (drawCenter) {\n        for (let index = 0; index < this.radiusNailsCount; index++) {\n          nails.addNail({\n            point: this.getCenterPoint({ side, index }),\n            number: `${side}_${index}`,\n          });\n        }\n      }\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 1,\n    multicolorStart: 0,\n    multicolorByLightness: true,\n    minLightness: 20,\n    maxLightness: 50,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class PolygonPattern extends StringArt {\n  name = 'Polygon';\n  id = 'polygon';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'bezier',\n      label: 'Bezier',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 4,\n        step: 1,\n      },\n      show: ({ sides }) => sides > 4,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#5c5c5c',\n    nailRadius: 1,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const polygonConfig = {\n      sides,\n      rotation,\n      margin,\n      size,\n      nailsSpacing: 1 / n,\n      fitSize: true,\n    };\n\n    if (this.polygon) {\n      this.polygon.setConfig(polygonConfig);\n    } else {\n      this.polygon = new Polygon(polygonConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: sides,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: sides,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier } = this.config;\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\n\n    let step = 0;\n    this.renderer.setColor(this.color.getColor(0));\n\n    for (let side = 0; side < sides; side++) {\n      const nextSide = (side + limitedBezier) % sides;\n\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\n        if (this.colorMap) {\n          this.renderer.setColor(this.colorMap.get(step));\n        }\n\n        this.renderer.renderLines(\n          this.polygon.getSidePoint({ side, index }),\n          this.polygon.getSidePoint({ side: nextSide, index })\n        );\n\n        yield;\n        step++;\n      }\n    }\n  }\n\n  getStepCount() {\n    const { sides, n } = this.config;\n    return sides * n;\n  }\n\n  drawNails() {\n    this.polygon.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 264,\n    multicolorStart: 53,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class Flower extends StringArt {\n  name = 'Flower';\n  id = 'flower';\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#29f1ff',\n    nailRadius: 1,\n    stringWidth: 0.5,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const layerAngleShift = 1 / (sides * layers);\n\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\n      const polygonConfig = {\n        sides,\n        rotation: rotation + i * layerAngleShift,\n        margin,\n        size,\n        nailsSpacing: 1 / n,\n      };\n\n      return new Polygon(polygonConfig);\n    });\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: layers,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: layers,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, layers } = this.config;\n\n    let step = 0;\n    this.renderer.setColor(this.color.getColor(0));\n\n    for (let layer = 0; layer < layers; layer++) {\n      const polygon = this.polygons[layer];\n\n      for (let side = 0; side < sides; side++) {\n        const leftSide = side === sides - 1 ? 0 : side + 1;\n\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\n          if (this.colorMap) {\n            this.renderer.setColor(this.colorMap.get(step));\n          }\n\n          const centerIndexes = this.getCenterIndexes({\n            polygon,\n            sideIndex: index,\n          });\n\n          this.renderer.renderLines(\n            polygon.getCenterPoint({\n              side: side,\n              index: centerIndexes[0],\n            }),\n            polygon.getSidePoint({ side, index }),\n            polygon.getCenterPoint({\n              side: leftSide,\n              index: centerIndexes[1],\n            })\n          );\n\n          yield;\n          step++;\n        }\n      }\n    }\n  }\n\n  getCenterIndexes({ polygon, sideIndex }) {\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\n\n    return [\n      sideIndex < extraNailCount\n        ? -extraNailCount + sideIndex\n        : sideIndex - extraNailCount,\n      polygon.radiusNailsCount - sideIndex,\n    ];\n  }\n\n  getStepCount() {\n    const { sides, n, layers } = this.config;\n    return sides * (n + 1) * layers;\n  }\n\n  drawNails() {\n    this.polygons.forEach(polygon =>\n      polygon.drawNails(this.nails, { drawCenter: true })\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { gcd, PI2 } from '../helpers/math_utils.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ffffff',\n    multicolorRange: 133,\n    multicolorStart: 239,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n    colorCount: 4,\n  },\n});\n\nexport default class MaurerRose extends StringArt {\n  name = 'Maurer Rose';\n  id = 'maurer_rose';\n  link = 'https://blog.glitch.land/en/posts/maurer-rose/';\n  linkText = 'Learn';\n  controls = [\n    {\n      key: 'n',\n      label: 'N',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 12,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'maxSteps',\n      label: 'Max steps',\n      defaultValue: 512,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 720,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'angle',\n      label: 'Angle',\n      defaultValue: 341,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 720,\n        step: 1,\n      },\n      displayValue: ({ angle }) => `${angle}°`,\n      isStructural: true,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  resetStructure() {\n    if (this.points) {\n      this.points.clear();\n    }\n    this.calc = null;\n  }\n\n  onConfigChange({ controls }) {\n    if (controls.some(({ control }) => control.isStructural)) {\n      this.resetStructure();\n      if (controls.some(({ control }) => control.affectsStepCount !== false)) {\n        this.stepCount = null;\n      }\n    }\n  }\n\n  onResize() {\n    this.resetStructure();\n  }\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { isMultiColor, colorCount } = this.config;\n\n    if (!this.calc) {\n      this.calc = this.getCalc();\n    }\n\n    if (!this.points) {\n      this.points = new Map();\n    }\n\n    if (!this.stepCount) {\n      this.stepCount = this.getStepCount();\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.stepCount,\n        colorCount,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  getCalc() {\n    const { n, angle, rotation, maxSteps } = this.config;\n    const size = this.getSize();\n\n    return {\n      n,\n      angleRadians: (PI2 * angle) / maxSteps,\n      radius: Math.min(...size) / 2,\n      currentSize: size,\n      rotationAngle: -Math.PI * 2 * rotation,\n    };\n  }\n\n  getPoint(index) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const k = index * this.calc.angleRadians;\n    const r = this.calc.radius * Math.sin(this.calc.n * k);\n\n    const point = [\n      this.center[0] - r * Math.cos(k - this.calc.rotationAngle),\n      this.center[1] - r * Math.sin(k - this.calc.rotationAngle),\n    ];\n    this.points.set(index, point);\n    return point;\n  }\n\n  *generatePoints() {\n    const count = this.stepCount;\n\n    for (let i = 0; i < count + 1; i++) {\n      yield { point: this.getPoint(i), index: i };\n    }\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n\n    let prevPoint;\n    this.renderer.setColor(this.color.getColor(0));\n\n    for (const { point, index } of points) {\n      if (!prevPoint) {\n        prevPoint = point;\n        continue;\n      }\n\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.renderer.setColor(stepColor);\n        }\n      }\n\n      this.renderer.renderLines(prevPoint, point);\n      prevPoint = point;\n\n      yield;\n    }\n  }\n\n  getStepCount() {\n    if (this.stepCount) {\n      return this.stepCount;\n    }\n\n    const { maxSteps, angle, n } = this.config;\n    const angleGcd = gcd(maxSteps, angle);\n\n    let steps = maxSteps / angleGcd;\n    if (!(steps % 2) && n % 2) {\n      steps /= 2;\n    }\n    return Math.round(steps);\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, index } of points) {\n      this.nails.addNail({ point, number: index });\n    }\n  }\n\n  static thumbnailConfig = {\n    maxSteps: 160,\n    angle: 213,\n  };\n}\n","import { PI2 } from '../helpers/math_utils.js';\nimport StringArt from '../StringArt.js';\nimport Color from '../helpers/Color.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 43,\n    multicolorStart: 25,\n    multicolorByLightness: true,\n    minLightness: 40,\n    maxLightness: 95,\n    colorCount: 3,\n    repeatColors: true,\n    saturation: 83,\n    reverseColors: true,\n  },\n  customControls: [\n    {\n      key: 'colorPerLevel',\n      label: 'Color per level',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n  ],\n});\n\nconst ANGLE = -PI2 / 6; // The angle of a equilateral triangle;\nconst SIDE_ANGLES = new Array(6)\n  .fill(null)\n  .map((_, i) => Math.PI / 2 + ANGLE * i);\n\nexport default class FlowerOfLife extends StringArt {\n  name = 'Flower of Life';\n  id = 'flower_of_life';\n  link =\n    'https://www.reddit.com/r/psychedelicartwork/comments/mk97gi/rainbow_flower_of_life_uv_reactive_string_art/';\n  controls = [\n    {\n      key: 'levels',\n      label: 'Levels',\n      defaultValue: 3,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'density',\n      label: 'Density',\n      defaultValue: 10,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 50,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'globalRotation',\n      label: 'Rotation',\n      defaultValue: 0,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 30,\n        step: 1,\n      },\n      displayValue: (config, { key }) => `${config[key]}°`,\n      isStructural: true,\n      affectsStepCount: false,\n    },\n    {\n      key: 'fillGroup',\n      label: 'Fill',\n      type: 'group',\n      children: [\n        {\n          key: 'fill',\n          label: 'Show fill',\n          defaultValue: true,\n          type: 'checkbox',\n          isStructural: true,\n        },\n        {\n          key: 'fillColor',\n          label: 'Fill color',\n          defaultValue: '#292e29',\n          type: 'color',\n          show: ({ fill }) => fill,\n        },\n      ],\n    },\n    {\n      key: 'ringGroup',\n      label: 'Ring',\n      type: 'group',\n      children: [\n        {\n          key: 'renderRing',\n          label: 'Show outer ring',\n          type: 'checkbox',\n          defaultValue: true,\n          isStructural: true,\n        },\n        {\n          key: 'ringNailCount',\n          label: 'Ring nail count',\n          defaultValue: 144,\n          type: 'range',\n          attr: {\n            min: 3,\n            max: 360,\n            step: 1,\n          },\n          show: ({ renderRing }) => renderRing,\n          isStructural: true,\n        },\n        {\n          key: 'ringSize',\n          label: 'Outer ring size',\n          defaultValue: 0.23,\n          type: 'range',\n          attr: {\n            min: 0,\n            max: 0.5,\n            step: 0.01,\n          },\n          show: ({ renderRing }) => renderRing,\n          displayValue: ({ ringSize }) => `${Math.round(100 * ringSize)}%`,\n          isStructural: true,\n        },\n        {\n          key: 'ringPadding',\n          label: 'Ring padding',\n          defaultValue: 0.06,\n          type: 'range',\n          attr: {\n            min: 0,\n            max: 0.5,\n            step: 0.01,\n          },\n          show: ({ renderRing }) => renderRing,\n          isStructural: true,\n          displayValue: ({ ringPadding }) =>\n            `${Math.round(100 * ringPadding)}%`,\n        },\n        {\n          key: 'ringColor',\n          label: 'Ring color',\n          defaultValue: '#e8b564',\n          type: 'color',\n          show: ({ renderRing }) => renderRing,\n        },\n      ],\n    },\n    {\n      key: 'renderTriangles',\n      label: 'Show triangles',\n      defaultValue: true,\n      type: 'checkbox',\n      isStructural: true,\n    },\n    {\n      key: 'renderCaps',\n      label: 'Show caps',\n      defaultValue: true,\n      type: 'checkbox',\n      show: ({ renderTriangles }) => renderTriangles,\n      isStructural: true,\n    },\n\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#474747',\n  };\n\n  getCalc() {\n    const {\n      levels,\n      density,\n      margin,\n      globalRotation,\n      renderCaps,\n      fill,\n      renderTriangles,\n      renderRing,\n      ringNailCount,\n      ringSize,\n      ringPadding,\n    } = this.config;\n    const globalRotationRadians =\n      (globalRotation * Math.PI) / 180 + Math.PI / 6;\n\n    const radius = renderRing\n      ? Math.min(...(this.size ?? this.getSize()).map(v => v / 2 - margin))\n      : null;\n    const ringDistance = renderRing\n      ? Math.floor((ringSize * ringNailCount) / 2)\n      : 0; // The number of nails to count for strings in the outer ring\n    const ringWidth = renderRing\n      ? radius * (1 - Math.cos((PI2 * (ringDistance / ringNailCount)) / 2))\n      : 0;\n\n    const polygon = new Polygon({\n      sides: 6,\n      size: this.getSize(),\n      margin:\n        margin +\n        ringWidth +\n        (renderRing && ringSize ? ringPadding * radius : 0),\n      rotation: globalRotationRadians,\n      fitSize: false,\n    });\n\n    const edgeSize = polygon.sideSize / levels;\n    const nailsLength = edgeSize / (2 * Math.cos(Math.PI / 6));\n\n    const countPerLevelSide = new Array(levels + (renderCaps ? 1 : 0))\n      .fill(null)\n      .map((_, level) => level * 2 + 1);\n\n    return {\n      edgeSize,\n      triangleHeight: (edgeSize * Math.sqrt(3)) / 2,\n      nailsLength,\n      triangleCenterDistance: edgeSize / 2,\n      nailDistance: nailsLength / density,\n      triangleCount: 6 * levels ** 2,\n      countPerLevelSide,\n      globalRotationRadians,\n      fill,\n      renderTriangles,\n      renderCaps,\n      ringNailCount,\n      radius,\n    };\n  }\n\n  resetStructure() {\n    this.points = null;\n    this.calc = null;\n  }\n\n  onConfigChange({ controls }) {\n    if (controls.some(({ control }) => control.isStructural)) {\n      this.resetStructure();\n      if (controls.some(({ control }) => control.affectsStepCount !== false)) {\n        this.stepCount = null;\n      }\n    }\n  }\n\n  onResize() {\n    this.resetStructure();\n  }\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      isMultiColor,\n      levels,\n      colorPerLevel,\n      colorCount,\n      renderRing,\n      ringSize,\n      ...config\n    } = this.config;\n\n    if (!this.calc) {\n      this.calc = this.getCalc();\n    }\n\n    if (renderRing && ringSize) {\n      const circleConfig = {\n        size: this.size,\n        n: this.calc.ringNailCount,\n        margin: config.margin,\n        rotation: config.globalRotation,\n      };\n\n      if (this.circle) {\n        this.circle.setConfig(circleConfig);\n      } else {\n        this.circle = new Circle(circleConfig);\n      }\n    } else {\n      this.circle = null;\n    }\n\n    if (!this.points) {\n      this.points = this.getPoints();\n    }\n\n    if (!this.stepCount) {\n      this.stepCount = this.getStepCount(this.calc);\n    }\n\n    const realColorCount = isMultiColor\n      ? colorPerLevel\n        ? levels\n        : Math.min(colorCount, levels)\n      : 1;\n\n    this.color = new Color({\n      ...config,\n      isMultiColor,\n      colorCount: realColorCount,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: realColorCount,\n        colorCount: realColorCount,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  getTrianglePoints({ center, rotation, isCapLevel, triangleIndexInSide }) {\n    let missingSide;\n    if (isCapLevel) {\n      const triangleIndex = (triangleIndexInSide + 2) % 3;\n      missingSide = this._getNextIndexInTriangle(triangleIndex);\n    }\n\n    // For each side of the triangle, the first point is the center of the triangle:\n    const trianglePoints = new Array(3)\n      .fill(null)\n      .map((_, i) => (i === missingSide ? [] : [center]));\n\n    for (let side = 0; side < 3; side++) {\n      if (isCapLevel && side === missingSide) {\n        continue;\n      }\n      const sideAngle = rotation + side * (PI2 / 3);\n      const triangleSidePoints = trianglePoints[side];\n\n      const cosSideAngle = Math.cos(sideAngle);\n      const sinSideAngle = Math.sin(sideAngle);\n\n      for (let n = 1; n <= this.config.density; n++) {\n        const nNailDistance = n * this.calc.nailDistance;\n\n        triangleSidePoints.push([\n          center[0] + nNailDistance * cosSideAngle,\n          center[1] + nNailDistance * sinSideAngle,\n        ]);\n      }\n    }\n\n    return trianglePoints;\n  }\n\n  getPoints() {\n    if (this.points) {\n      return this.points;\n    }\n\n    const { levels, renderCaps } = this.config;\n\n    const largeDistance = this.calc.nailsLength;\n    const smallDistance = this.calc.triangleHeight - largeDistance;\n    const levelsPoints = [];\n\n    const levelsCount = renderCaps ? levels + 1 : levels;\n\n    for (let level = 0; level < levelsCount; level++) {\n      const isCapLevel = renderCaps && level === levels;\n\n      const levelTrianglesPoints = [];\n      levelsPoints.push(levelTrianglesPoints);\n\n      const levelSideTriangleCount = this.calc.countPerLevelSide[level];\n\n      // Caching distances to avoid repeated calculations for each side:\n      const levelPositions = new Array(levelSideTriangleCount)\n        .fill(null)\n        .map((_, n) => {\n          const isFlipped = n % 2 === 0;\n          const trianglePosition = [\n            this.calc.triangleCenterDistance * (n - level),\n            level * this.calc.triangleHeight +\n              (isFlipped ? largeDistance : smallDistance),\n          ];\n\n          return {\n            rotation: Math.atan(trianglePosition[0] / trianglePosition[1]),\n            distanceFromCenter: Math.sqrt(\n              trianglePosition[0] ** 2 + trianglePosition[1] ** 2\n            ),\n          };\n        });\n\n      for (let side = 0; side < 6; side++) {\n        const sideRotation = SIDE_ANGLES[side];\n\n        for (let n = 0; n < levelSideTriangleCount; n++) {\n          if (isCapLevel && n % 2 === 0) {\n            // Cap triangles are only odd indexes\n            levelTrianglesPoints.push(null);\n            continue;\n          }\n\n          const { distanceFromCenter, rotation } = levelPositions[n];\n\n          const triangleCenterAngle =\n            sideRotation - rotation - this.calc.globalRotationRadians;\n\n          const rotatedTrianglePosition = [\n            this.center[0] + distanceFromCenter * Math.cos(triangleCenterAngle),\n            this.center[1] - distanceFromCenter * Math.sin(triangleCenterAngle),\n          ];\n\n          const trianglePoints = this.getTrianglePoints({\n            center: rotatedTrianglePosition,\n            rotation:\n              sideRotation +\n              (side * PI2) / 3 -\n              n * ANGLE +\n              this.calc.globalRotationRadians,\n            isCapLevel,\n            triangleIndexInSide: n,\n          });\n\n          levelTrianglesPoints.push(trianglePoints);\n        }\n      }\n    }\n\n    return levelsPoints;\n  }\n\n  *generateTriangleStrings({ points, level, indexInSide }) {\n    this.renderer.setColor(this.color.getColor(level));\n    const { density, levels } = this.config;\n    const isCapLevel = level === levels;\n\n    const initialSide = isCapLevel\n      ? this._getNextIndexInTriangle(indexInSide % 3)\n      : 0;\n    const lastSide = isCapLevel ? initialSide : 2;\n    const lastIndex = isCapLevel ? density : density - 1;\n\n    for (let side = initialSide; side <= lastSide; side++) {\n      const nextSide = this._getNextIndexInTriangle(side);\n      let prevPoint = points[side][0];\n\n      for (let n = 0; n <= lastIndex; n++) {\n        const isNextSide = n % 2 === 0;\n\n        const positions = [];\n        const nextSidePoint = isNextSide ? this.config.density - n : n;\n        const targetSide = isNextSide ? nextSide : side;\n        positions.push(points[targetSide][nextSidePoint]);\n\n        if (n < density) {\n          positions.push(\n            points[targetSide][\n              isNextSide ? nextSidePoint - 1 : nextSidePoint + 1\n            ]\n          );\n        }\n\n        this.renderer.renderLines(prevPoint, ...positions);\n        prevPoint = positions[positions.length - 1];\n\n        yield;\n      }\n    }\n  }\n\n  *generateStringsBetweenTriangles({\n    triangle1,\n    triangle2,\n    level,\n    triangleIndex,\n    triangleIndexInSide,\n    isNextLevel,\n    nextLevelTriangleIndex,\n  }) {\n    const { density, fillColor } = this.config;\n    const levelSideCount = this.calc.countPerLevelSide[level];\n    const angleShift = (triangleIndex % levelSideCount) % 3;\n\n    this.renderer.setColor(fillColor);\n\n    const isLastTriangleInSide = triangleIndexInSide === levelSideCount - 1;\n    const firstSide = angleShift;\n\n    const sideIndex = isNextLevel\n      ? [\n          this._getNextIndexInTriangle(angleShift),\n          this._getNextIndexInTriangle(angleShift, -1),\n        ]\n      : [\n          firstSide,\n          this._getNextIndexInTriangle(\n            firstSide,\n            triangleIndexInSide % 2 ? 1 : -1\n          ),\n        ];\n\n    for (let s = 0; s < 2; s++) {\n      const order = generateOrderInSide.call(this, s);\n\n      for (const { pointIndex, triangle1Points, triangle2Points } of order) {\n        this.renderer.renderLines(\n          triangle1Points[pointIndex],\n          triangle2Points[pointIndex]\n        );\n\n        yield;\n      }\n    }\n\n    function* generateOrderInSide(side) {\n      const t1Side = sideIndex[side];\n      const t2Side = getNextTriangleSide.call(this);\n\n      const triangle1Points = triangle1[t1Side];\n      const triangle2Points = triangle2[t2Side];\n\n      const last = side ? density : density - 1;\n\n      if (side === 0) {\n        for (let n = 0; n <= last; n++) {\n          yield { pointIndex: density - n, triangle1Points, triangle2Points };\n        }\n      } else {\n        for (let n = last; n >= 1; n--) {\n          yield { pointIndex: density - n, triangle1Points, triangle2Points };\n        }\n      }\n\n      function getNextTriangleSide() {\n        if (isNextLevel) {\n          return this._getNextIndexInTriangle(t1Side);\n        } else {\n          if (side === 0 && isLastTriangleInSide) {\n            return 1;\n          } else {\n            if (side === 1 && isLastTriangleInSide) {\n              return 0;\n            } else {\n              return this._getNextIndexInTriangle(t1Side, 1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _getNextIndexInTriangle(index, direction = 1) {\n    const result = index + direction;\n    if (result < 0) {\n      return 2;\n    }\n    if (result > 2) {\n      return 0;\n    }\n    return result;\n  }\n\n  *generateStrings() {\n    const {\n      fill,\n      renderTriangles,\n      renderCaps,\n      levels,\n      renderRing,\n      ringSize,\n      ringColor,\n    } = this.config;\n\n    const triangleLevels = this.getPoints();\n\n    let levelIndex = -1;\n\n    for (const level of triangleLevels) {\n      levelIndex++;\n      const isCapLevel = levelIndex === levels;\n\n      let triangleIndex = -1;\n      const lastIndexInLevel = level.length - 1;\n\n      for (const triangle of level) {\n        triangleIndex++;\n        const levelSideCount = this.calc.countPerLevelSide[levelIndex];\n        const triangleIndexInSide = triangleIndex % levelSideCount;\n\n        if (fill && !isCapLevel) {\n          if (triangleIndex === 0) {\n            yield* this.generateStringsBetweenTriangles({\n              triangle1: level[lastIndexInLevel],\n              triangle2: triangle,\n              level: levelIndex,\n              triangleIndex: lastIndexInLevel,\n              triangleIndexInSide: lastIndexInLevel % levelSideCount,\n            });\n          }\n          if (triangleIndex !== lastIndexInLevel) {\n            yield* this.generateStringsBetweenTriangles({\n              triangle1: triangle,\n              triangle2: level[triangleIndex + 1],\n              level: levelIndex,\n              triangleIndex,\n              triangleIndexInSide,\n            });\n          }\n\n          if (\n            triangleIndexInSide % 2 === 0 &&\n            (renderCaps || levelIndex < levels - 1)\n          ) {\n            const side = Math.floor(triangleIndex / levelSideCount);\n            const nextLevelSideCount =\n              this.calc.countPerLevelSide[levelIndex + 1];\n            const nextLevelTriangleIndex =\n              side * nextLevelSideCount + triangleIndexInSide + 1;\n\n            yield* this.generateStringsBetweenTriangles({\n              triangle1: triangle,\n              triangle2: triangleLevels[levelIndex + 1][nextLevelTriangleIndex],\n              level: levelIndex,\n              triangleIndex,\n              triangleIndexInSide,\n              isNextLevel: true,\n              nextLevelTriangleIndex,\n            });\n          }\n        }\n\n        const indexInSide =\n          triangleIndex % this.calc.countPerLevelSide[levelIndex];\n\n        if (renderTriangles && (!isCapLevel || indexInSide % 2)) {\n          yield* this.generateTriangleStrings({\n            points: triangle,\n            level: levelIndex,\n            indexInSide,\n          });\n        }\n      }\n    }\n\n    if (renderRing && ringSize) {\n      yield* this.circle.drawRing(this.renderer, {\n        ringSize: ringSize / 2,\n        color: ringColor,\n      });\n    }\n  }\n\n  getStepCount(calc) {\n    if (this.stepCount) {\n      return this.stepCount;\n    }\n\n    if (!calc) {\n      calc = this.getCalc();\n    }\n\n    const { levels, density, fill, renderTriangles, renderCaps } = this.config;\n    const { triangleCount, ringNailCount = 0 } = calc;\n\n    const fillStepsPerTriangle = fill ? density * 2 : 0;\n    const triangleSteps = renderTriangles ? density * 3 : 0;\n\n    const stepsPerTriangle = triangleSteps + fillStepsPerTriangle;\n\n    const levelsWithFillBetween = levels + (renderCaps ? 1 : 0);\n    const fillStepsBetweenLevels =\n      (fillStepsPerTriangle *\n        (levelsWithFillBetween - 1) *\n        6 *\n        levelsWithFillBetween) /\n      2;\n    const stepsPerCap = density + 1;\n    const capSteps =\n      renderTriangles && renderCaps ? 6 * levels * stepsPerCap : 0;\n\n    return (\n      triangleCount * stepsPerTriangle +\n      capSteps +\n      fillStepsBetweenLevels +\n      ringNailCount\n    );\n  }\n\n  drawNails() {\n    const triangleLevels = this.getPoints();\n    let index = 0;\n    for (const level of triangleLevels) {\n      for (const triangle of level) {\n        if (triangle != null) {\n          // A cap level has nulls between caps\n          for (const triangleSide of triangle) {\n            for (const point of triangleSide) {\n              this.nails.addNail({ point, number: index++ });\n            }\n          }\n        }\n      }\n    }\n\n    if (this.circle) {\n      this.circle.drawNails(this.nails);\n    }\n  }\n\n  static thumbnailConfig = {\n    levels: 3,\n    density: 3,\n    fill: false,\n    renderRing: true,\n  };\n}\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport Mandala from './string_art_types/Mandala.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Freestyle from './string_art_types/Freestyle.js';\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\nimport Flower from './string_art_types/Flower.js';\nimport MaurerRose from './string_art_types/MaurerRose.js';\nimport FlowerOfLife from './string_art_types/FlowerOfLife.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  Mandala,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Freestyle,\n  PolygonPattern,\n  Flower,\n  MaurerRose,\n  FlowerOfLife,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    {\n      key: 'ringSize',\n      label: 'Outer ring size',\n      defaultValue: 0.1,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 0.5,\n        step: ({ config: { sideNails, sides } }) => 1 / (sideNails * sides),\n      },\n      displayValue: ({ sideNails, sides, ringSize }) =>\n        Math.floor(ringSize * sideNails * sides),\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n        {\n          key: 'ringColor',\n          label: 'Ring color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0 } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  getArcPoint({ side, sideIndex }) {\n    return this.circle.getPoint(side * this.config.sideNails + sideIndex);\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails, sides } = this.config;\n\n    this.renderer.setColor(innerColor);\n    let alternate = false;\n    const linesPerRound = sides % 2 ? sides * 2 : sides;\n    const rounds = sides % 2 ? Math.floor(sideNails / 2) : sideNails;\n\n    let prevPointIndex = 0;\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: prevPointIndex });\n\n    for (let round = 0; round <= rounds; round++) {\n      let side = 0;\n\n      const linesPerThisRound = linesPerRound - (round === rounds ? sides : 0);\n\n      for (let i = 0; i < linesPerThisRound; i++) {\n        side = side !== sides - 1 ? side + 1 : 0;\n        alternate = !alternate;\n        prevPointIndex = alternate ? sideNails - round : round;\n        const nextPoint = this.getStarPoint({\n          side,\n          sideIndex: prevPointIndex,\n        });\n        this.renderer.renderLines(prevPoint, nextPoint);\n        prevPoint = nextPoint;\n        yield;\n      }\n\n      prevPointIndex = alternate ? prevPointIndex - 1 : prevPointIndex + 1;\n      const nextPoint = this.getStarPoint({\n        side: 0,\n        sideIndex: prevPointIndex,\n      });\n      this.renderer.renderLines(prevPoint, nextPoint);\n      prevPoint = nextPoint;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor, sides, sideNails } = this.config;\n    this.renderer.setColor(outterColor);\n\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: 0 });\n    let alternate = false;\n    let isStar = false;\n\n    const rounds = sides % 2 ? Math.ceil(sideNails / 2) : sideNails;\n    let side = 0;\n    const linesPerRound = sides % 2 ? sides * 4 : sides * 2;\n\n    for (let round = 0; round <= rounds; round++) {\n      const linesPerThisRound =\n        linesPerRound - (round === rounds ? sides * 2 : 0);\n\n      for (let i = 0; i < linesPerThisRound; i++) {\n        const pointPosition = {\n          side,\n          sideIndex: alternate ? sideNails - round : round,\n        };\n\n        const nextPoint = isStar\n          ? this.getStarPoint(pointPosition)\n          : this.getArcPoint(pointPosition);\n\n        this.renderer.renderLines(prevPoint, nextPoint);\n        prevPoint = nextPoint;\n\n        yield;\n        isStar = !isStar;\n\n        if (isStar) {\n          side = side !== sides - 1 ? side + 1 : 0;\n          alternate = !alternate;\n        }\n      }\n      prevPoint = this.getStarPoint({ side: 0, sideIndex: round + 1 });\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n\n    const { ringSize, ringColor } = this.config;\n\n    if (ringSize !== 0) {\n      yield* this.circle.drawRing(this.renderer, {\n        ringSize,\n        color: ringColor,\n      });\n    }\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails, ringSize } = this.config;\n    const ringCount = ringSize ? sideNails * sides : 0;\n    const starAndCircleCount = 3 * sides * (sideNails + (sides % 2 ? 1 : 0));\n\n    return starAndCircleCount + ringCount;\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport Circle from '../helpers/Circle.js';\nimport Mandala from './Mandala.js';\n\nexport default class Wave extends Mandala {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'layerFill',\n      label: 'Layer fill',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerFill }) => Math.floor(100 * layerFill) + '%',\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 15 / 200,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    {\n      key: 'reverse',\n      label: 'Reverse',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n    this.base = 2;\n  }\n\n  *generateStrings() {\n    const {layers, reverse} = this.config;\n\n    for (let layer = 0; layer < layers; layer++) {\n      yield* this.drawTimesTable({\n        color: this.color.getColor(layer),\n        shift: this.layerShift * (reverse ? 1 : -1) * layer,\n        time: layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Freestyle extends StringArt {\n  name = 'Freestyle';\n  id = 'freestyle';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.renderer.setColor(color);\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        const startPoint = prevCirclePoint ?? this.getPoint(layer, i);\n\n        const positions = [];\n        if (layerIndex === 0 && i) {\n          positions.push(this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n\n        this.renderer.renderLines(startPoint, prevCirclePoint);\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.removeEventListener(\n      'touchstart',\n      this._wrappedOnTouchStart\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd() {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      if (this.currentInputRange) {\n        this.currentInputRange.value = this.currentInputRangeValue;\n      }\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll() {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.setConfigValue(controlKey, inputValue);\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config, control);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","import Renderer from './Renderer.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nexport default class CanvasRenderer extends Renderer {\n  constructor(parentElement) {\n    super(parentElement);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n    this.ctx.globalCompositeOperation = 'source-over';\n\n    parentElement.appendChild(this.canvas);\n  }\n\n  destroy() {\n    this.parentElement.removeElement(this.canvas);\n  }\n\n  reset() {\n    this.ctx.clearRect(0, 0, ...this.getSize());\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n\n    const [width, height] = this.getSize();\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n  }\n\n  setColor(color) {\n    this.ctx.strokeStyle = color;\n  }\n\n  setLineWidth(width) {\n    this.ctx.lineWidth = width;\n  }\n\n  setBackground(color) {\n    this.ctx.globalCompositeOperation = 'destination-over';\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(0, 0, ...this.getSize());\n    this.ctx.globalCompositeOperation = 'source-over';\n  }\n\n  getSize() {\n    return [\n      this.canvas.clientWidth * this.pixelRatio,\n      this.canvas.clientHeight * this.pixelRatio,\n    ];\n  }\n\n  setSize(size) {\n    this.size = size;\n\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n\n    if (size) {\n      this.canvas.style.width = `${size.width}px`;\n      this.canvas.style.height = `${size.height}px`;\n    } else {\n      this.canvas.removeAttribute('style');\n    }\n  }\n\n  renderLines(startPosition, ...positions) {\n    this.ctx.beginPath();\n    this.ctx.moveTo(...startPosition);\n\n    for (const position of positions) {\n      this.ctx.lineTo(...position);\n    }\n\n    this.ctx.stroke();\n  }\n\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin = 0 }) {\n    const centerX = this.canvas.width / 2;\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.beginPath();\n    this.ctx.fillStyle = color;\n    this.ctx.textBaseline = 'middle';\n    this.ctx.font = `${fontSize}px sans-serif`;\n    const nailNumberOffset = radius + margin;\n\n    nails.forEach(({ point: [x, y], number }) => {\n      this.ctx.moveTo(x + radius, y);\n      this.ctx.arc(x, y, radius, 0, PI2);\n      if (renderNumbers && number != null) {\n        const isRightAlign = x < centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.ctx.textAlign = isRightAlign ? 'right' : 'left';\n        this.ctx.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.ctx.fill();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  toDataURL() {\n    return this.canvas.toDataURL();\n  }\n}\n","const MAX_FLOAT_DECIMALS = 6;\n\nexport function serializeConfig(pattern) {\n  const { defaultConfig, config } = pattern;\n\n  const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\n    if (value === defaultConfig[key]) {\n      return null;\n    }\n\n    if (typeof value === 'boolean') {\n      return `!${value ? 1 : 0}`;\n    }\n\n    if (typeof value === 'number') {\n      return parseFloat(value.toFixed(MAX_FLOAT_DECIMALS));\n    }\n\n    return value;\n  });\n\n  while (nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\n    nonDefaultConfigValues.pop();\n  }\n\n  if (!nonDefaultConfigValues.length) {\n    return '';\n  }\n\n  const serializedConfigValues = nonDefaultConfigValues\n    .join('_')\n    .replace(/\\_{2,}/g, match => '~' + match.length + '_');\n  return serializedConfigValues;\n}\n\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\nconst booleanRegExp = /^(?:!)([01])$/;\n\nexport function deserializeConfig(pattern, serializedCofig) {\n  const serializedConfigValues = serializedCofig\n    .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) =>\n      new Array(+commaCount).fill('_').join('')\n    )\n    .split('_')\n    .map(v => {\n      if (v === '') {\n        return null;\n      }\n\n      if (numberRegExp.test(v)) {\n        return parseFloat(v);\n      }\n\n      const booleanMatch = v.match(booleanRegExp);\n      if (booleanMatch) {\n        return booleanMatch[1] === '1';\n      }\n\n      return v;\n    });\n\n  const configKeys = Object.keys(pattern.defaultConfig);\n\n  return serializedConfigValues.reduce((config, serializedValue, i) => {\n    if (serializedValue !== null) {\n      const key = configKeys[i];\n      return { ...config, [key]: serializedValue };\n    }\n\n    return config;\n  }, {});\n}\n","export async function share(input) {\n  try {\n    navigator.share(await getShareData(input));\n  } catch (error) {\n    alert('Error: ' + error.message);\n  }\n}\n\nexport async function isShareSupported(input) {\n  if (!navigator.share) {\n    return false;\n  }\n\n  const shareData = await getShareData(input);\n  return navigator.canShare(shareData);\n}\n\nasync function getShareData({ renderer, pattern }) {\n  const dataUrl = renderer.toDataURL();\n  const blob = await (await fetch(dataUrl)).blob();\n  const files = [\n    new File([blob], pattern.name + '.jpg', {\n      type: blob.type,\n      lastModified: new Date().getTime(),\n    }),\n  ];\n  return {\n    url: window.location.href,\n    files,\n    title: document.title,\n    text: 'String Art Studio - ' + pattern.name,\n  };\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\nimport { deserializeConfig, serializeConfig } from './Serialize.js';\nimport { isShareSupported, share } from './share.js';\nimport { initServiceWorker } from './pwa.js';\nimport CanvasRenderer from './renderers/CanvasRenderer.js';\n\nwindow.addEventListener('error', function (event) {\n  alert('Error: ' + event.message);\n});\n\nconst elements = {\n  canvas: document.querySelector('#canvas_panel'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  shareBtn: document.querySelector('#share_btn'),\n  playerBtn: document.querySelector('#player_btn'),\n  buttons: document.querySelector('#buttons'),\n  instructionsLink: document.querySelector(\n    '#pattern_select_dropdown_instructions'\n  ),\n};\n\nconst canvasRenderer = new CanvasRenderer(elements.canvas);\n\nconst patterns = patternTypes.map(Pattern => new Pattern(canvasRenderer));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\n\nwindow.addEventListener('load', main);\n\nasync function main() {\n  initRouting();\n\n  await initServiceWorker();\n\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  unHide(document.querySelector('main'));\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      thumbnails.toggle();\n    }\n  }\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  elements.shareBtn.addEventListener(\n    'click',\n    async () =>\n      await share({\n        renderer: canvasRenderer,\n        pattern: currentPattern,\n      })\n  );\n  elements.playerBtn.addEventListener('click', () => {\n    document.querySelectorAll('#buttons [data-toggle-for]').forEach(btn => {\n      if (btn.classList.contains('active')) {\n        btn.click();\n      }\n    });\n  });\n\n  elements.instructionsLink.addEventListener('click', e => {\n    e.preventDefault();\n    history.pushState({ pattern: null }, 'String Art Studio', './');\n    unselectPattern();\n  });\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern &&\n        currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nasync function initPattern() {\n  if (!currentPattern) {\n    throw new Error(\"Can't init pattern - no current pattern available!\");\n  }\n\n  initSize();\n\n  window.addEventListener(\n    'resize',\n    () => currentPattern && currentPattern.draw()\n  );\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  const showShare = await isShareSupported({\n    renderer: canvasRenderer,\n    pattern: currentPattern,\n  });\n  if (showShare) {\n    unHide(elements.shareBtn);\n  }\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = canvasRenderer.toDataURL();\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig && configQuery\n        ? `&config=${encodeURIComponent(configQuery)}`\n        : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize(size) {\n  if (size.width && size.height) {\n    canvasRenderer.setSize(size);\n    if (!elements.canvas.classList.contains('overflow')) {\n      elements.canvas.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.classList.remove('overflow');\n    canvasRenderer.setSize(null);\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  if (state?.pattern) {\n    const pattern = findPatternById(state.pattern);\n    selectPattern(pattern, {\n      draw: false,\n      config: state.config ? deserializeConfig(pattern, state.config) : {},\n    });\n\n    thumbnails.close();\n    currentPattern.draw();\n  } else {\n    unselectPattern();\n    thumbnails.open();\n  }\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId}\" not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  const isFirstTime = !currentPattern;\n\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.setConfig(config);\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  if (pattern.link) {\n    elements.patternLink.setAttribute('href', pattern.link);\n    elements.patternLink.innerText = pattern.linkText ?? 'Example';\n    unHide(elements.patternLink);\n  } else {\n    hide(elements.patternLink);\n  }\n\n  if (draw) {\n    requestAnimationFrame(() => {\n      currentPattern.draw();\n    });\n  }\n\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n  document.body.setAttribute('data-pattern', pattern.id);\n\n  if (isFirstTime) {\n    initPattern();\n    document.body.querySelectorAll('.pattern_only').forEach(unHide);\n  }\n}\n\nfunction unHide(element) {\n  element.removeAttribute('hidden');\n}\n\nfunction hide(element) {\n  element.setAttribute('hidden', 'hidden');\n}\n\nfunction unselectPattern() {\n  currentPattern = null;\n  canvasRenderer.clear();\n  hide(elements.patternLink);\n  thumbnails.setCurrentPattern(null);\n  controls && controls.destroy();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  document.body.removeAttribute('data-pattern');\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\nimport CanvasRenderer from '../renderers/CanvasRenderer.js';\n\nconst THUMBNAIL_WIDTH_PX = '100px';\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.open();\n    } else if (this.pattern) {\n      this.close();\n    }\n  }\n\n  open() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    }\n  }\n\n  close() {\n    if (!this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern?.name ?? 'Choose a pattern';\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const patternLink = document.createElement('a');\n      const renderer = new CanvasRenderer(patternLink);\n\n      patternLink.style.width = patternLink.style.height = THUMBNAIL_WIDTH_PX;\n\n      const pattern = new PatternType(renderer);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n","const swFilename = 'service-worker.js';\n\nexport async function initServiceWorker() {\n  if (!navigator.serviceWorker || document.location.hostname === '127.0.0.1') {\n    return;\n  }\n\n  try {\n    const registration = await navigator.serviceWorker.register(swFilename);\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log(\n              'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n            );\n          } else {\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","attr","min","max","step","show","isMultiColor","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","Math","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","repeatColors","getColorMap","stepCount","Error","stepsPerColor","floor","colorMap","Map","i","set","include","exclude","defaults","customControls","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","renderer","setConfig","nails","addedPoints","Set","nailRadius","nailsColor","nailNumbersFontSize","clear","addNail","nail","nailPoint","point","round","join","has","push","add","drawNumbers","renderNails","fontSize","radius","renderNumbers","margin","parentElement","destroy","reset","setColor","setLineWidth","width","setBackground","renderLines","startPosition","positions","getSize","setSize","height","toDataURL","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","showNailNumbers","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$var$getControlsIndex","controlsIndex","$65e05ee91a8797e3$export$2e2bcd8739ae039","$2784b5c9c7b1f845$export$2e2bcd8739ae039","concat","_controlsIndex","defaultConfig","_defaultConfig","assign","defaultValues","_config","value","currentConfig","onConfigChange","changedControlKeys","keys","setConfigValue","controlKey","setUpDraw","previousSize","size","center","onResize","$a8180031c78213da$export$2e2bcd8739ae039","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$97e1d102fa450510$export$f81847884871263e","int1","int2","$97e1d102fa450510$export$f4644083ce95e7e3","PI","getPoint","index","realIndex","getNailIndex","points","get","sin","indexAngle","rotationAngle","cos","isReverse","n","serializedConfig","_serializeConfig","rotation","configCenter","v","props","nailsNumberStart","getNumber","number","ringSize","ringDistance","prevPoint","prevPointIndex","isPrevSide","startPoint","isStructural","affectsStepCount","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","$17fe1039ca333e84$export$2e2bcd8739ae039","id","link","$ff21866e88ed26dc$export$2e2bcd8739ae039","rotationConfig","super","nSpirals","radiusIncrease","angleStep","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","generatePoints","lastPoint","stepColor","linkText","_n","layers","extraNails","layerFill","base","circleConfig","stringsPerLayer","circle","layerShift","shift","time","toIndex","instructions","drawTimesTable","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","x","y","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$da53f1772640b858$var$LAYER_DEFAULTS","end","sides","sideCount","sideAngle","radiusAngle","_getProps","fitSize","getSizeAndCenter","configSize","boundingRect","getBoundingRect","scale","overrideConfig","nailsSpacing","sideSize","start","nailsDistance","radiusNailsCount","nailsPerSide","getSidePoint","pointsMapIndex","startX","getCenterPoint","radiusNailsDistance","firstPoint","boundingRect1","slice","drawCenter","drawSides","sideIndexStart","index1","$d89aefe1e0b94ba8$var$COLOR_CONFIG","$a3a02ffca86b5e03$var$COLOR_CONFIG","$4231afd05203ede9$var$COLOR_CONFIG","$f7e3e90b370cc9b7$var$COLOR_CONFIG","$f7e3e90b370cc9b7$var$ANGLE","$f7e3e90b370cc9b7$var$SIDE_ANGLES","$8b13425f1e264518$export$2e2bcd8739ae039","sideNails","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerX","centerY","getArcPoint","reverseOrder","prevSide","innerColor","alternate","linesPerRound","rounds","linesPerThisRound","nextPoint","outterColor","isStar","ceil","pointPosition","drawCircle","ringColor","drawRing","drawStar","generateStarPoints","nailsConfig","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","self","advance","getPointIndex","$4252a999d90491dd$export$2e2bcd8739ae039","innerLength","repetition","layersCount","realRepetition","currentInnerLength","repetitionCount","isPrevPoint","drawSpiral","layerSpread","show1","show2","show3","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","prevCirclePoint","nextLayerIndex","forEach","polygonConfig","polygon","$6489b1167eb82c4c$export$2e2bcd8739ae039","bezier","limitedBezier","layerAngleShift","polygons","leftSide","centerIndexes","getCenterIndexes","extraNailCount","resetStructure","calc","some","getCalc","maxSteps","angleRadians","currentSize","k","r","steps","renderRing","ringPadding","renderTriangles","levels","density","globalRotation","renderCaps","ringNailCount","globalRotationRadians","ringWidth","edgeSize","nailsLength","countPerLevelSide","level","triangleHeight","sqrt","triangleCenterDistance","nailDistance","triangleCount","colorPerLevel","getPoints","realColorCount","getTrianglePoints","isCapLevel","triangleIndexInSide","missingSide","triangleIndex","_getNextIndexInTriangle","trianglePoints","triangleSidePoints","nNailDistance","largeDistance","smallDistance","levelsPoints","levelsCount","levelTrianglesPoints","levelSideTriangleCount","levelPositions","isFlipped","trianglePosition","atan","distanceFromCenter","sideRotation","triangleCenterAngle","rotatedTrianglePosition","indexInSide","initialSide","lastSide","lastIndex","isNextSide","nextSidePoint","targetSide","triangle1","triangle2","isNextLevel","nextLevelTriangleIndex","fillColor","levelSideCount","angleShift","isLastTriangleInSide","firstSide","order","generateOrderInSide","pointIndex","triangle1Points","triangle2Points","t1Side","t2Side","last","n1","direction","triangleLevels","levelIndex","lastIndexInLevel","triangle","generateStringsBetweenTriangles","generateTriangleStrings","fillStepsPerTriangle","levelsWithFillBetween","triangleSide","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","controlElements","renderControls","removeEventListener","innerHTML","event","eventHandler","Function","_triggerEvent","eventData","e1","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","removeAttribute","setAttribute","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","window","screen","$0597ff46967fdd49$var$SIZES","canvas","ctx","getContext","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","globalCompositeOperation","removeElement","clearRect","strokeStyle","lineWidth","fillStyle","fillRect","clientWidth","clientHeight","style","beginPath","moveTo","lineTo","stroke","textBaseline","font","nailNumberOffset","arc","isRightAlign","numberPosition","textAlign","fillText","String","$2085f05924b9087c$var$numberRegExp","$2085f05924b9087c$var$booleanRegExp","$2085f05924b9087c$export$39ef19ebad6081a3","serializedCofig","serializedConfigValues","commaCount","split","test","booleanMatch","match","configKeys","serializedValue","$72facf7821ef2ed6$var$getShareData","dataUrl","blob","fetch","files","File","lastModified","Date","getTime","url","location","href","title","text","alert","message","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadNailsBtn","resetBtn","shareBtn","playerBtn","buttons","instructionsLink","$52852adbc3c0b381$var$canvasRenderer","$ec63feea13ad1aa1$export$2e2bcd8739ae039","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","open","close","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","thumbnailConfig","li","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$initPattern","$52852adbc3c0b381$var$downloadCanvas","$52852adbc3c0b381$var$downloadNailsImage","$52852adbc3c0b381$var$reset","navigator","share","shareData","canShare","$72facf7821ef2ed6$export$4fa6f570da04f7cc","$52852adbc3c0b381$var$unHide","downloadLink","download","click","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","nonDefaultConfigValues","toFixed","pop","$2085f05924b9087c$export$fa8157df3262779b","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","$52852adbc3c0b381$var$unselectPattern","patternId","isFirstTime","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$hide","$52852adbc3c0b381$var$initRouting","serviceWorker","hostname","registration","register","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","$df9fee1b96456f2b$export$d594efb518b3cec4","queryParams","URLSearchParams","search","queryPattern","async","$72facf7821ef2ed6$export$ed80d9de1d9df928","btn","dialogId","toggleFor"],"version":3,"file":"index.c27fbe04.js.map"}