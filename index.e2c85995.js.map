{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/renderers/Renderer.js","src/scripts/StringArt.js","src/scripts/helpers/easing.js","src/scripts/helpers/math_utils.js","src/scripts/helpers/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Mandala.js","src/scripts/string_art_types/Eye.js","src/scripts/string_art_types/Assymetry.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/string_art_types/Flower.js","src/scripts/string_art_types/MaurerRose.js","src/scripts/string_art_types/FlowerOfLife.js","src/scripts/string_art_types/Comet.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Freestyle.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/renderers/CanvasRenderer.js","src/scripts/Serialize.js","src/scripts/share.js","src/scripts/renderers/SVGRenderer.js","src/scripts/download/Download.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js","src/scripts/download/SVGDownload.js","src/scripts/pwa.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n  {\n    key: 'colorOrderGroup',\n    type: 'group',\n    label: 'Order',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'reverseColors',\n        label: 'Reverse colors order',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'repeatColors',\n        label: 'Repeat colors',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'mirrorColors',\n        label: 'Mirror Colors',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor, repeatColors }) => isMultiColor && repeatColors,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      repeatColors,\n      mirrorColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / (Math.max(colorCount, 2) - 1)\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (repeatColors && mirrorColors) {\n        const [_firstColor, ...restColors] = this.colors;\n        restColors.pop();\n        this.colors = [...this.colors, ...restColors.reverse()];\n      }\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color, repeatColors, mirrorColors } =\n      this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = repeatColors\n        ? colorIndex % this.colors.length\n        : this.colors.length - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    if (!colorCount) {\n      throw new Error(\"Can't get color map, no colorCount provided!\");\n    }\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {}, customControls }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [...(customControls ?? []), ...controls],\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(renderer, config) {\n    this.setConfig(config);\n    this.nails = [];\n    this.addedPoints = new Set();\n    this.renderer = renderer;\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n    if (this.addedPoints) {\n      this.addedPoints.clear();\n    }\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    const nailPoint = nail.point.map(Math.round).join('_');\n    if (!this.addedPoints.has(nailPoint)) {\n      this.nails.push(nail);\n      this.addedPoints.add(nailPoint);\n    }\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.renderer.renderNails(this.nails, {\n      color: this.nailsColor,\n      fontSize: this.nailNumbersFontSize,\n      radius: this.nailRadius,\n      renderNumbers: drawNumbers,\n      margin: NUMBER_MARGIN,\n    });\n\n    this.nails = [];\n    this.addedPoints.clear();\n  }\n}\n","export default class Renderer {\n  constructor(parentElement) {\n    this.parentElement = parentElement;\n  }\n\n  destroy() {\n    this.parentElement.removeElement(this.element);\n  }\n\n  get element() {\n    throw new Error('element getter not implemented!');\n  }\n\n  reset() {}\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  setLineWidth(width) {}\n\n  setBackground(color) {}\n\n  renderLines(startPosition, ...positions) {\n    throw new Error('Renderer \"renderLines\" method not implemented!');\n  }\n\n  /**\n   * Renders the nails for the string art\n   * @param {[{ point: [x: number, y: number], number: string }]} nails\n   * @param {*} param1\n   */\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin }) {\n    throw new Error('Renderer \"renderNails\" method not implemented!');\n  }\n\n  getSize() {\n    const { width, height } = this.parentElement.getBoundingClientRect();\n    return [width, height];\n  }\n\n  setSize(size) {\n    this.size = size;\n\n    this.element.removeAttribute('width');\n    this.element.removeAttribute('height');\n\n    if (size) {\n      this.element.style.width = `${size.width}px`;\n      this.element.style.height = `${size.height}px`;\n    } else {\n      this.element.removeAttribute('style');\n    }\n  }\n\n  clear() {\n    throw new Error('Renderer \"clear\" method not implemented!');\n  }\n\n  toDataURL() {\n    throw new Error('Renderer \"toDataURL\" method not implemented!');\n  }\n}\n","import Nails from './Nails.js';\nimport Renderer from './renderers/Renderer.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.1 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n        show: ({ showNails }) => showNails,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(renderer) {\n    if (!renderer) {\n      throw new Error('Renderer not specified!');\n    }\n\n    if (!(renderer instanceof Renderer)) {\n      throw new Error('Renderer is not an instance of Renderer!');\n    }\n\n    this.renderer = renderer;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get controlsIndex() {\n    if (!this._controlsIndex) {\n      this._controlsIndex = getControlsIndex(this.controls);\n    }\n\n    return this._controlsIndex;\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = Object.freeze(\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\n      );\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  setConfig(config) {\n    const currentConfig = this.config;\n    this.config = config;\n    if (this.onConfigChange) {\n      const changedControlKeys = Object.keys(currentConfig).filter(\n        key => config[key] !== currentConfig[key]\n      );\n\n      this.onConfigChange({\n        controls: changedControlKeys.map(key => ({\n          control: this.controlsIndex[key],\n          value: config[key],\n        })),\n      });\n    }\n  }\n\n  resetStructure() {}\n\n  onConfigChange({ controls }) {\n    if (controls.some(({ control }) => control.isStructural)) {\n      this.resetStructure();\n      if (\n        this.stepCount != null &&\n        controls.some(({ control }) => control.affectsStepCount !== false)\n      ) {\n        this.stepCount = null;\n      }\n    }\n  }\n\n  onResize() {\n    this.resetStructure();\n  }\n\n  setConfigValue(controlKey, value) {\n    this._config = Object.freeze({\n      ...(this._config ?? this.defaultConfig),\n      [controlKey]: value,\n    });\n\n    if (this.onConfigChange) {\n      this.onConfigChange({\n        controls: [{ control: this.controlsIndex[controlKey], value }].filter(\n          ({ control }) => !!control\n        ),\n      });\n    }\n  }\n\n  getSize() {\n    return this.renderer.getSize();\n  }\n\n  setUpDraw() {\n    const previousSize = this.size;\n    this.renderer.reset();\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.center = this.size.map(value => value / 2);\n\n    if (\n      previousSize &&\n      (previousSize[0] !== width || previousSize[1] !== height)\n    ) {\n      if (this.onResize) {\n        this.onResize();\n      }\n    }\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.renderer, this.config);\n    }\n\n    this.renderer.setLineWidth(this.config.stringWidth);\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    if (enableBackground) {\n      this.renderer.setBackground(\n        customBackgroundColor\n          ? backgroundColor\n          : darkMode\n          ? COLORS.dark\n          : COLORS.light\n      );\n    }\n\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nfunction getControlsIndex(configControls) {\n  return configControls.reduce(\n    (controlsIndex, control) =>\n      control.children\n        ? {\n            ...controlsIndex,\n            ...getControlsIndex(control.children),\n          }\n        : {\n            ...controlsIndex,\n            [control.key]: control,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","const easing = {\n  linear: x => x,\n  inOutCirc(x) {\n    return x < 0.5\n      ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n      : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n  },\n  easeOutQuint(x) {\n    return 1 - Math.pow(1 - x, 5);\n  },\n  fastSlowFast(t) {\n    // Clamp t to [0,1] just to be safe\n    t = Math.max(0, Math.min(1, t));\n    // Custom easing formula: accelerates, slows in middle, then accelerates again\n    return 0.5 * (1 - Math.cos(Math.PI * t)) ** 1.5;\n  },\n  fastInOutSquare(x) {\n    return x <= 0.5\n      ? (1 - Math.pow(1 - x * 2, 2)) / 2\n      : 0.5 + Math.pow(x * 2 - 1, 2) / 2;\n  },\n  fastInOutCubic(x) {\n    return x <= 0.5\n      ? (1 - Math.pow(1 - x * 2, 3)) / 2\n      : 0.5 + Math.pow(x * 2 - 1, 3) / 2;\n  },\n  fastInOutQuint(x) {\n    return x <= 0.5\n      ? (1 - Math.pow(1 - x * 2, 5)) / 2\n      : 0.5 + Math.pow(x * 2 - 1, 5) / 2;\n  },\n  fastInOut(pow, x) {\n    return x <= 0.5\n      ? (1 - Math.pow(1 - x * 2, pow)) / 2\n      : 0.5 + Math.pow(x * 2 - 1, pow) / 2;\n  },\n  fastInOutFixed(pow, fastArea, x) {\n    if (x > fastArea && x < 1 - fastArea) {\n      const y1 = (1 - Math.pow(1 - fastArea * 2, pow)) / 2;\n      const y2 = 0.5 + Math.pow((1 - fastArea) * 2 - 1, pow) / 2;\n\n      return y1 + ((x - fastArea) * (y2 - y1)) / (1 - 2 * fastArea);\n    }\n    return x <= fastArea\n      ? (1 - Math.pow(1 - x * 2, pow)) / 2\n      : 0.5 + Math.pow(x * 2 - 1, pow) / 2;\n  },\n};\n\neasing.fastInOut.requirePower = true;\neasing.fastInOutFixed.requirePower = true;\neasing.fastInOutFixed.requireFastArea = true;\n\nexport default easing;\n","/**\n * Returns the greatest common divisor of two integers\n * https://en.wikipedia.org/wiki/Euclidean_algorithm\n * @param {number} int1\n * @param {number} int2\n * @returns number\n */\nexport function gcd(int1, int2) {\n  if (!int2) return int1;\n\n  return gcd(int2, int1 % int2);\n}\n\n/**\n * Fits the first size inside size2\n * @param {[number, number]} size1\n * @param {[number, number]} size2\n */\nexport function fitInside(size1, size2) {\n  const ratio = Math.min(size2[0] / size1[0], size2[1] / size1[1]);\n  return size1.map(v => v * ratio);\n}\n\nexport const PI2 = Math.PI * 2;\n","import Nails from '../Nails.js';\nimport easing from './easing.js';\nimport { fitInside, PI2 } from './math_utils.js';\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    const realIndex = this.getNailIndex(index);\n\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const angle =\n      this.easingFunction(realIndex / this.config.n) * PI2 + this.rotationAngle;\n\n    const point = [\n      this.center[0] + Math.sin(angle) * this.xyRadius[0],\n      this.center[1] + Math.cos(angle) * this.xyRadius[1],\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  getNailIndex(index = 0) {\n    let realIndex = this.isReverse ? this.config.n - 1 - index : index;\n    if (realIndex > this.config.n - 1) {\n      realIndex = realIndex % this.config.n;\n    }\n    return realIndex;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const clampedRadius = radius ?? Math.min(...center) - margin;\n      let xyRadius = [clampedRadius, clampedRadius];\n\n      if (config.distortion) {\n        const distortedBox =\n          config.distortion < 0\n            ? [clampedRadius * (1 - Math.abs(config.distortion)), clampedRadius]\n            : [clampedRadius / (1 - config.distortion), clampedRadius];\n\n        xyRadius = fitInside(\n          distortedBox,\n          center.map(v => v - margin)\n        );\n      }\n\n      const props = {\n        center,\n        radius: clampedRadius,\n        xyRadius,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n\n      const easingFunction = config.displacementFunc\n        ? easing[config.displacementFunc]\n        : easing.linear;\n      const easingParams = [];\n      if (easingFunction.requirePower) {\n        easingParams.push(config.displacementMag);\n      }\n      if (easingFunction.requireFastArea) {\n        easingParams.push(config.displacementFastArea);\n      }\n      const easingFunctionWithParams = easingParams.length\n        ? easingFunction.bind(null, ...easingParams)\n        : easingFunction;\n\n      this.easingFunction = easingFunctionWithParams;\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n    distortion = 0,\n    displacementFunc,\n    displacementMag,\n    displacementFastArea,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n      distortion,\n    ]\n      .concat(\n        displacementFunc === 'linear'\n          ? []\n          : [displacementFunc, displacementMag, displacementFastArea]\n      )\n      .join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  *drawRing(renderer, { ringSize, color }) {\n    const { n } = this.config;\n    const ringDistance = Math.floor(ringSize * n);\n\n    let prevPoint;\n    let prevPointIndex = 0;\n    let isPrevSide = false;\n    renderer.setColor(color);\n\n    for (let i = 0; i < n; i++) {\n      if (!prevPoint) {\n        prevPoint = this.getPoint(0);\n      }\n\n      const startPoint = prevPoint;\n      const positions = [];\n      prevPointIndex = isPrevSide ? i : prevPointIndex + ringDistance;\n      prevPoint = this.getPoint(prevPointIndex);\n      positions.push(prevPoint);\n\n      if (i < n - 1) {\n        prevPointIndex++;\n        prevPoint = this.getPoint(prevPointIndex);\n        positions.push(prevPoint);\n      }\n\n      renderer.renderLines(startPoint, ...positions);\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n    isStructural: true,\n    affectsStepCount: false,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n    isStructural: true,\n  });\n\n  static displacementConfig = Object.freeze({\n    key: 'displacement',\n    label: 'Displacement',\n    type: 'group',\n    children: [\n      {\n        key: 'displacementFunc',\n        label: 'Displacement function',\n        defaultValue: 'linear',\n        type: 'select',\n        options: Object.keys(easing),\n        isStructural: true,\n        affectsStepCount: false,\n      },\n      {\n        key: 'displacementMag',\n        label: 'Displacement magnitude',\n        defaultValue: 3,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 10,\n          step: 0.1,\n        },\n        show: ({ displacementFunc }) => easing[displacementFunc].requirePower,\n        isStructural: true,\n        affectsStepCount: false,\n      },\n      {\n        key: 'displacementFastArea',\n        label: 'Displacement fast area',\n        defaultValue: 0.4,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 0.5,\n          step: 0.01,\n        },\n        show: ({ displacementFunc }) =>\n          easing[displacementFunc].requireFastArea,\n        isStructural: true,\n        affectsStepCount: false,\n      },\n    ],\n  });\n\n  static distortionConfig = Object.freeze({\n    key: 'distortion',\n    label: 'Distortion',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: -0.99,\n      max: 0.99,\n      step: 0.01,\n    },\n    isStructural: true,\n    affectsStepCount: false,\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n  exclude: ['repeatColors', 'mirrorColors'],\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 5,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    Circle.distortionConfig,\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount, repetition, distortion } =\n      this.config;\n    this.layersCount = layers ?? 1;\n    this.realRepetition = repetition * 2 - 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n      distortion,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.renderer.setColor(color);\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.renderer.setColor(stepColor);\n        }\n      }\n\n      prevPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength + 1\n        : prevPointIndex + currentInnerLength;\n\n      if (repetitionCount === this.realRepetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n        prevPointIndex++;\n      } else {\n        repetitionCount++;\n      }\n\n      const nextPoint = this.circle.getPoint(prevPointIndex);\n\n      this.renderer.renderLines(prevPoint, nextPoint);\n      prevPoint = nextPoint;\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return Math.round(layers * n * (innerLength * 2) * repetition);\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.renderer.setColor(this.color.getColor(0));\n    let lastPoint = this.center;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.renderer.setColor(stepColor);\n        }\n      }\n\n      if (lastPoint) {\n        this.renderer.renderLines(lastPoint, point);\n      }\n      lastPoint = point;\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Mandala extends StringArt {\n  name = 'Mandala';\n  id = 'mandala';\n  link = 'https://www.youtube.com/watch?v=qhbuKbxJsk8';\n  linkText = 'Learn';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Circle.distortionConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, distortion, margin, layerFill, base, reverse } =\n      this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n      distortion,\n      reverse,\n    };\n    this.stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n    this.base = base;\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', time }) {\n    const n = this.n;\n    this.renderer.setColor(color);\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= this.stringsPerLayer; i++) {\n      const startPoint = point;\n      point = this.circle.getPoint(i + shift);\n      const toIndex = (i * this.base) % n;\n      this.renderer.renderLines(\n        startPoint,\n        point,\n        this.circle.getPoint(toIndex + shift)\n      );\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { layers, layerFill } = this.config;\n    const stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n    return (layers ?? 1) * stringsPerLayer;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n    this.renderer.setColor(color);\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.renderer.renderLines(\n        this.getPoint({ side, index: i, rotation, ...sideProps }),\n        this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize = Math.min(...this.renderer.getSize()) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst LAYER_DEFAULTS = [\n  { size: 0.25, end: 1, color: '#a94fb0' },\n  { size: 0.125, end: 0.888, color: '#ec6ad0' },\n  { size: 0, end: 0.826, color: '#f08ad5', reverse: true },\n];\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    Circle.distortionConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: LAYER_DEFAULTS.map(({ size, end, color, reverse }, i) => {\n        const layer = i + 1;\n        return {\n          key: `layer${layer}`,\n          label: `Layer ${layer}`,\n          type: 'group',\n          children: [\n            {\n              key: `show${layer}`,\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: `size${layer}`,\n              label: 'Size',\n              defaultValue: size,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: (config, { key }) =>\n                Math.round(config.n * config[key]),\n              show: config => config[`show${layer}`],\n            },\n            {\n              key: `end${layer}`,\n              label: 'End Position',\n              defaultValue: end,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: (config, { key }) =>\n                Math.round(config.n * config[key]),\n              show: config => config[`show${layer}`],\n            },\n            {\n              key: `color${layer}`,\n              label: 'Color',\n              defaultValue: color,\n              type: 'color',\n              show: config => config[`show${layer}`],\n            },\n            {\n              key: `reverse${layer}`,\n              label: 'Reverse',\n              defaultValue: reverse === true,\n              type: 'checkbox',\n              show: config => config[`show${layer}`],\n            },\n          ],\n        };\n      }),\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0, distortion } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n      distortion,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.renderer.setColor(color);\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      const startPoint = prevPoint ?? this.getPoint(getPointIndex(index));\n      const positions = [];\n      if (prevPoint) {\n        positions.push(this.getPoint(prevPointIndex + advance));\n      }\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      positions.push((prevPoint = this.getPoint(prevPointIndex)));\n\n      this.renderer.renderLines(startPoint, ...positions);\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import { PI2 } from './math_utils.js';\n\nexport default class Polygon {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const { rotation = 0, sides: sideCount } = (this.config = config);\n\n      const sideAngle = PI2 / sideCount;\n\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\n        const angle = sideAngle * i + PI2 * rotation;\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\n\n        return {\n          cos: Math.cos(angle),\n          sin: Math.sin(angle),\n          center: {\n            cos: Math.cos(radiusAngle),\n            sin: Math.sin(radiusAngle),\n          },\n        };\n      });\n\n      Object.assign(this, {\n        sides,\n        sideCount,\n        sideAngle,\n      });\n\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n\n      Object.assign(this, this._getProps());\n\n      if (config.fitSize) {\n        Object.assign(this, this._getProps(this.getSizeAndCenter()));\n        this.points.clear();\n      }\n    }\n  }\n\n  getSizeAndCenter() {\n    const { size: configSize, margin } = this.config;\n\n    const boundingRect = this.getBoundingRect();\n    const scale = Math.min(\n      (configSize[0] - 2 * margin) / boundingRect.width,\n      (configSize[1] - 2 * margin) / boundingRect.height\n    );\n\n    const size = configSize.map(v => v * scale);\n    const center = [\n      this.center[0] -\n        (scale * (boundingRect.left - configSize[0] + boundingRect.right)) / 2,\n      this.center[1] -\n        (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) / 2,\n    ];\n\n    this.points.clear();\n    return { size, center };\n  }\n\n  _getProps(overrideConfig) {\n    const {\n      nailsSpacing,\n      size,\n      margin = 0,\n      center: configCenter,\n    } = Object.assign({}, this.config, overrideConfig);\n\n    const center = configCenter ?? this.config.size.map(v => v / 2);\n\n    const radius = Math.min(...size) / 2 - margin;\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\n    const start = [\n      radius * Math.sin(this.sideAngle / 2),\n      radius * Math.cos(this.sideAngle / 2),\n    ];\n    const nailsDistance = sideSize * nailsSpacing;\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\n    const radiusNailsDistance = radius / radiusNailsCount;\n\n    return {\n      nailsSpacing,\n      nailsPerSide: 1 / nailsSpacing,\n      center,\n      radius,\n      sideSize,\n      start,\n      nailsDistance,\n      radiusNailsCount,\n      radiusNailsDistance,\n    };\n  }\n\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\n      '_'\n    );\n  }\n\n  getSidePoint({ side, index }) {\n    const pointsMapIndex = [side, index].join('_');\n\n    if (this.points.has(pointsMapIndex)) {\n      return this.points.get(pointsMapIndex);\n    }\n\n    const startX = this.start[0] - index * this.nailsDistance;\n    const { cos, sin } = this.sides[side];\n\n    const point = [\n      cos * startX - sin * this.start[1] + this.center[0],\n      sin * startX + cos * this.start[1] + this.center[1],\n    ];\n\n    this.points.set(pointsMapIndex, point);\n    return point;\n  }\n\n  getCenterPoint({ side, index }) {\n    const radius = index * this.radiusNailsDistance;\n    const { sin, cos } = this.sides[side].center;\n\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\n  }\n\n  getBoundingRect() {\n    const points = this.sides.map((_, side) =>\n      this.getSidePoint({ side, index: 0 })\n    );\n    const firstPoint = points[0];\n\n    const boundingRect = points.slice(1).reduce(\n      (boundingRect, [x, y]) => ({\n        left: Math.min(boundingRect.left, x),\n        right: Math.max(boundingRect.right, x),\n        top: Math.min(boundingRect.top, y),\n        bottom: Math.max(boundingRect.bottom, y),\n      }),\n      {\n        left: firstPoint[0],\n        right: firstPoint[0],\n        top: firstPoint[1],\n        bottom: firstPoint[1],\n      }\n    );\n\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\n    boundingRect.width = boundingRect.right - boundingRect.left;\n    Object.freeze(boundingRect);\n    return boundingRect;\n  }\n\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\n    for (let side = 0; side < this.sideCount; side++) {\n      const sideIndexStart = side * this.nailsPerSide;\n\n      if (drawSides) {\n        for (let index = 0; index < this.nailsPerSide; index++) {\n          nails.addNail({\n            point: this.getSidePoint({ side, index }),\n            number: sideIndexStart + index,\n          });\n        }\n      }\n\n      if (drawCenter) {\n        for (let index = 0; index < this.radiusNailsCount; index++) {\n          nails.addNail({\n            point: this.getCenterPoint({ side, index }),\n            number: `${side}_${index}`,\n          });\n        }\n      }\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 1,\n    multicolorStart: 0,\n    multicolorByLightness: true,\n    minLightness: 20,\n    maxLightness: 50,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class PolygonPattern extends StringArt {\n  name = 'Polygon';\n  id = 'polygon';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'bezier',\n      label: 'Bezier',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 4,\n        step: 1,\n      },\n      show: ({ sides }) => sides > 4,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#5c5c5c',\n    nailRadius: 1,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const polygonConfig = {\n      sides,\n      rotation,\n      margin,\n      size,\n      nailsSpacing: 1 / n,\n      fitSize: true,\n    };\n\n    if (this.polygon) {\n      this.polygon.setConfig(polygonConfig);\n    } else {\n      this.polygon = new Polygon(polygonConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: sides,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: sides,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier } = this.config;\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\n\n    let step = 0;\n    this.renderer.setColor(this.color.getColor(0));\n\n    for (let side = 0; side < sides; side++) {\n      const nextSide = (side + limitedBezier) % sides;\n\n      if (this.colorMap) {\n        this.renderer.setColor(this.colorMap.get(step));\n      }\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\n        this.renderer.renderLines(\n          this.polygon.getSidePoint({ side, index }),\n          this.polygon.getSidePoint({ side: nextSide, index })\n        );\n\n        yield;\n        step++;\n      }\n    }\n  }\n\n  getStepCount() {\n    const { sides, n } = this.config;\n    return sides * n;\n  }\n\n  drawNails() {\n    this.polygon.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 264,\n    multicolorStart: 53,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class Flower extends StringArt {\n  name = 'Flower';\n  id = 'flower';\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#29f1ff',\n    nailRadius: 1,\n    stringWidth: 0.5,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const layerAngleShift = 1 / (sides * layers);\n\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\n      const polygonConfig = {\n        sides,\n        rotation: rotation + i * layerAngleShift,\n        margin,\n        size,\n        nailsSpacing: 1 / n,\n      };\n\n      return new Polygon(polygonConfig);\n    });\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: layers,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: layers,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, layers } = this.config;\n\n    let step = 0;\n    this.renderer.setColor(this.color.getColor(0));\n\n    for (let layer = 0; layer < layers; layer++) {\n      const polygon = this.polygons[layer];\n\n      for (let side = 0; side < sides; side++) {\n        const leftSide = side === sides - 1 ? 0 : side + 1;\n\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\n          if (this.colorMap?.has(step)) {\n            this.renderer.setColor(this.colorMap.get(step));\n          }\n\n          const centerIndexes = this.getCenterIndexes({\n            polygon,\n            sideIndex: index,\n          });\n\n          this.renderer.renderLines(\n            polygon.getCenterPoint({\n              side: side,\n              index: centerIndexes[0],\n            }),\n            polygon.getSidePoint({ side, index }),\n            polygon.getCenterPoint({\n              side: leftSide,\n              index: centerIndexes[1],\n            })\n          );\n\n          yield;\n          step++;\n        }\n      }\n    }\n  }\n\n  getCenterIndexes({ polygon, sideIndex }) {\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\n\n    return [\n      sideIndex < extraNailCount\n        ? -extraNailCount + sideIndex\n        : sideIndex - extraNailCount,\n      polygon.radiusNailsCount - sideIndex,\n    ];\n  }\n\n  getStepCount() {\n    const { sides, n, layers } = this.config;\n    return sides * (n + 1) * layers;\n  }\n\n  drawNails() {\n    this.polygons.forEach(polygon =>\n      polygon.drawNails(this.nails, { drawCenter: true })\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { gcd, PI2 } from '../helpers/math_utils.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ffffff',\n    multicolorRange: 133,\n    multicolorStart: 239,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n    colorCount: 4,\n  },\n  exclude: ['repeatColors', 'mirrorColors'],\n});\n\nexport default class MaurerRose extends StringArt {\n  name = 'Maurer Rose';\n  id = 'maurer_rose';\n  link = 'https://blog.glitch.land/en/posts/maurer-rose/';\n  linkText = 'Learn';\n  controls = [\n    {\n      key: 'n',\n      label: 'N',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 12,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'maxSteps',\n      label: 'Max steps',\n      defaultValue: 512,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 720,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'angle',\n      label: 'Angle',\n      defaultValue: 341,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 720,\n        step: 1,\n      },\n      displayValue: ({ angle }) => `${angle}°`,\n      isStructural: true,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  resetStructure() {\n    super.resetStructure();\n\n    if (this.points) {\n      this.points.clear();\n    }\n    this.calc = null;\n  }\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { isMultiColor, colorCount } = this.config;\n\n    if (!this.calc) {\n      this.calc = this.getCalc();\n    }\n\n    if (!this.points) {\n      this.points = new Map();\n    }\n\n    if (!this.stepCount) {\n      this.stepCount = this.getStepCount();\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.stepCount,\n        colorCount,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  getCalc() {\n    const { n, angle, rotation, maxSteps } = this.config;\n    const size = this.getSize();\n\n    return {\n      n,\n      angleRadians: (PI2 * angle) / maxSteps,\n      radius: Math.min(...size) / 2,\n      currentSize: size,\n      rotationAngle: -Math.PI * 2 * rotation,\n    };\n  }\n\n  getPoint(index) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const k = index * this.calc.angleRadians;\n    const r = this.calc.radius * Math.sin(this.calc.n * k);\n\n    const point = [\n      this.center[0] - r * Math.cos(k - this.calc.rotationAngle),\n      this.center[1] - r * Math.sin(k - this.calc.rotationAngle),\n    ];\n    this.points.set(index, point);\n    return point;\n  }\n\n  *generatePoints() {\n    const count = this.stepCount;\n\n    for (let i = 0; i < count + 1; i++) {\n      yield { point: this.getPoint(i), index: i };\n    }\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n\n    let prevPoint;\n    this.renderer.setColor(this.color.getColor(0));\n\n    for (const { point, index } of points) {\n      if (!prevPoint) {\n        prevPoint = point;\n        continue;\n      }\n\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.renderer.setColor(stepColor);\n        }\n      }\n\n      this.renderer.renderLines(prevPoint, point);\n      prevPoint = point;\n\n      yield;\n    }\n  }\n\n  getStepCount() {\n    if (this.stepCount) {\n      return this.stepCount;\n    }\n\n    const { maxSteps, angle, n } = this.config;\n    const angleGcd = gcd(maxSteps, angle);\n\n    let steps = maxSteps / angleGcd;\n    if (!(steps % 2) && n % 2) {\n      steps /= 2;\n    }\n    return Math.round(steps);\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, index } of points) {\n      this.nails.addNail({ point, number: index });\n    }\n  }\n\n  static thumbnailConfig = {\n    maxSteps: 160,\n    angle: 213,\n  };\n}\n","import { PI2 } from '../helpers/math_utils.js';\nimport StringArt from '../StringArt.js';\nimport Color from '../helpers/Color.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 43,\n    multicolorStart: 25,\n    multicolorByLightness: true,\n    minLightness: 40,\n    maxLightness: 95,\n    colorCount: 3,\n    repeatColors: true,\n    saturation: 83,\n    reverseColors: true,\n  },\n  customControls: [\n    {\n      key: 'colorPerLevel',\n      label: 'Color per level',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n  ],\n});\n\nconst ANGLE = -PI2 / 6; // The angle of a equilateral triangle;\nconst SIDE_ANGLES = new Array(6)\n  .fill(null)\n  .map((_, i) => Math.PI / 2 + ANGLE * i);\n\nexport default class FlowerOfLife extends StringArt {\n  name = 'Flower of Life';\n  id = 'flower_of_life';\n  link =\n    'https://www.reddit.com/r/psychedelicartwork/comments/mk97gi/rainbow_flower_of_life_uv_reactive_string_art/';\n  controls = [\n    {\n      key: 'levels',\n      label: 'Levels',\n      defaultValue: 3,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'density',\n      label: 'Density',\n      defaultValue: 10,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 50,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'globalRotation',\n      label: 'Rotation',\n      defaultValue: 0,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 30,\n        step: 1,\n      },\n      displayValue: (config, { key }) => `${config[key]}°`,\n      isStructural: true,\n      affectsStepCount: false,\n    },\n    {\n      key: 'fillGroup',\n      label: 'Fill',\n      type: 'group',\n      children: [\n        {\n          key: 'fill',\n          label: 'Show fill',\n          defaultValue: true,\n          type: 'checkbox',\n          isStructural: true,\n        },\n        {\n          key: 'fillColor',\n          label: 'Fill color',\n          defaultValue: '#292e29',\n          type: 'color',\n          show: ({ fill }) => fill,\n        },\n      ],\n    },\n    {\n      key: 'ringGroup',\n      label: 'Ring',\n      type: 'group',\n      children: [\n        {\n          key: 'renderRing',\n          label: 'Show outer ring',\n          type: 'checkbox',\n          defaultValue: true,\n          isStructural: true,\n        },\n        {\n          key: 'ringNailCount',\n          label: 'Ring nail count',\n          defaultValue: 144,\n          type: 'range',\n          attr: {\n            min: 3,\n            max: 360,\n            step: 1,\n          },\n          show: ({ renderRing }) => renderRing,\n          isStructural: true,\n        },\n        {\n          key: 'ringSize',\n          label: 'Outer ring size',\n          defaultValue: 0.23,\n          type: 'range',\n          attr: {\n            min: 0,\n            max: 0.5,\n            step: 0.01,\n          },\n          show: ({ renderRing }) => renderRing,\n          displayValue: ({ ringSize }) => `${Math.round(100 * ringSize)}%`,\n          isStructural: true,\n        },\n        {\n          key: 'ringPadding',\n          label: 'Ring padding',\n          defaultValue: 0.06,\n          type: 'range',\n          attr: {\n            min: 0,\n            max: 0.5,\n            step: 0.01,\n          },\n          show: ({ renderRing }) => renderRing,\n          isStructural: true,\n          displayValue: ({ ringPadding }) =>\n            `${Math.round(100 * ringPadding)}%`,\n        },\n        {\n          key: 'ringColor',\n          label: 'Ring color',\n          defaultValue: '#e8b564',\n          type: 'color',\n          show: ({ renderRing }) => renderRing,\n        },\n      ],\n    },\n    {\n      key: 'renderTriangles',\n      label: 'Show triangles',\n      defaultValue: true,\n      type: 'checkbox',\n      isStructural: true,\n    },\n    {\n      key: 'renderCaps',\n      label: 'Show caps',\n      defaultValue: true,\n      type: 'checkbox',\n      show: ({ renderTriangles }) => renderTriangles,\n      isStructural: true,\n    },\n\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#474747',\n  };\n\n  getCalc() {\n    const {\n      levels,\n      density,\n      margin,\n      globalRotation,\n      renderCaps,\n      fill,\n      renderTriangles,\n      renderRing,\n      ringNailCount,\n      ringSize,\n      ringPadding,\n    } = this.config;\n    const globalRotationRadians =\n      (globalRotation * Math.PI) / 180 + Math.PI / 6;\n\n    const radius = renderRing\n      ? Math.min(...(this.size ?? this.getSize()).map(v => v / 2 - margin))\n      : null;\n    const ringDistance = renderRing\n      ? Math.floor((ringSize * ringNailCount) / 2)\n      : 0; // The number of nails to count for strings in the outer ring\n    const ringWidth = renderRing\n      ? radius * (1 - Math.cos((PI2 * (ringDistance / ringNailCount)) / 2))\n      : 0;\n\n    const polygon = new Polygon({\n      sides: 6,\n      size: this.getSize(),\n      margin:\n        margin +\n        ringWidth +\n        (renderRing && ringSize ? ringPadding * radius : 0),\n      rotation: globalRotationRadians,\n      fitSize: false,\n    });\n\n    const edgeSize = polygon.sideSize / levels;\n    const nailsLength = edgeSize / (2 * Math.cos(Math.PI / 6));\n\n    const countPerLevelSide = new Array(levels + (renderCaps ? 1 : 0))\n      .fill(null)\n      .map((_, level) => level * 2 + 1);\n\n    return {\n      edgeSize,\n      triangleHeight: (edgeSize * Math.sqrt(3)) / 2,\n      nailsLength,\n      triangleCenterDistance: edgeSize / 2,\n      nailDistance: nailsLength / density,\n      triangleCount: 6 * levels ** 2,\n      countPerLevelSide,\n      globalRotationRadians,\n      fill,\n      renderTriangles,\n      renderCaps,\n      ringNailCount,\n      radius,\n    };\n  }\n\n  resetStructure() {\n    super.resetStructure();\n\n    this.points = null;\n    this.calc = null;\n  }\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      isMultiColor,\n      levels,\n      colorPerLevel,\n      colorCount,\n      renderRing,\n      ringSize,\n      ...config\n    } = this.config;\n\n    if (!this.calc) {\n      this.calc = this.getCalc();\n    }\n\n    if (renderRing && ringSize) {\n      const circleConfig = {\n        size: this.size,\n        n: this.calc.ringNailCount,\n        margin: config.margin,\n        rotation: config.globalRotation,\n      };\n\n      if (this.circle) {\n        this.circle.setConfig(circleConfig);\n      } else {\n        this.circle = new Circle(circleConfig);\n      }\n    } else {\n      this.circle = null;\n    }\n\n    if (!this.points) {\n      this.points = this.getPoints();\n    }\n\n    if (!this.stepCount) {\n      this.stepCount = this.getStepCount(this.calc);\n    }\n\n    const realColorCount = isMultiColor\n      ? colorPerLevel\n        ? levels\n        : Math.min(colorCount, levels)\n      : 1;\n\n    this.color = new Color({\n      ...config,\n      isMultiColor,\n      colorCount: realColorCount,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: realColorCount,\n        colorCount: realColorCount,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  getTrianglePoints({ center, rotation, isCapLevel, triangleIndexInSide }) {\n    let missingSide;\n    if (isCapLevel) {\n      const triangleIndex = (triangleIndexInSide + 2) % 3;\n      missingSide = this._getNextIndexInTriangle(triangleIndex);\n    }\n\n    // For each side of the triangle, the first point is the center of the triangle:\n    const trianglePoints = new Array(3)\n      .fill(null)\n      .map((_, i) => (i === missingSide ? [] : [center]));\n\n    for (let side = 0; side < 3; side++) {\n      if (isCapLevel && side === missingSide) {\n        continue;\n      }\n      const sideAngle = rotation + side * (PI2 / 3);\n      const triangleSidePoints = trianglePoints[side];\n\n      const cosSideAngle = Math.cos(sideAngle);\n      const sinSideAngle = Math.sin(sideAngle);\n\n      for (let n = 1; n <= this.config.density; n++) {\n        const nNailDistance = n * this.calc.nailDistance;\n\n        triangleSidePoints.push([\n          center[0] + nNailDistance * cosSideAngle,\n          center[1] + nNailDistance * sinSideAngle,\n        ]);\n      }\n    }\n\n    return trianglePoints;\n  }\n\n  getPoints() {\n    if (this.points) {\n      return this.points;\n    }\n\n    const { levels, renderCaps } = this.config;\n\n    const largeDistance = this.calc.nailsLength;\n    const smallDistance = this.calc.triangleHeight - largeDistance;\n    const levelsPoints = [];\n\n    const levelsCount = renderCaps ? levels + 1 : levels;\n\n    for (let level = 0; level < levelsCount; level++) {\n      const isCapLevel = renderCaps && level === levels;\n\n      const levelTrianglesPoints = [];\n      levelsPoints.push(levelTrianglesPoints);\n\n      const levelSideTriangleCount = this.calc.countPerLevelSide[level];\n\n      // Caching distances to avoid repeated calculations for each side:\n      const levelPositions = new Array(levelSideTriangleCount)\n        .fill(null)\n        .map((_, n) => {\n          const isFlipped = n % 2 === 0;\n          const trianglePosition = [\n            this.calc.triangleCenterDistance * (n - level),\n            level * this.calc.triangleHeight +\n              (isFlipped ? largeDistance : smallDistance),\n          ];\n\n          return {\n            rotation: Math.atan(trianglePosition[0] / trianglePosition[1]),\n            distanceFromCenter: Math.sqrt(\n              trianglePosition[0] ** 2 + trianglePosition[1] ** 2\n            ),\n          };\n        });\n\n      for (let side = 0; side < 6; side++) {\n        const sideRotation = SIDE_ANGLES[side];\n\n        for (let n = 0; n < levelSideTriangleCount; n++) {\n          if (isCapLevel && n % 2 === 0) {\n            // Cap triangles are only odd indexes\n            levelTrianglesPoints.push(null);\n            continue;\n          }\n\n          const { distanceFromCenter, rotation } = levelPositions[n];\n\n          const triangleCenterAngle =\n            sideRotation - rotation - this.calc.globalRotationRadians;\n\n          const rotatedTrianglePosition = [\n            this.center[0] + distanceFromCenter * Math.cos(triangleCenterAngle),\n            this.center[1] - distanceFromCenter * Math.sin(triangleCenterAngle),\n          ];\n\n          const trianglePoints = this.getTrianglePoints({\n            center: rotatedTrianglePosition,\n            rotation:\n              sideRotation +\n              (side * PI2) / 3 -\n              n * ANGLE +\n              this.calc.globalRotationRadians,\n            isCapLevel,\n            triangleIndexInSide: n,\n          });\n\n          levelTrianglesPoints.push(trianglePoints);\n        }\n      }\n    }\n\n    return levelsPoints;\n  }\n\n  *generateTriangleStrings({ points, level, indexInSide }) {\n    this.renderer.setColor(this.color.getColor(level));\n    const { density, levels } = this.config;\n    const isCapLevel = level === levels;\n\n    const initialSide = isCapLevel\n      ? this._getNextIndexInTriangle(indexInSide % 3)\n      : 0;\n    const lastSide = isCapLevel ? initialSide : 2;\n    const lastIndex = isCapLevel ? density : density - 1;\n\n    for (let side = initialSide; side <= lastSide; side++) {\n      const nextSide = this._getNextIndexInTriangle(side);\n      let prevPoint = points[side][0];\n\n      for (let n = 0; n <= lastIndex; n++) {\n        const isNextSide = n % 2 === 0;\n\n        const positions = [];\n        const nextSidePoint = isNextSide ? this.config.density - n : n;\n        const targetSide = isNextSide ? nextSide : side;\n        positions.push(points[targetSide][nextSidePoint]);\n\n        if (n < density) {\n          positions.push(\n            points[targetSide][\n              isNextSide ? nextSidePoint - 1 : nextSidePoint + 1\n            ]\n          );\n        }\n\n        this.renderer.renderLines(prevPoint, ...positions);\n        prevPoint = positions[positions.length - 1];\n\n        yield;\n      }\n    }\n  }\n\n  *generateStringsBetweenTriangles({\n    triangle1,\n    triangle2,\n    level,\n    triangleIndex,\n    triangleIndexInSide,\n    isNextLevel,\n    nextLevelTriangleIndex,\n  }) {\n    const { density, fillColor } = this.config;\n    const levelSideCount = this.calc.countPerLevelSide[level];\n    const angleShift = (triangleIndex % levelSideCount) % 3;\n\n    this.renderer.setColor(fillColor);\n\n    const isLastTriangleInSide = triangleIndexInSide === levelSideCount - 1;\n    const firstSide = angleShift;\n\n    const sideIndex = isNextLevel\n      ? [\n          this._getNextIndexInTriangle(angleShift),\n          this._getNextIndexInTriangle(angleShift, -1),\n        ]\n      : [\n          firstSide,\n          this._getNextIndexInTriangle(\n            firstSide,\n            triangleIndexInSide % 2 ? 1 : -1\n          ),\n        ];\n\n    for (let s = 0; s < 2; s++) {\n      const order = generateOrderInSide.call(this, s);\n\n      for (const { pointIndex, triangle1Points, triangle2Points } of order) {\n        this.renderer.renderLines(\n          triangle1Points[pointIndex],\n          triangle2Points[pointIndex]\n        );\n\n        yield;\n      }\n    }\n\n    function* generateOrderInSide(side) {\n      const t1Side = sideIndex[side];\n      const t2Side = getNextTriangleSide.call(this);\n\n      const triangle1Points = triangle1[t1Side];\n      const triangle2Points = triangle2[t2Side];\n\n      const last = side ? density : density - 1;\n\n      if (side === 0) {\n        for (let n = 0; n <= last; n++) {\n          yield { pointIndex: density - n, triangle1Points, triangle2Points };\n        }\n      } else {\n        for (let n = last; n >= 1; n--) {\n          yield { pointIndex: density - n, triangle1Points, triangle2Points };\n        }\n      }\n\n      function getNextTriangleSide() {\n        if (isNextLevel) {\n          return this._getNextIndexInTriangle(t1Side);\n        } else {\n          if (side === 0 && isLastTriangleInSide) {\n            return 1;\n          } else {\n            if (side === 1 && isLastTriangleInSide) {\n              return 0;\n            } else {\n              return this._getNextIndexInTriangle(t1Side, 1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _getNextIndexInTriangle(index, direction = 1) {\n    const result = index + direction;\n    if (result < 0) {\n      return 2;\n    }\n    if (result > 2) {\n      return 0;\n    }\n    return result;\n  }\n\n  *generateStrings() {\n    const {\n      fill,\n      renderTriangles,\n      renderCaps,\n      levels,\n      renderRing,\n      ringSize,\n      ringColor,\n    } = this.config;\n\n    const triangleLevels = this.getPoints();\n\n    let levelIndex = -1;\n\n    for (const level of triangleLevels) {\n      levelIndex++;\n      const isCapLevel = levelIndex === levels;\n\n      let triangleIndex = -1;\n      const lastIndexInLevel = level.length - 1;\n\n      for (const triangle of level) {\n        triangleIndex++;\n        const levelSideCount = this.calc.countPerLevelSide[levelIndex];\n        const triangleIndexInSide = triangleIndex % levelSideCount;\n\n        if (fill && !isCapLevel) {\n          if (triangleIndex === 0) {\n            yield* this.generateStringsBetweenTriangles({\n              triangle1: level[lastIndexInLevel],\n              triangle2: triangle,\n              level: levelIndex,\n              triangleIndex: lastIndexInLevel,\n              triangleIndexInSide: lastIndexInLevel % levelSideCount,\n            });\n          }\n          if (triangleIndex !== lastIndexInLevel) {\n            yield* this.generateStringsBetweenTriangles({\n              triangle1: triangle,\n              triangle2: level[triangleIndex + 1],\n              level: levelIndex,\n              triangleIndex,\n              triangleIndexInSide,\n            });\n          }\n\n          if (\n            triangleIndexInSide % 2 === 0 &&\n            (renderCaps || levelIndex < levels - 1)\n          ) {\n            const side = Math.floor(triangleIndex / levelSideCount);\n            const nextLevelSideCount =\n              this.calc.countPerLevelSide[levelIndex + 1];\n            const nextLevelTriangleIndex =\n              side * nextLevelSideCount + triangleIndexInSide + 1;\n\n            yield* this.generateStringsBetweenTriangles({\n              triangle1: triangle,\n              triangle2: triangleLevels[levelIndex + 1][nextLevelTriangleIndex],\n              level: levelIndex,\n              triangleIndex,\n              triangleIndexInSide,\n              isNextLevel: true,\n              nextLevelTriangleIndex,\n            });\n          }\n        }\n\n        const indexInSide =\n          triangleIndex % this.calc.countPerLevelSide[levelIndex];\n\n        if (renderTriangles && (!isCapLevel || indexInSide % 2)) {\n          yield* this.generateTriangleStrings({\n            points: triangle,\n            level: levelIndex,\n            indexInSide,\n          });\n        }\n      }\n    }\n\n    if (renderRing && ringSize) {\n      yield* this.circle.drawRing(this.renderer, {\n        ringSize: ringSize / 2,\n        color: ringColor,\n      });\n    }\n  }\n\n  getStepCount(calc) {\n    if (this.stepCount) {\n      return this.stepCount;\n    }\n\n    if (!calc) {\n      calc = this.getCalc();\n    }\n\n    const { levels, density, fill, renderTriangles, renderCaps } = this.config;\n    const { triangleCount, ringNailCount = 0 } = calc;\n\n    const fillStepsPerTriangle = fill ? density * 2 : 0;\n    const triangleSteps = renderTriangles ? density * 3 : 0;\n\n    const stepsPerTriangle = triangleSteps + fillStepsPerTriangle;\n\n    const levelsWithFillBetween = levels + (renderCaps ? 1 : 0);\n    const fillStepsBetweenLevels =\n      (fillStepsPerTriangle *\n        (levelsWithFillBetween - 1) *\n        6 *\n        levelsWithFillBetween) /\n      2;\n    const stepsPerCap = density + 1;\n    const capSteps =\n      renderTriangles && renderCaps ? 6 * levels * stepsPerCap : 0;\n\n    return (\n      triangleCount * stepsPerTriangle +\n      capSteps +\n      fillStepsBetweenLevels +\n      ringNailCount\n    );\n  }\n\n  drawNails() {\n    const triangleLevels = this.getPoints();\n    let index = 0;\n    for (const level of triangleLevels) {\n      for (const triangle of level) {\n        if (triangle != null) {\n          // A cap level has nulls between caps\n          for (const triangleSide of triangle) {\n            for (const point of triangleSide) {\n              this.nails.addNail({ point, number: index++ });\n            }\n          }\n        }\n      }\n    }\n\n    if (this.circle) {\n      this.circle.drawNails(this.nails);\n    }\n  }\n\n  static thumbnailConfig = {\n    levels: 3,\n    density: 3,\n    fill: false,\n    renderRing: true,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 133,\n    multicolorStart: 239,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n    colorCount: 4,\n  },\n  customControls: [\n    {\n      key: 'colorPerLayer',\n      label: 'Color per layer',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n  ],\n});\n\nconst spreadModes = {\n  evenly: {\n    f: (layerIndex, { ringSize, layers, n }) => {\n      const firstLayerDistance = Math.floor(n * ringSize);\n      return Math.floor(((layers - layerIndex) * firstLayerDistance) / layers);\n    },\n    name: 'Evenly',\n  },\n  distance: {\n    f: (layerIndex, { n, ringSize, layerDistance }) => {\n      const firstLayerDistance = Math.floor(n * ringSize);\n\n      if (layerIndex > 0) {\n        return firstLayerDistance - layerIndex * layerDistance;\n      }\n\n      return firstLayerDistance;\n    },\n    name: 'Specific distance',\n  },\n};\n\nexport default class Comet extends StringArt {\n  name = 'Comet';\n  id = 'comet';\n  controls = [\n    Circle.nailsConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 20,\n        step: 1,\n      },\n      isStructural: true,\n    },\n    {\n      key: 'ringSize',\n      label: 'First layer size',\n      description:\n        'Nail count from the top center nail to the first connected nail in the first layer',\n      defaultValue: 0.3,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n      },\n      displayValue: ({ ringSize, n }) => Math.floor(n * ringSize),\n      isStructural: true,\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer Spread',\n      type: 'select',\n      defaultValue: 'distance',\n      options: Object.entries(spreadModes).map(([key, { name }]) => ({\n        value: key,\n        label: name,\n      })),\n      isStructural: true,\n    },\n    {\n      key: 'layerDistance',\n      label: 'Layer Distance',\n      type: 'range',\n      attr: {\n        min: 1,\n        max: ({ config: { n, layers } }) => Math.floor(n / 2 / layers),\n        step: 1,\n      },\n      defaultValue: 1,\n      isStructural: true,\n      show: ({ layerSpread }) => layerSpread !== 'evenly',\n    },\n    Circle.rotationConfig,\n    Circle.distortionConfig,\n    Circle.displacementConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    n: 51,\n    layers: 11,\n    colorPerLayer: true,\n    multicolorRange: 203,\n    multicolorStart: 137,\n    ringSize: 0.47,\n    rotation: 90 / 360,\n    distortion: 0.38,\n    displacementFunc: 'fastInOut',\n    displacementMag: 1.8,\n    displacementFastArea: 0.43,\n    layerSpread: 'distance',\n    layerDistance: 1,\n  };\n\n  resetStructure() {\n    if (this.points) {\n      this.points.clear();\n    }\n\n    if (this.layerRingDistances) {\n      this.layerRingDistances.clear();\n    }\n  }\n\n  setUpDraw() {\n    super.setUpDraw();\n    const circleConfig = {\n      size: this.size,\n      n: this.config.n,\n      margin: this.config.margin,\n      rotation: this.config.rotation,\n      distortion: this.config.distortion,\n      displacementFunc: this.config.displacementFunc,\n      displacementMag: this.config.displacementMag,\n      displacementFastArea: this.config.displacementFastArea,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    if (!this.stepCount) {\n      this.stepCount = this.getStepCount();\n    }\n\n    const { isMultiColor, colorCount, layers, colorPerLayer } = this.config;\n    const realColorCount = isMultiColor\n      ? colorPerLayer\n        ? layers\n        : Math.min(colorCount, layers)\n      : 1;\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: realColorCount,\n    });\n  }\n\n  getCalc() {\n    const { n } = this.config;\n    const size = this.getSize();\n\n    return {\n      n,\n      angleRadians: (PI2 * angle) / maxSteps,\n      radius: Math.min(...size) / 2,\n      currentSize: size,\n      rotationAngle: -Math.PI * 2 * rotation,\n    };\n  }\n\n  getLayerRingDistance(layerIndex) {\n    const spread = spreadModes[this.config.layerSpread];\n    if (!spread) {\n      throw new Error(`Invalid spread mode, \"${this.config.layerSpread}\"!`);\n    }\n\n    return spread.f(layerIndex, this.config);\n  }\n\n  getLayerRingStepCount(layerIndex) {\n    const layerRingDistance = this.getLayerRingDistance(layerIndex);\n    return (this.config.n - layerRingDistance + 1) * 2 - 1;\n  }\n\n  *drawLayer(layerIndex = 0) {\n    const { n } = this.config;\n    const ringDistance = this.getLayerRingDistance(layerIndex);\n    const stepCount = n - ringDistance + 1;\n\n    let prevPoint = this.circle.getPoint(0);\n    let prevPointIndex = 0;\n    this.renderer.setColor(this.color.getColor(layerIndex));\n\n    for (let i = 0; i < n - ringDistance + 1; i++) {\n      const pointIndex = i + ringDistance;\n      const point = this.circle.getPoint(pointIndex);\n\n      this.renderer.renderLines(prevPoint, point);\n      yield;\n\n      if (i !== stepCount - 1) {\n        prevPointIndex = i + 1;\n        prevPoint = this.circle.getPoint(prevPointIndex);\n\n        this.renderer.renderLines(point, prevPoint);\n\n        yield;\n      }\n    }\n  }\n\n  *generateStrings() {\n    for (let layer = 0; layer < this.config.layers; layer++) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    if (this.stepCount) {\n      return this.stepCount;\n    }\n\n    const { layers } = this.config;\n    return new Array(layers)\n      .fill(0)\n      .reduce(\n        (totalStepCount, _, layerIndex) =>\n          totalStepCount + this.getLayerRingStepCount(layerIndex),\n        0\n      );\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 24,\n    layers: 8,\n  };\n}\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport Mandala from './string_art_types/Mandala.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Freestyle from './string_art_types/Freestyle.js';\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\nimport Flower from './string_art_types/Flower.js';\nimport MaurerRose from './string_art_types/MaurerRose.js';\nimport FlowerOfLife from './string_art_types/FlowerOfLife.js';\nimport Comet from './string_art_types/Comet.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  Mandala,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Freestyle,\n  PolygonPattern,\n  Flower,\n  MaurerRose,\n  FlowerOfLife,\n  Comet,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    {\n      key: 'ringSize',\n      label: 'Outer ring size',\n      defaultValue: 0.1,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 0.5,\n        step: ({ config: { sideNails, sides } }) => 1 / (sideNails * sides),\n      },\n      displayValue: ({ sideNails, sides, ringSize }) =>\n        Math.floor(ringSize * sideNails * sides),\n    },\n    Circle.rotationConfig,\n    Circle.distortionConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n        {\n          key: 'ringColor',\n          label: 'Ring color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, distortion, sideNails, margin = 0 } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n      distortion,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  getArcPoint({ side, sideIndex }) {\n    return this.circle.getPoint(side * this.config.sideNails + sideIndex);\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails, sides } = this.config;\n\n    this.renderer.setColor(innerColor);\n    let alternate = false;\n    const linesPerRound = sides % 2 ? sides * 2 : sides;\n    const rounds = sides % 2 ? Math.floor(sideNails / 2) : sideNails;\n\n    let prevPointIndex = 0;\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: prevPointIndex });\n\n    for (let round = 0; round <= rounds; round++) {\n      let side = 0;\n\n      const linesPerThisRound = linesPerRound - (round === rounds ? sides : 0);\n\n      for (let i = 0; i < linesPerThisRound; i++) {\n        side = side !== sides - 1 ? side + 1 : 0;\n        alternate = !alternate;\n        prevPointIndex = alternate ? sideNails - round : round;\n        const nextPoint = this.getStarPoint({\n          side,\n          sideIndex: prevPointIndex,\n        });\n        this.renderer.renderLines(prevPoint, nextPoint);\n        prevPoint = nextPoint;\n        yield;\n      }\n\n      prevPointIndex = alternate ? prevPointIndex - 1 : prevPointIndex + 1;\n      const nextPoint = this.getStarPoint({\n        side: 0,\n        sideIndex: prevPointIndex,\n      });\n      this.renderer.renderLines(prevPoint, nextPoint);\n      prevPoint = nextPoint;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor, sides, sideNails } = this.config;\n    this.renderer.setColor(outterColor);\n\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: 0 });\n    let alternate = false;\n    let isStar = false;\n\n    const rounds = sides % 2 ? Math.ceil(sideNails / 2) : sideNails;\n    let side = 0;\n    const linesPerRound = sides % 2 ? sides * 4 : sides * 2;\n\n    for (let round = 0; round <= rounds; round++) {\n      const linesPerThisRound =\n        linesPerRound - (round === rounds ? sides * 2 : 0);\n\n      for (let i = 0; i < linesPerThisRound; i++) {\n        const pointPosition = {\n          side,\n          sideIndex: alternate ? sideNails - round : round,\n        };\n\n        const nextPoint = isStar\n          ? this.getStarPoint(pointPosition)\n          : this.getArcPoint(pointPosition);\n\n        this.renderer.renderLines(prevPoint, nextPoint);\n        prevPoint = nextPoint;\n\n        yield;\n        isStar = !isStar;\n\n        if (isStar) {\n          side = side !== sides - 1 ? side + 1 : 0;\n          alternate = !alternate;\n        }\n      }\n      prevPoint = this.getStarPoint({ side: 0, sideIndex: round + 1 });\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n\n    const { ringSize, ringColor } = this.config;\n\n    if (ringSize !== 0) {\n      yield* this.circle.drawRing(this.renderer, {\n        ringSize,\n        color: ringColor,\n      });\n    }\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails, ringSize } = this.config;\n    const ringCount = ringSize ? sideNails * sides : 0;\n    const starAndCircleCount = 3 * sides * (sideNails + (sides % 2 ? 1 : 0));\n\n    return starAndCircleCount + ringCount;\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport Circle from '../helpers/Circle.js';\nimport Mandala from './Mandala.js';\n\nexport default class Wave extends Mandala {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'layerFill',\n      label: 'Layer fill',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerFill }) => Math.floor(100 * layerFill) + '%',\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    Circle.distortionConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 15 / 200,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    {\n      key: 'reverse',\n      label: 'Reverse',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n    this.base = 2;\n  }\n\n  *generateStrings() {\n    const { layers, reverse } = this.config;\n\n    for (let layer = 0; layer < layers; layer++) {\n      yield* this.drawTimesTable({\n        color: this.color.getColor(layer),\n        shift: this.layerShift * (reverse ? 1 : -1) * layer,\n        time: layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Freestyle extends StringArt {\n  name = 'Freestyle';\n  id = 'freestyle';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.renderer.setColor(color);\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        const startPoint = prevCirclePoint ?? this.getPoint(layer, i);\n\n        const positions = [];\n        if (layerIndex === 0 && i) {\n          positions.push(this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n\n        this.renderer.renderLines(startPoint, prevCirclePoint);\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    this._wrappedOnMouseDown = e => this._onMouseDown(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.controls.addEventListener('mousedown', this._wrappedOnMouseDown);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.removeEventListener(\n      'touchstart',\n      this._wrappedOnTouchStart\n    );\n    elements.controls.removeEventListener(\n      'mousedown',\n      this._wrappedOnMouseDown\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  _onMouseDown(e) {\n    // Clearing selection when starting to click in the controls, do avoid a buggy behavior,\n    // when if a control's display value was selected (can happen by mistake), the drag of range input doesn't work.\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd() {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      if (this.currentInputRange) {\n        this.currentInputRange.value = this.currentInputRangeValue;\n      }\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll() {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.setConfigValue(controlKey, inputValue);\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n      this.updateControlsAttributes();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsAttributes(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.attr) {\n        const functionAttrs = Object.entries(control.attr).filter(\n          ([_, value]) => value instanceof Function\n        );\n        if (functionAttrs.length) {\n          const inputEl = this.controlElements[control.key].input;\n          if (inputEl) {\n            functionAttrs.forEach(([name, value]) => {\n              const newAttrValue = value(this.pattern);\n              if (newAttrValue != inputEl.getAttribute(name)) {\n                if (\n                  (name === 'min' && inputEl.value < newAttrValue) ||\n                  (name === 'max' && inputEl.value > newAttrValue)\n                ) {\n                  inputEl.value = newAttrValue;\n                  this.updateInput({ inputElement: inputEl });\n                }\n                inputEl.setAttribute(name, newAttrValue);\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config, control);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input = document.createElement(\n          control.type === 'select' ? 'select' : 'input'\n        ));\n\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.type === 'select') {\n          const selectOptions = document.createDocumentFragment();\n          control.options.forEach(_option => {\n            const { value, label } =\n              typeof _option === 'string'\n                ? { value: _option, label: _option }\n                : _option;\n            const optionEl = document.createElement('option');\n            optionEl.setAttribute('value', value);\n            optionEl.innerText = label;\n            selectOptions.appendChild(optionEl);\n          });\n          inputEl.appendChild(selectOptions);\n          inputEl.value = inputValue;\n          controlEl.appendChild(inputEl);\n        } else {\n          inputEl.setAttribute('type', control.type);\n\n          if (control.type === 'checkbox') {\n            inputEl.checked = inputValue;\n            controlEl.appendChild(inputEl);\n            controlEl.appendChild(label);\n          } else {\n            controlEl.appendChild(label);\n            controlEl.appendChild(inputEl);\n            setTimeout(() => {\n              inputEl.value = inputValue;\n            });\n            const inputValueEl = (controlElements.displayValue =\n              document.createElement('span'));\n            inputValueEl.id = `config_${control.key}_value`;\n            inputValueEl.innerText = control.displayValue\n              ? control.displayValue(this.pattern.config, control)\n              : inputValue;\n            inputValueEl.className = 'control_input_value';\n            controlEl.appendChild(inputValueEl);\n          }\n        }\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","import Renderer from './Renderer.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nexport default class CanvasRenderer extends Renderer {\n  constructor(parentElement) {\n    super(parentElement);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n    this.ctx.globalCompositeOperation = 'source-over';\n\n    parentElement.appendChild(this.canvas);\n  }\n\n  get element() {\n    return this.canvas;\n  }\n\n  reset() {\n    this.ctx.clearRect(0, 0, ...this.getSize());\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n\n    const [width, height] = this.getSize();\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n  }\n\n  setColor(color) {\n    this.ctx.strokeStyle = color;\n  }\n\n  setLineWidth(width) {\n    this.ctx.lineWidth = width;\n  }\n\n  setBackground(color) {\n    this.ctx.globalCompositeOperation = 'destination-over';\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(0, 0, ...this.getSize());\n    this.ctx.globalCompositeOperation = 'source-over';\n  }\n\n  getSize() {\n    return [\n      this.canvas.clientWidth * this.pixelRatio,\n      this.canvas.clientHeight * this.pixelRatio,\n    ];\n  }\n\n  renderLines(startPosition, ...positions) {\n    this.ctx.beginPath();\n    this.ctx.moveTo(...startPosition);\n\n    for (const position of positions) {\n      this.ctx.lineTo(...position);\n    }\n\n    this.ctx.stroke();\n  }\n\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin = 0 }) {\n    const centerX = this.canvas.width / 2;\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.beginPath();\n    this.ctx.fillStyle = color;\n    this.ctx.textBaseline = 'middle';\n    this.ctx.font = `${fontSize}px sans-serif`;\n    const nailNumberOffset = radius + margin;\n\n    nails.forEach(({ point: [x, y], number }) => {\n      this.ctx.moveTo(x + radius, y);\n      this.ctx.arc(x, y, radius, 0, PI2);\n      if (renderNumbers && number != null) {\n        const isRightAlign = x < centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.ctx.textAlign = isRightAlign ? 'right' : 'left';\n        this.ctx.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.ctx.fill();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  toDataURL() {\n    return this.canvas.toDataURL();\n  }\n}\n","const MAX_FLOAT_DECIMALS = 6;\n\nexport function serializeConfig(pattern) {\n  const { defaultConfig, config } = pattern;\n\n  const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\n    if (value === defaultConfig[key]) {\n      return null;\n    }\n\n    if (typeof value === 'boolean') {\n      return `!${value ? 1 : 0}`;\n    }\n\n    if (typeof value === 'number') {\n      return parseFloat(value.toFixed(MAX_FLOAT_DECIMALS));\n    }\n\n    return value;\n  });\n\n  while (nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\n    nonDefaultConfigValues.pop();\n  }\n\n  if (!nonDefaultConfigValues.length) {\n    return '';\n  }\n\n  const serializedConfigValues = nonDefaultConfigValues\n    .join('_')\n    .replace(/\\_{2,}/g, match => '~' + match.length + '_');\n  return serializedConfigValues;\n}\n\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\nconst booleanRegExp = /^(?:!)([01])$/;\n\nexport function deserializeConfig(pattern, serializedCofig) {\n  const serializedConfigValues = serializedCofig\n    .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) =>\n      new Array(+commaCount).fill('_').join('')\n    )\n    .split('_')\n    .map(v => {\n      if (v === '') {\n        return null;\n      }\n\n      if (numberRegExp.test(v)) {\n        return parseFloat(v);\n      }\n\n      const booleanMatch = v.match(booleanRegExp);\n      if (booleanMatch) {\n        return booleanMatch[1] === '1';\n      }\n\n      return v;\n    });\n\n  const configKeys = Object.keys(pattern.defaultConfig);\n\n  return serializedConfigValues.reduce((config, serializedValue, i) => {\n    if (serializedValue !== null) {\n      const key = configKeys[i];\n      return { ...config, [key]: serializedValue };\n    }\n\n    return config;\n  }, {});\n}\n","export async function share(input) {\n  try {\n    navigator.share(await getShareData(input));\n  } catch (error) {\n    alert('Error: ' + error.message);\n  }\n}\n\nexport async function isShareSupported(input) {\n  if (!navigator.share) {\n    return false;\n  }\n\n  const shareData = await getShareData(input);\n  return navigator.canShare(shareData);\n}\n\nasync function getShareData({ renderer, pattern }) {\n  const dataUrl = renderer.toDataURL();\n  const blob = await (await fetch(dataUrl)).blob();\n  const files = [\n    new File([blob], pattern.name + '.jpg', {\n      type: blob.type,\n      lastModified: new Date().getTime(),\n    }),\n  ];\n  return {\n    url: window.location.href,\n    files,\n    title: document.title,\n    text: 'String Art Studio - ' + pattern.name,\n  };\n}\n","import Renderer from './Renderer.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nexport default class SVGRenderer extends Renderer {\n  constructor(parentElement) {\n    super(parentElement);\n\n    this.svg = document.createElementNS(SVG_NS, 'svg');\n    this.svg.style.setProperty('display', 'block');\n    this.backgroundGroup = document.createElementNS(SVG_NS, 'g');\n    this.backgroundGroup.setAttribute('data-id', 'background');\n    this.linesGroup = document.createElementNS(SVG_NS, 'g');\n    this.linesGroup.setAttribute('data-id', 'lines');\n    this.nailsGroup = document.createElementNS(SVG_NS, 'g');\n    this.nailsGroup.setAttribute('data-id', 'nails');\n\n    this.nailsCirclesGroup = document.createElementNS(SVG_NS, 'g');\n    this.nailsCirclesGroup.setAttribute('data-id', 'nailsCircles');\n\n    this.nailsTextGroup = document.createElementNS(SVG_NS, 'g');\n    this.nailsTextGroup.setAttribute('data-id', 'nailsText');\n\n    this.nailsGroup.appendChild(this.nailsCirclesGroup);\n    this.nailsGroup.appendChild(this.nailsTextGroup);\n\n    this.svg.appendChild(this.backgroundGroup);\n    this.svg.appendChild(this.linesGroup);\n    this.svg.appendChild(this.nailsGroup);\n\n    this.svg.setAttribute('xmlns', SVG_NS);\n\n    parentElement.appendChild(this.svg);\n  }\n\n  get element() {\n    return this.svg;\n  }\n\n  reset() {\n    this.linesGroup.innerHTML = '';\n    this.nailsCirclesGroup.innerHTML = '';\n    this.nailsTextGroup.innerHTML = '';\n\n    const [width, height] = this.getSize().map(Math.trunc);\n    this.svg.setAttributeNS(SVG_NS, 'viewBox', `0 0 ${width} ${height}`);\n    this.svg.setAttributeNS(SVG_NS, 'width', width);\n    this.svg.setAttributeNS(SVG_NS, 'height', height);\n    this.svg.style.width = width + 'px';\n    this.svg.style.height = height + 'px';\n    this.currentColor = null;\n    this.lineWidth = null;\n  }\n\n  setColor(color) {\n    if (color !== this.currentColor) {\n      this.currentLineGroup = document.createElementNS(SVG_NS, 'g');\n      this.currentLineGroup.setAttribute('stroke', color);\n      this.currentLineGroup.setAttribute('stroke-width', this.lineWidth);\n      this.linesGroup.appendChild(this.currentLineGroup);\n      this.currentColor = color;\n    }\n  }\n\n  setLineWidth(width) {\n    this.lineWidth = width ?? '1';\n    this.linesGroup.setAttributeNS(SVG_NS, 'stroke-width', width ?? '1');\n    this.linesGroup.childNodes.forEach(group =>\n      group.setAttributeNS(SVG_NS, 'stroke-width', width ?? '1')\n    );\n  }\n\n  setBackground(color) {\n    if (color) {\n      if (!this.background) {\n        this.background = document.createElementNS(SVG_NS, 'rect');\n        this.background.setAttribute('width', '100%');\n        this.background.setAttribute('height', '100%');\n        this.backgroundGroup.appendChild(this.background);\n      }\n\n      this.background.setAttribute('fill', color);\n    } else {\n      this.background = null;\n      this.backgroundGroup.innerHTML = '';\n    }\n  }\n\n  setSize(size) {\n    super.setSize(size);\n    const [width, height] = size.map(Math.trunc);\n\n    this.svg.setAttributeNS(SVG_NS, 'viewBox', `0 0 ${width} ${height}`);\n    this.svg.setAttributeNS(SVG_NS, 'width', width);\n    this.svg.setAttributeNS(SVG_NS, 'height', height);\n  }\n  renderLines(startPosition, ...positions) {\n    let previousPoint = startPosition;\n    const fragment = document.createDocumentFragment();\n\n    for (const position of positions) {\n      const line = document.createElementNS(SVG_NS, 'line');\n      line.setAttribute('x1', Math.trunc(previousPoint[0]));\n      line.setAttribute('y1', Math.trunc(previousPoint[1]));\n      line.setAttribute('x2', Math.trunc(position[0]));\n      line.setAttribute('y2', Math.trunc(position[1]));\n      previousPoint = position;\n\n      fragment.appendChild(line);\n    }\n\n    this.currentLineGroup.appendChild(fragment);\n  }\n\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin = 0 }) {\n    const centerX = this.getSize()[0] / 2;\n    this.nailsCirclesGroup.innerHTML = this.nailsTextGroup.innerHTML = '';\n    const circlesFragment = document.createDocumentFragment();\n    const textFragment = document.createDocumentFragment();\n    this.nailsGroup.setAttribute('fill', color);\n    const nailNumberOffset = radius + margin;\n\n    this.nailsTextGroup.style.fontSize = fontSize;\n    nails.forEach(({ point: [x, y], number }) => {\n      const circle = document.createElementNS(SVG_NS, 'circle');\n      circle.setAttribute('cx', x);\n      circle.setAttribute('cy', y);\n      circle.setAttribute('r', radius);\n      circlesFragment.appendChild(circle);\n\n      if (renderNumbers && number != null) {\n        const isRightAlign = x < centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        const textEl = document.createElementNS(SVG_NS, 'text');\n        textEl.innerHTML = String(number);\n        textEl.setAttribute('x', numberPosition[0]);\n        textEl.setAttribute('y', numberPosition[1]);\n        if (isRightAlign) {\n          textEl.setAttribute('text-anchor', 'end');\n        }\n        textFragment.appendChild(textEl);\n      }\n    });\n\n    this.nailsCirclesGroup.appendChild(circlesFragment);\n    this.nailsTextGroup.appendChild(textFragment);\n  }\n\n  clear() {\n    this.linesGroup.innerHTML = '';\n    this.nailsGroup.innerHTML = '';\n  }\n\n  toDataURL() {\n    return '';\n  }\n}\n","export function downloadFile(dataUrl, fileName) {\n  const downloadLink = document.createElement('a');\n  downloadLink.href = dataUrl;\n  downloadLink.download = fileName;\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\nimport { deserializeConfig, serializeConfig } from './Serialize.js';\nimport { isShareSupported, share } from './share.js';\nimport { initServiceWorker } from './pwa.js';\nimport CanvasRenderer from './renderers/CanvasRenderer.js';\nimport SVGRenderer from './renderers/SVGRenderer.js';\nimport { downloadPatternAsSVG } from './download/SVGDownload.js';\nimport { downloadFile } from './download/Download.js';\n\nwindow.addEventListener('error', function (event) {\n  alert('Error: ' + event.message);\n});\n\nconst elements = {\n  canvas: document.querySelector('#canvas_panel'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadSVGBtn: document.querySelector('#download_svg_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  shareBtn: document.querySelector('#share_btn'),\n  playerBtn: document.querySelector('#player_btn'),\n  buttons: document.querySelector('#buttons'),\n  instructionsLink: document.querySelector(\n    '#pattern_select_dropdown_instructions'\n  ),\n};\n\nlet canvasRenderer;\nlet patterns;\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\n\nwindow.addEventListener('load', main);\n\nasync function main() {\n  initRouting();\n\n  await initServiceWorker();\n\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  unHide(document.querySelector('main'));\n\n  const queryParams = new URLSearchParams(document.location.search);\n  canvasRenderer =\n    queryParams.get('renderer') === 'svg'\n      ? new SVGRenderer(elements.canvas)\n      : new CanvasRenderer(elements.canvas);\n\n  patterns = patternTypes.map(Pattern => new Pattern(canvasRenderer));\n\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      thumbnails.toggle();\n    }\n  }\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadSVGBtn.addEventListener('click', downloadSVG);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  elements.shareBtn.addEventListener(\n    'click',\n    async () =>\n      await share({\n        renderer: canvasRenderer,\n        pattern: currentPattern,\n      })\n  );\n  elements.playerBtn.addEventListener('click', () => {\n    document.querySelectorAll('#buttons [data-toggle-for]').forEach(btn => {\n      if (btn.classList.contains('active')) {\n        btn.click();\n      }\n    });\n  });\n\n  elements.instructionsLink.addEventListener('click', e => {\n    e.preventDefault();\n    history.pushState({ pattern: null }, 'String Art Studio', './');\n    unselectPattern();\n  });\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern &&\n        currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nasync function initPattern() {\n  if (!currentPattern) {\n    throw new Error(\"Can't init pattern - no current pattern available!\");\n  }\n\n  initSize();\n\n  window.addEventListener(\n    'resize',\n    () => currentPattern && currentPattern.draw()\n  );\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  const showShare = await isShareSupported({\n    renderer: canvasRenderer,\n    pattern: currentPattern,\n  });\n  if (showShare) {\n    unHide(elements.shareBtn);\n  }\n}\n\nfunction downloadCanvas() {\n  downloadFile(canvasRenderer.toDataURL(), currentPattern.name + '.png');\n}\n\nfunction downloadSVG() {\n  downloadPatternAsSVG(currentPattern, canvasRenderer.getSize());\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig && configQuery\n        ? `&config=${encodeURIComponent(configQuery)}`\n        : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize(size) {\n  if (size.width && size.height) {\n    canvasRenderer.setSize(size);\n    if (!elements.canvas.classList.contains('overflow')) {\n      elements.canvas.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.classList.remove('overflow');\n    canvasRenderer.setSize(null);\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  if (state?.pattern) {\n    const pattern = findPatternById(state.pattern);\n    selectPattern(pattern, {\n      draw: false,\n      config: state.config ? deserializeConfig(pattern, state.config) : {},\n    });\n\n    thumbnails.close();\n    currentPattern.draw();\n  } else {\n    unselectPattern();\n    thumbnails.open();\n  }\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId}\" not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  const isFirstTime = !currentPattern;\n\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.setConfig(config);\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  if (pattern.link) {\n    elements.patternLink.setAttribute('href', pattern.link);\n    elements.patternLink.innerText = pattern.linkText ?? 'Example';\n    unHide(elements.patternLink);\n  } else {\n    hide(elements.patternLink);\n  }\n\n  if (draw) {\n    requestAnimationFrame(() => {\n      currentPattern.draw();\n    });\n  }\n\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n  document.body.setAttribute('data-pattern', pattern.id);\n\n  if (isFirstTime) {\n    initPattern();\n    document.body.querySelectorAll('.pattern_only').forEach(unHide);\n  }\n}\n\nfunction unHide(element) {\n  element.removeAttribute('hidden');\n}\n\nfunction hide(element) {\n  element.setAttribute('hidden', 'hidden');\n}\n\nfunction unselectPattern() {\n  currentPattern = null;\n  canvasRenderer.clear();\n  hide(elements.patternLink);\n  thumbnails.setCurrentPattern(null);\n  controls && controls.destroy();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  document.body.removeAttribute('data-pattern');\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\nimport CanvasRenderer from '../renderers/CanvasRenderer.js';\n\nconst THUMBNAIL_WIDTH_PX = '100px';\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.open();\n    } else if (this.pattern) {\n      this.close();\n    }\n  }\n\n  open() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    }\n  }\n\n  close() {\n    if (!this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern?.name ?? 'Choose a pattern';\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const patternLink = document.createElement('a');\n      const renderer = new CanvasRenderer(patternLink);\n\n      patternLink.style.width = patternLink.style.height = THUMBNAIL_WIDTH_PX;\n\n      const pattern = new PatternType(renderer);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n","import SVGRenderer from '../renderers/SVGRenderer.js';\nimport { downloadFile } from './Download.js';\n\nexport function downloadPatternAsSVG(pattern, size) {\n  const parentEl = document.createElement('article');\n  parentEl.style.width = size[0] + 'px';\n  parentEl.style.height = size[1] + 'px';\n  document.body.appendChild(parentEl);\n  const svgRenderer = new SVGRenderer(parentEl);\n\n  const PatternConstructor = pattern.constructor;\n  const svgPattern = new PatternConstructor(svgRenderer);\n\n  svgPattern.setConfig(pattern.config);\n  svgPattern.draw();\n\n  var svgData = svgPattern.renderer.svg.outerHTML;\n  var svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\n  var svgUrl = URL.createObjectURL(svgBlob);\n\n  downloadFile(svgUrl, pattern.name + '.svg');\n  document.body.removeChild(parentEl);\n}\n","const swFilename = 'service-worker.js';\n\nexport async function initServiceWorker() {\n  if (!navigator.serviceWorker || document.location.hostname === '127.0.0.1') {\n    return;\n  }\n\n  try {\n    const registration = await navigator.serviceWorker.register(swFilename);\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log(\n              'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n            );\n          } else {\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","attr","min","max","step","show","isMultiColor","children","multicolorByLightness","repeatColors","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","mirrorColors","multiColorStep","multiColorLightnessStep","Math","colors","Array","fill","map","_","colorIndex","lightness","_firstColor","restColors","pop","reverse","getColor","color","length","getColorMap","stepCount","Error","stepsPerColor","floor","colorMap","Map","i","set","include","exclude","defaults","customControls","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","renderer","setConfig","nails","addedPoints","Set","nailRadius","nailsColor","nailNumbersFontSize","clear","addNail","nail","nailPoint","point","round","join","has","push","add","drawNumbers","renderNails","fontSize","radius","renderNumbers","margin","parentElement","destroy","removeElement","element","reset","setColor","setLineWidth","width","setBackground","renderLines","startPosition","positions","getSize","height","getBoundingClientRect","setSize","size","removeAttribute","style","toDataURL","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","showNailNumbers","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$var$getControlsIndex","controlsIndex","$65e05ee91a8797e3$export$2e2bcd8739ae039","$2784b5c9c7b1f845$export$2e2bcd8739ae039","concat","_controlsIndex","defaultConfig","_defaultConfig","assign","defaultValues","_config","value","currentConfig","onConfigChange","changedControlKeys","keys","resetStructure","some","isStructural","affectsStepCount","onResize","setConfigValue","controlKey","setUpDraw","previousSize","center","$a8180031c78213da$export$2e2bcd8739ae039","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$40ef712a02acde42$var$easing","linear","x","inOutCirc","sqrt","pow","easeOutQuint","fastSlowFast","t","cos","PI","fastInOutSquare","fastInOutCubic","fastInOutQuint","fastInOut","fastInOutFixed","fastArea","y1","requirePower","requireFastArea","$40ef712a02acde42$export$2e2bcd8739ae039","$97e1d102fa450510$export$f81847884871263e","int1","int2","$97e1d102fa450510$export$f4644083ce95e7e3","getPoint","index","realIndex","getNailIndex","points","get","angle","easingFunction","n","rotationAngle","sin","xyRadius","isReverse","serializedConfig","_serializeConfig","rotation","configCenter","v","clampedRadius","distortion","size1","size2","ratio","$97e1d102fa450510$export$18c295d7a6a8189d","abs","props","indexAngle","displacementFunc","easingParams","displacementMag","displacementFastArea","easingFunctionWithParams","bind","nailsNumberStart","getNumber","number","ringSize","ringDistance","prevPoint","prevPointIndex","isPrevSide","startPoint","options","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","$17fe1039ca333e84$export$2e2bcd8739ae039","id","link","$ff21866e88ed26dc$export$2e2bcd8739ae039","rotationConfig","super","nSpirals","radiusIncrease","angleStep","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","generatePoints","lastPoint","stepColor","linkText","distortionConfig","_n","layers","extraNails","layerFill","base","circleConfig","stringsPerLayer","circle","layerShift","shift","time","toIndex","instructions","drawTimesTable","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","y","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","nextSideRotation","sideProps","_getLayerColors","layerSize","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$da53f1772640b858$var$LAYER_DEFAULTS","end","sides","sideCount","sideAngle","radiusAngle","_getProps","fitSize","getSizeAndCenter","configSize","boundingRect","getBoundingRect","scale","overrideConfig","nailsSpacing","sideSize","start","nailsDistance","radiusNailsCount","nailsPerSide","getSidePoint","pointsMapIndex","startX","getCenterPoint","radiusNailsDistance","firstPoint","boundingRect1","slice","drawCenter","drawSides","sideIndexStart","index1","$d89aefe1e0b94ba8$var$COLOR_CONFIG","$a3a02ffca86b5e03$var$COLOR_CONFIG","$4231afd05203ede9$var$COLOR_CONFIG","$f7e3e90b370cc9b7$var$COLOR_CONFIG","$f7e3e90b370cc9b7$var$ANGLE","$f7e3e90b370cc9b7$var$SIDE_ANGLES","$d697725d8fbe4ee5$var$COLOR_CONFIG","$d697725d8fbe4ee5$var$spreadModes","evenly","f","firstLayerDistance","distance","layerDistance","$8b13425f1e264518$export$2e2bcd8739ae039","sideNails","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerX","centerY","getArcPoint","reverseOrder","prevSide","innerColor","alternate","linesPerRound","rounds","linesPerThisRound","nextPoint","outterColor","isStar","ceil","pointPosition","drawCircle","ringColor","drawRing","drawStar","generateStarPoints","nailsConfig","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","self","advance","getPointIndex","$4252a999d90491dd$export$2e2bcd8739ae039","innerLength","repetition","layersCount","realRepetition","currentInnerLength","repetitionCount","isPrevPoint","drawSpiral","layerSpread","show1","show2","show3","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","prevCirclePoint","nextLayerIndex","forEach","polygonConfig","polygon","$6489b1167eb82c4c$export$2e2bcd8739ae039","bezier","limitedBezier","layerAngleShift","polygons","leftSide","centerIndexes","getCenterIndexes","extraNailCount","calc","getCalc","maxSteps","angleRadians","currentSize","k","r","steps","renderRing","ringPadding","renderTriangles","levels","density","globalRotation","renderCaps","ringNailCount","globalRotationRadians","ringWidth","edgeSize","nailsLength","countPerLevelSide","level","triangleHeight","triangleCenterDistance","nailDistance","triangleCount","colorPerLevel","getPoints","realColorCount","getTrianglePoints","isCapLevel","triangleIndexInSide","missingSide","triangleIndex","_getNextIndexInTriangle","trianglePoints","triangleSidePoints","nNailDistance","largeDistance","smallDistance","levelsPoints","levelsCount","levelTrianglesPoints","levelSideTriangleCount","levelPositions","isFlipped","trianglePosition","atan","distanceFromCenter","sideRotation","triangleCenterAngle","rotatedTrianglePosition","indexInSide","initialSide","lastSide","lastIndex","isNextSide","nextSidePoint","targetSide","triangle1","triangle2","isNextLevel","nextLevelTriangleIndex","fillColor","levelSideCount","angleShift","isLastTriangleInSide","firstSide","order","generateOrderInSide","pointIndex","triangle1Points","triangle2Points","t1Side","t2Side","last","n1","direction","triangleLevels","levelIndex","lastIndexInLevel","triangle","generateStringsBetweenTriangles","generateTriangleStrings","fillStepsPerTriangle","levelsWithFillBetween","triangleSide","description","entries","displacementConfig","layerRingDistances","getLayerRingDistance","spread","getLayerRingStepCount","layerRingDistance","totalStepCount","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","_wrappedOnMouseDown","_onMouseDown","controlElements","renderControls","removeEventListener","innerHTML","event","eventHandler","Function","_triggerEvent","eventData","selection","window","getSelection","removeAllRanges","e1","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","updateControlsAttributes","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","functionAttrs","inputEl","newAttrValue","setAttribute","shouldShowControl","controlEl","shouldDisableControl","updateInputs","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","label1","selectOptions","_option","optionEl","inputValueEl","realValue","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","canvas","ctx","getContext","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","globalCompositeOperation","clearRect","strokeStyle","lineWidth","fillStyle","fillRect","clientWidth","clientHeight","beginPath","moveTo","lineTo","stroke","textBaseline","font","nailNumberOffset","arc","isRightAlign","numberPosition","textAlign","fillText","String","$2085f05924b9087c$var$numberRegExp","$2085f05924b9087c$var$booleanRegExp","$2085f05924b9087c$export$39ef19ebad6081a3","serializedCofig","serializedConfigValues","commaCount","split","test","booleanMatch","match","configKeys","serializedValue","$72facf7821ef2ed6$var$getShareData","dataUrl","blob","fetch","files","File","lastModified","Date","getTime","url","location","href","title","text","svg","createElementNS","setProperty","backgroundGroup","linesGroup","nailsGroup","nailsCirclesGroup","nailsTextGroup","trunc","setAttributeNS","currentColor","currentLineGroup","childNodes","background","previousPoint","fragment","line","circlesFragment","textFragment","textEl","$0d3af79709377726$export$bb3b75778e3e272","fileName","downloadLink","download","click","removeChild","alert","message","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadSVGBtn","downloadNailsBtn","resetBtn","shareBtn","playerBtn","buttons","instructionsLink","$52852adbc3c0b381$var$canvasRenderer","$52852adbc3c0b381$var$patterns","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","open","close","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","$ec63feea13ad1aa1$export$2e2bcd8739ae039","thumbnailConfig","li","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$initPattern","$52852adbc3c0b381$var$downloadCanvas","$52852adbc3c0b381$var$downloadNailsImage","$52852adbc3c0b381$var$reset","navigator","share","shareData","canShare","$72facf7821ef2ed6$export$4fa6f570da04f7cc","$52852adbc3c0b381$var$unHide","$52852adbc3c0b381$var$downloadSVG","svgRenderer","$273eaa0957855dac$export$2e2bcd8739ae039","svgPattern","PatternConstructor","constructor","svgData","outerHTML","svgBlob","Blob","URL","createObjectURL","$9afd79be8d7b163c$export$a0b41a3b036d92d2","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","nonDefaultConfigValues","toFixed","$2085f05924b9087c$export$fa8157df3262779b","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","$52852adbc3c0b381$var$unselectPattern","patternId","isFirstTime","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$hide","serviceWorker","hostname","registration","register","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","$df9fee1b96456f2b$export$d594efb518b3cec4","queryParams","URLSearchParams","search","Pattern","queryPattern","async","$72facf7821ef2ed6$export$ed80d9de1d9df928","btn","dialogId","toggleFor"],"version":3,"file":"index.e2c85995.js.map"}