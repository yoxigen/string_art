{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/helpers/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Mandala.js","src/scripts/string_art_types/Eye.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/string_art_types/Flower.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Freestyle.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/Serialize.js","src/scripts/share.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / (colorCount - 1)\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    if (!colorCount) {\n      throw new Error(\"Can't get color map, no colorCount provided!\");\n    }\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {} }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: controls,\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const PI2 = Math.PI * 2;\nconst NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(canvas, config) {\n    this.context = canvas.getContext('2d');\n    this.setConfig(config);\n    this.centerX = canvas.width / 2;\n    this.nails = [];\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    this.nails.push(nail);\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.beginPath();\n    this.context.fillStyle = this.nailsColor;\n    this.context.textBaseline = 'middle';\n    this.context.font = `${this.nailNumbersFontSize}px sans-serif`;\n    const nailNumberOffset = this.nailRadius + NUMBER_MARGIN;\n\n    this.nails.forEach(({ point: [x, y], number }) => {\n      this.context.moveTo(x + this.nailRadius, y);\n      this.context.arc(x, y, this.nailRadius, 0, PI2);\n      if (drawNumbers && number !== undefined && number !== null) {\n        const isRightAlign = x < this.centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.context.textAlign = isRightAlign ? 'right' : 'left';\n        this.context.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.context.fill();\n    this.nails = [];\n  }\n}\n","import Nails from './Nails.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.1 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(canvas) {\n    if (!canvas) {\n      throw new Error('Canvas not specified!');\n    }\n\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = Object.freeze(\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\n      );\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  getSize() {\n    const canvasScreenSize = [\n      this.canvas.clientWidth,\n      this.canvas.clientHeight,\n    ];\n    return canvasScreenSize.map(v => v * this.pixelRatio);\n  }\n\n  setUpDraw() {\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.center = this.size.map(value => value / 2);\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.canvas, this.config);\n    }\n\n    this.ctx.clearRect(0, 0, ...this.size);\n    this.ctx.lineWidth = this.config.stringWidth;\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    this.ctx.beginPath();\n    if (enableBackground) {\n      this.ctx.globalCompositeOperation = 'destination-over';\n      this.ctx.fillStyle = customBackgroundColor\n        ? backgroundColor\n        : darkMode\n        ? COLORS.dark\n        : COLORS.light;\n      this.ctx.fillRect(0, 0, ...this.size);\n    }\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art on canvas\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","import Nails from '../Nails.js';\n\nconst PI2 = Math.PI * 2;\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const realIndex = this.isReverse ? this.config.n - 1 - index : index;\n\n    const point = [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const props = {\n        center,\n        radius: radius ?? Math.min(...center) - margin,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n    ].join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 5,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount, repetition } = this.config;\n    this.layersCount = layers ?? 1;\n    this.realRepetition = repetition * 2 - 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.ctx.strokeStyle = color;\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      prevPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength + 1\n        : prevPointIndex + currentInnerLength;\n\n      if (repetitionCount === this.realRepetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n        prevPointIndex++;\n      } else {\n        repetitionCount++;\n      }\n\n      prevPoint = this.circle.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n\n      this.ctx.stroke();\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return Math.round(layers * n * (innerLength * 2) * repetition);\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n    const PI2 = Math.PI * 2;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.ctx.beginPath();\n    this.ctx.moveTo(...this.center);\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    let lastPoint;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      if (lastPoint) {\n        this.ctx.moveTo(...lastPoint);\n        this.ctx.lineTo(...point);\n      }\n      lastPoint = point;\n      this.ctx.stroke();\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Mandala extends StringArt {\n  name = 'Mandala';\n  id = 'mandala';\n  link =\n    'https://www.youtube.com/watch?v=LWin7w9hF-E&ab_channel=Jorgedelatierra';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, margin, layerFill, base, reverse } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n      reverse\n    };\n    this.stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n    this.base = base;\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', time }) {\n    const n = this.n;\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= this.stringsPerLayer; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      point = this.circle.getPoint(i + shift);\n      this.ctx.lineTo(...point);\n      const toIndex = (i * this.base) % n;\n      this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const {layers, layerFill} = this.config;\n    const stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n    return (layers ?? 1) * stringsPerLayer;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(\n        ...this.getPoint({ side, index: i, rotation, ...sideProps })\n      );\n      this.ctx.lineTo(\n        ...this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize =\n      Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","const PI2 = Math.PI * 2;\n\nexport default class Polygon {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        size: configSize,\n        margin,\n        rotation = 0,\n        sides: sideCount,\n      } = (this.config = config);\n\n      const sideAngle = PI2 / sideCount;\n\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\n        const angle = sideAngle * i + PI2 * rotation;\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\n\n        return {\n          cos: Math.cos(angle),\n          sin: Math.sin(angle),\n          center: {\n            cos: Math.cos(radiusAngle),\n            sin: Math.sin(radiusAngle),\n          },\n        };\n      });\n\n      Object.assign(this, {\n        sides,\n        sideCount,\n        sideAngle,\n      });\n\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n\n      Object.assign(this, this._getProps());\n\n      if (config.fitSize) {\n        const boundingRect = this.getBoundingRect();\n        const scale = Math.min(\n          (configSize[0] - 2 * margin) / boundingRect.width,\n          (configSize[1] - 2 * margin) / boundingRect.height\n        );\n\n        const size = configSize.map(v => v * scale);\n        const center = [\n          this.center[0] -\n            (scale * (boundingRect.left - configSize[0] + boundingRect.right)) /\n              2,\n          this.center[1] -\n            (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) /\n              2,\n        ];\n        Object.assign(this, this._getProps({ size, center }));\n\n        this.points.clear();\n      }\n    }\n  }\n\n  _getProps(overrideConfig) {\n    const {\n      nailsSpacing,\n      size,\n      margin = 0,\n      center: configCenter,\n    } = Object.assign({}, this.config, overrideConfig);\n\n    const center = configCenter ?? this.config.size.map(v => v / 2);\n\n    const radius = Math.min(...size) / 2 - margin;\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\n    const start = [\n      radius * Math.sin(this.sideAngle / 2),\n      radius * Math.cos(this.sideAngle / 2),\n    ];\n    const nailsDistance = sideSize * nailsSpacing;\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\n    const radiusNailsDistance = radius / radiusNailsCount;\n\n    return {\n      nailsSpacing,\n      nailsPerSide: 1 / nailsSpacing,\n      center,\n      radius,\n      sideSize,\n      start,\n      nailsDistance,\n      radiusNailsCount,\n      radiusNailsDistance,\n    };\n  }\n\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\n      '_'\n    );\n  }\n\n  getSidePoint({ side, index }) {\n    const pointsMapIndex = [side, index].join('_');\n\n    if (this.points.has(pointsMapIndex)) {\n      return this.points.get(pointsMapIndex);\n    }\n\n    const startX = this.start[0] - index * this.nailsDistance;\n    const { cos, sin } = this.sides[side];\n\n    const point = [\n      cos * startX - sin * this.start[1] + this.center[0],\n      sin * startX + cos * this.start[1] + this.center[1],\n    ];\n\n    this.points.set(pointsMapIndex, point);\n    return point;\n  }\n\n  getCenterPoint({ side, index }) {\n    const radius = index * this.radiusNailsDistance;\n    const { sin, cos } = this.sides[side].center;\n\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\n  }\n\n  getBoundingRect() {\n    const points = this.sides.map((_, side) =>\n      this.getSidePoint({ side, index: 0 })\n    );\n    const firstPoint = points[0];\n\n    const boundingRect = points.slice(1).reduce(\n      (boundingRect, [x, y]) => ({\n        left: Math.min(boundingRect.left, x),\n        right: Math.max(boundingRect.right, x),\n        top: Math.min(boundingRect.top, y),\n        bottom: Math.max(boundingRect.bottom, y),\n      }),\n      {\n        left: firstPoint[0],\n        right: firstPoint[0],\n        top: firstPoint[1],\n        bottom: firstPoint[1],\n      }\n    );\n\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\n    boundingRect.width = boundingRect.right - boundingRect.left;\n    Object.freeze(boundingRect);\n    return boundingRect;\n  }\n\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\n    for (let side = 0; side < this.sideCount; side++) {\n      const sideIndexStart = side * this.nailsPerSide;\n\n      if (drawSides) {\n        for (let index = 0; index < this.nailsPerSide; index++) {\n          nails.addNail({\n            point: this.getSidePoint({ side, index }),\n            number: sideIndexStart + index,\n          });\n        }\n      }\n\n      if (drawCenter) {\n        for (let index = 0; index < this.radiusNailsCount; index++) {\n          nails.addNail({\n            point: this.getCenterPoint({ side, index }),\n            number: `${side}_${index}`,\n          });\n        }\n      }\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 1,\n    multicolorStart: 0,\n    multicolorByLightness: true,\n    minLightness: 20,\n    maxLightness: 50,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class PolygonPattern extends StringArt {\n  name = 'Polygon';\n  id = 'polygon';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'bezier',\n      label: 'Bezier',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 4,\n        step: 1,\n      },\n      show: ({ sides }) => sides > 4,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#5c5c5c',\n    nailRadius: 1,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const polygonConfig = {\n      sides,\n      rotation,\n      margin,\n      size,\n      nailsSpacing: 1 / n,\n      fitSize: true,\n    };\n\n    if (this.polygon) {\n      this.polygon.setConfig(polygonConfig);\n    } else {\n      this.polygon = new Polygon(polygonConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: sides,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: sides,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier } = this.config;\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let side = 0; side < sides; side++) {\n      const nextSide = (side + limitedBezier) % sides;\n\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\n        if (this.colorMap) {\n          color = this.colorMap.get(step);\n        }\n\n        this.ctx.strokeStyle = color;\n        this.ctx.beginPath();\n        this.ctx.moveTo(...this.polygon.getSidePoint({ side, index }));\n        this.ctx.lineTo(\n          ...this.polygon.getSidePoint({ side: nextSide, index })\n        );\n\n        this.ctx.stroke();\n\n        yield;\n        step++;\n      }\n    }\n  }\n\n  getStepCount() {\n    const { sides, n } = this.config;\n    return sides * n;\n  }\n\n  drawNails() {\n    this.polygon.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 264,\n    multicolorStart: 53,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class Flower extends StringArt {\n  name = 'Flower';\n  id = 'flower';\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\n  controls = [\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#29f1ff',\n    nailRadius: 1,\n    stringWidth: 0.5,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const layerAngleShift = 1 / (sides * layers);\n\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\n      const polygonConfig = {\n        sides,\n        rotation: rotation + i * layerAngleShift,\n        margin,\n        size,\n        nailsSpacing: 1 / n,\n      };\n\n      return new Polygon(polygonConfig);\n    });\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: layers,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: layers,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier, layers } = this.config;\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const polygon = this.polygons[layer];\n\n      for (let side = 0; side < sides; side++) {\n        const leftSide = side === sides - 1 ? 0 : side + 1;\n\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\n          if (this.colorMap) {\n            color = this.colorMap.get(step);\n          }\n\n          const centerIndexes = this.getCenterIndexes({\n            polygon,\n            sideIndex: index,\n          });\n\n          this.ctx.strokeStyle = color;\n          this.ctx.beginPath();\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: side,\n              index: centerIndexes[0],\n            })\n          );\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: leftSide,\n              index: centerIndexes[1],\n            })\n          );\n\n          this.ctx.stroke();\n\n          yield;\n          step++;\n        }\n      }\n    }\n  }\n\n  getCenterIndexes({ polygon, sideIndex }) {\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\n\n    return [\n      sideIndex < extraNailCount\n        ? -extraNailCount + sideIndex\n        : sideIndex - extraNailCount,\n      polygon.radiusNailsCount - sideIndex,\n    ];\n  }\n\n  getStepCount() {\n    const { sides, n, layers } = this.config;\n    return sides * (n + 1) * layers;\n  }\n\n  drawNails() {\n    this.polygons.forEach(polygon =>\n      polygon.drawNails(this.nails, { drawCenter: true })\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport Mandala from './string_art_types/Mandala.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Freestyle from './string_art_types/Freestyle.js';\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\nimport Flower from './string_art_types/Flower.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  Mandala,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Freestyle,\n  PolygonPattern,\n  Flower,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0 } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails } = this.config;\n\n    this.ctx.strokeStyle = innerColor;\n    let prevPoint;\n\n    for (const { prevSide, sideIndex, point } of this.generateStarPoints()) {\n      this.ctx.beginPath();\n\n      if (sideIndex && !(sideIndex % 2)) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...point);\n      } else {\n        this.ctx.moveTo(...point);\n      }\n\n      const prevSideIndex = sideNails - sideIndex;\n      this.ctx.lineTo(\n        ...this.getStarPoint({ side: prevSide, sideIndex: prevSideIndex })\n      );\n      prevPoint = point;\n      this.ctx.stroke();\n      yield;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor } = this.config;\n\n    let prevCirclePoint;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = outterColor;\n    for (const { side, prevSide, sideIndex, point } of this.generateStarPoints({\n      reverseOrder: true,\n    })) {\n      this.ctx.beginPath();\n      if (!prevCirclePoint) {\n        prevCirclePoint = this.circle.getPoint(\n          this.sides[prevSide].circlePointsStart\n        );\n      }\n\n      this.ctx.moveTo(...prevCirclePoint);\n\n      this.ctx.lineTo(...point);\n      this.ctx.stroke();\n\n      yield;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      const nextPointIndex = isPrevSide\n        ? this.sides[prevSide].circlePointsEnd - sideIndex\n        : this.sides[side].circlePointsStart + sideIndex;\n\n      const nextPoint = this.circle.getPoint(nextPointIndex);\n      this.ctx.lineTo(...nextPoint);\n\n      prevCirclePoint = this.circle.getPoint(\n        isPrevSide\n          ? this.sides[prevSide].circlePointsEnd - sideIndex + 1\n          : this.sides[side].circlePointsStart + sideIndex - 1\n      );\n\n      this.ctx.lineTo(...prevCirclePoint);\n\n      this.ctx.stroke();\n      isPrevSide = !isPrevSide;\n      yield;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails } = this.config;\n    const starCount = sideNails * sides;\n    return starCount * 3; // Once for each side + two more times for the side's circle\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size1',\n              label: 'Size',\n              defaultValue: 0.25,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size1, n }) => Math.round(n * size1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'end1',\n              label: 'End Position',\n              defaultValue: 1,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end1, n }) => Math.round(n * end1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'color1',\n              label: 'Color',\n              defaultValue: '#a94fb0',\n              type: 'color',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size2',\n              label: 'Size',\n              defaultValue: 0.125,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size2, n }) => Math.round(n * size2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'end2',\n              label: 'End Position',\n              defaultValue: 0.888,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'color2',\n              label: 'Color',\n              defaultValue: '#ec6ad0',\n              type: 'color',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size3',\n              label: 'Size',\n              defaultValue: 0,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size3, n }) => Math.round(n * size3),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'end3',\n              label: 'End Position',\n              defaultValue: 0.826,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'color3',\n              label: 'Color',\n              defaultValue: '#f08ad5',\n              type: 'color',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: true,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = color;\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      this.ctx.beginPath();\n\n      if (prevPoint) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...this.getPoint(prevPointIndex + advance));\n      } else {\n        this.ctx.moveTo(...this.getPoint(getPointIndex(index)));\n      }\n\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      prevPoint = this.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport Circle from '../helpers/Circle.js';\nimport Mandala from './Mandala.js';\n\nexport default class Wave extends Mandala {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'layerFill',\n      label: 'Layer fill',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerFill }) => Math.floor(100 * layerFill) + '%',\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 15 / 200,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    {\n      key: 'reverse',\n      label: 'Reverse',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n    this.base = 2;\n  }\n\n  *generateStrings() {\n    const {layers, reverse} = this.config;\n\n    for (let layer = 0; layer < layers; layer++) {\n      yield* this.drawTimesTable({\n        color: this.color.getColor(layer),\n        shift: this.layerShift * (reverse ? 1 : -1) * layer,\n        time: layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Freestyle extends StringArt {\n  name = 'Freestyle';\n  id = 'freestyle';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.ctx.strokeStyle = color;\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        this.ctx.beginPath();\n        this.ctx.moveTo(...(prevCirclePoint ?? this.getPoint(layer, i)));\n\n        if (layerIndex === 0 && i) {\n          this.ctx.lineTo(...this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n        this.ctx.lineTo(...prevCirclePoint);\n        this.ctx.stroke();\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd(e) {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      this.currentInputRange.value = this.currentInputRangeValue;\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll(e) {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.config = Object.freeze({\n      ...this.pattern.config,\n      [controlKey]: inputValue,\n    });\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","export function serializeConfig(pattern) {\n    const {defaultConfig, config} = pattern;\n\n    const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\n        if (value === defaultConfig[key]) {\n            return null;\n        }\n\n        if (typeof(value) === \"boolean\") {\n            return `!${value ? 1 : 0}`;\n        }\n\n        return value;\n    });\n\n    while(nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\n        nonDefaultConfigValues.pop();\n    }\n\n    if (!nonDefaultConfigValues.length) {\n        return '';\n    }\n\n    const serializedConfigValues = nonDefaultConfigValues.join(\"_\").replace(/\\_{2,}/g, match => '~' + match.length + '_');\n    return serializedConfigValues;\n}\n\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\nconst booleanRegExp = /^(?:!)([01])$/;\n\nexport function deserializeConfig(pattern, serializedCofig) {\n    const serializedConfigValues = serializedCofig\n        .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) => new Array(+commaCount).fill('_').join(\"\"))\n        .split('_')\n        .map(v => {\n            if (v === '') {\n                return null;\n            }\n\n            if (numberRegExp.test(v)) {\n                return parseFloat(v);\n            }\n\n            const booleanMatch = v.match(booleanRegExp);\n            if (booleanMatch) {\n                return booleanMatch[1] === '1';\n            }\n\n            return v;\n        });\n\n    const configKeys = Object.keys(pattern.defaultConfig);\n\n    return serializedConfigValues.reduce((config, serializedValue, i) => {\n        if (serializedValue !== null) {\n            const key = configKeys[i];\n            return { ...config, [key]: serializedValue};\n        }\n\n        return config;\n    }, {});\n}\n","export async function share(input) {\n  try {\n    navigator.share(await getShareData(input));\n  } catch (error) {\n    alert('Error: ' + error.message);\n  }\n}\n\nexport async function isShareSupported(input) {\n  if (!navigator.share) {\n    return false;\n  }\n\n  const shareData = await getShareData(input);\n  return navigator.canShare(shareData);\n}\n\nasync function getShareData({ canvas, pattern }) {\n  const dataUrl = canvas.toDataURL();\n  const blob = await (await fetch(dataUrl)).blob();\n  const files = [\n    new File([blob], pattern.name + '.jpg', {\n      type: blob.type,\n      lastModified: new Date().getTime(),\n    }),\n  ];\n  return {\n    url: window.location.href,\n    files,\n    title: document.title,\n    text: 'String Art Studio - ' + pattern.name,\n  };\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\nimport { deserializeConfig, serializeConfig } from './Serialize.js';\nimport { isShareSupported, share } from './share.js';\n\nwindow.addEventListener('error', function (event) {\n  alert('Error: ' + event.message);\n});\n\nconst elements = {\n  canvas: document.querySelector('canvas'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  shareBtn: document.querySelector('#share_btn'),\n  buttons: document.querySelector('#buttons'),\n  instructionsLink: document.querySelector(\n    '#pattern_select_dropdown_instructions'\n  ),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\n\nwindow.addEventListener('load', main);\n\nfunction main() {\n  initRouting();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  unHide(document.querySelector('main'));\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      thumbnails.toggle();\n    }\n  }\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  elements.shareBtn.addEventListener(\n    'click',\n    async () =>\n      await share({\n        canvas: elements.canvas,\n        pattern: currentPattern,\n      })\n  );\n  elements.instructionsLink.addEventListener('click', e => {\n    e.preventDefault();\n    history.pushState({ pattern: null }, 'String Art Studio', './');\n    unselectPattern();\n  });\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern &&\n        currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nasync function initPattern() {\n  if (!currentPattern) {\n    throw new Error(\"Can't init pattern - no current pattern available!\");\n  }\n\n  initSize();\n\n  window.addEventListener(\n    'resize',\n    () => currentPattern && currentPattern.draw()\n  );\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  const showShare = await isShareSupported({\n    canvas: elements.canvas,\n    pattern: currentPattern,\n  });\n  if (showShare) {\n    unHide(elements.shareBtn);\n  }\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = elements.canvas.toDataURL('image/png');\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig && configQuery\n        ? `&config=${encodeURIComponent(configQuery)}`\n        : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize({ width, height }) {\n  elements.canvas.removeAttribute('width');\n  elements.canvas.removeAttribute('height');\n\n  if (width && height) {\n    elements.canvas.style.width = `${width}px`;\n    elements.canvas.style.height = `${height}px`;\n    if (!elements.canvas.parentElement.classList.contains('overflow')) {\n      elements.canvas.parentElement.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.parentElement.classList.remove('overflow');\n    elements.canvas.removeAttribute('style');\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  if (state?.pattern) {\n    const pattern = findPatternById(state.pattern);\n    selectPattern(pattern, {\n      draw: false,\n      config: state.config ? deserializeConfig(pattern, state.config) : {},\n    });\n\n    thumbnails.close();\n    currentPattern.draw();\n  } else {\n    unselectPattern();\n    thumbnails.open();\n  }\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId}\" not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  const isFirstTime = !currentPattern;\n\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.config = config;\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  if (pattern.link) {\n    elements.patternLink.setAttribute('href', pattern.link);\n    unHide(elements.patternLink);\n  } else {\n    hide(elements.patternLink);\n  }\n\n  if (draw) {\n    requestAnimationFrame(() => {\n      currentPattern.draw();\n    });\n  }\n\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n  document.body.setAttribute('data-pattern', pattern.id);\n\n  if (isFirstTime) {\n    initPattern();\n    document.body.querySelectorAll('.pattern_only').forEach(unHide);\n  }\n}\n\nfunction unHide(element) {\n  element.removeAttribute('hidden');\n}\n\nfunction hide(element) {\n  element.setAttribute('hidden', 'hidden');\n}\n\nfunction unselectPattern() {\n  currentPattern = null;\n  const context = elements.canvas.getContext('2d');\n\n  context.clearRect(0, 0, elements.canvas.width, elements.canvas.height);\n  hide(elements.patternLink);\n  thumbnails.setCurrentPattern(null);\n  controls && controls.destroy();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  document.body.removeAttribute('data-pattern');\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\n\nconst THUMBNAIL_WIDTH = 100;\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.open();\n    } else if (this.pattern) {\n      this.close();\n    }\n  }\n\n  open() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    }\n  }\n\n  close() {\n    if (!this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern?.name ?? 'Choose a pattern';\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const canvas = document.createElement('canvas');\n      canvas.style.width = canvas.style.height = `${THUMBNAIL_WIDTH}px`;\n\n      const pattern = new PatternType(canvas);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n      const patternLink = document.createElement('a');\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      patternLink.appendChild(canvas);\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","show","isMultiColor","attr","min","max","step","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","getColorMap","stepCount","Error","stepsPerColor","Math","floor","colorMap","Map","i","set","include","exclude","defaults","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","$a8180031c78213da$var$PI2","PI","canvas","context","getContext","setConfig","centerX","width","nails","nailRadius","nailsColor","nailNumbersFontSize","addNail","nail","push","drawNumbers","globalCompositeOperation","beginPath","fillStyle","textBaseline","font","nailNumberOffset","forEach","point","x","y","number","moveTo","arc","isRightAlign","numberPosition","textAlign","fillText","String","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","margin","showNailNumbers","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","concat","defaultConfig","_defaultConfig","assign","defaultValues","_config","value","getSize","clientWidth","clientHeight","v","setUpDraw","removeAttribute","height","size","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$ff21866e88ed26dc$var$PI2","getPoint","index","points","has","get","realIndex","isReverse","n","sin","indexAngle","rotationAngle","radius","cos","serializedConfig","_serializeConfig","rotation","configCenter","props","clear","join","nailsNumberStart","getNumber","round","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","$17fe1039ca333e84$export$2e2bcd8739ae039","id","link","$ff21866e88ed26dc$export$2e2bcd8739ae039","rotationConfig","super","nSpirals","radiusIncrease","angleStep","PI2","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","generatePoints","lastPoint","strokeStyle","stepColor","lineTo","stroke","_n","layers","extraNails","layerFill","base","circleConfig","stringsPerLayer","circle","layerShift","shift","time","toIndex","instructions","drawTimesTable","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$6489b1167eb82c4c$var$PI2","configSize","sides","sideCount","sideAngle","radiusAngle","_getProps","fitSize","boundingRect","getBoundingRect","scale","overrideConfig","nailsSpacing","sideSize","start","nailsDistance","radiusNailsCount","nailsPerSide","getSidePoint","pointsMapIndex","startX","getCenterPoint","radiusNailsDistance","firstPoint","slice","drawCenter","drawSides","sideIndexStart","index1","$d89aefe1e0b94ba8$var$COLOR_CONFIG","$a3a02ffca86b5e03$var$COLOR_CONFIG","$8b13425f1e264518$export$2e2bcd8739ae039","sideNails","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerY","reverseOrder","prevSide","innerColor","prevPoint","generateStarPoints","prevSideIndex","outterColor","prevCirclePoint","isPrevSide","nextPointIndex","nextPoint","drawCircle","drawStar","nailsConfig","size1","show1","end1","size2","show2","end2","size3","show3","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","prevPointIndex","self","advance","getPointIndex","$4252a999d90491dd$export$2e2bcd8739ae039","innerLength","repetition","layersCount","realRepetition","currentInnerLength","repetitionCount","isPrevPoint","drawSpiral","layerSpread","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","nextLayerIndex","polygonConfig","polygon","$6489b1167eb82c4c$export$2e2bcd8739ae039","bezier","limitedBezier","ceil","layerAngleShift","polygons","leftSide","centerIndexes","getCenterIndexes","extraNailCount","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","Set","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","parentElement","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","Function","add","_triggerEvent","eventData","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","controlKey","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","$2085f05924b9087c$var$numberRegExp","$2085f05924b9087c$var$booleanRegExp","$2085f05924b9087c$export$39ef19ebad6081a3","serializedCofig","serializedConfigValues","commaCount","split","test","booleanMatch","match","configKeys","keys","serializedValue","$72facf7821ef2ed6$var$getShareData","dataUrl","toDataURL","blob","fetch","files","File","lastModified","Date","getTime","url","location","href","title","text","alert","message","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadNailsBtn","resetBtn","shareBtn","buttons","instructionsLink","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","style","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","open","close","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","thumbnailConfig","li","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$initPattern","$52852adbc3c0b381$var$setSize","$52852adbc3c0b381$var$downloadCanvas","$52852adbc3c0b381$var$downloadNailsImage","$52852adbc3c0b381$var$reset","navigator","share","shareData","canShare","$72facf7821ef2ed6$export$4fa6f570da04f7cc","$52852adbc3c0b381$var$unHide","downloadLink","download","click","currentConfig","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","nonDefaultConfigValues","pop","$2085f05924b9087c$export$fa8157df3262779b","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","$52852adbc3c0b381$var$unselectPattern","patternId","isFirstTime","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$hide","$52852adbc3c0b381$var$initRouting","queryParams","URLSearchParams","search","queryPattern","async","error","$72facf7821ef2ed6$export$ed80d9de1d9df928","dialogId","toggleFor"],"version":3,"file":"index.9ee14abf.js.map"}