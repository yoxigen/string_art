{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/string_art_types/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Eye.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/TimesTables.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Circles.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / colorCount\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {} }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: controls,\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","const PI2 = Math.PI * 2;\nconst NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(canvas, config) {\n    this.context = canvas.getContext('2d');\n    this.setConfig(config);\n    this.centerX = canvas.width / 2;\n    this.nails = [];\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    this.nails.push(nail);\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.beginPath();\n    this.context.fillStyle = this.nailsColor;\n    this.context.textBaseline = 'middle';\n    this.context.font = `${this.nailNumbersFontSize}px sans-serif`;\n    const nailNumberOffset = this.nailRadius + NUMBER_MARGIN;\n\n    this.nails.forEach(({ point: [x, y], number }) => {\n      this.context.moveTo(x + this.nailRadius, y);\n      this.context.arc(x, y, this.nailRadius, 0, PI2);\n      if (drawNumbers && number !== undefined && number !== null) {\n        const isRightAlign = x < this.centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.context.textAlign = isRightAlign ? 'right' : 'left';\n        this.context.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.context.fill();\n    this.nails = [];\n  }\n}\n","import Nails from './Nails.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.2 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(canvas) {\n    if (!canvas) {\n      throw new Error('Canvas not specified!');\n    }\n\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = flattenConfig(this.configControls);\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  getSize() {\n    const canvasScreenSize = [\n      this.canvas.clientWidth,\n      this.canvas.clientHeight,\n    ];\n    return canvasScreenSize.map(v => v * this.pixelRatio);\n  }\n\n  setUpDraw() {\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.center = this.size.map(value => value / 2);\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.canvas, this.config);\n    }\n\n    this.ctx.clearRect(0, 0, ...this.size);\n    this.ctx.lineWidth = this.config.stringWidth;\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    this.ctx.beginPath();\n    if (enableBackground) {\n      this.ctx.globalCompositeOperation = 'destination-over';\n      this.ctx.fillStyle = customBackgroundColor\n        ? backgroundColor\n        : darkMode\n        ? COLORS.dark\n        : COLORS.light;\n      this.ctx.fillRect(0, 0, ...this.size);\n    }\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art on canvas\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","import Nails from '../Nails.js';\n\nconst PI2 = Math.PI * 2;\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const realIndex = this.isReverse ? this.config.n - 1 - index : index;\n\n    const point = [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const props = {\n        center,\n        radius: radius ?? Math.min(...center) - margin,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n    ].join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 6,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount } = this.config;\n    this.layersCount = layers ?? 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { repetition, innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.ctx.strokeStyle = color;\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      const nextPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength\n        : prevPointIndex + currentInnerLength;\n\n      this.ctx.lineTo(...this.circle.getPoint(nextPointIndex));\n      repetitionCount++;\n      if (repetitionCount === repetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n      }\n\n      prevPointIndex = nextPointIndex + 1;\n      prevPoint = this.circle.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n\n      this.ctx.stroke();\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return layers * Math.round(innerLength * n) * repetition;\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\nimport Color from '../helpers/Color.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n    const PI2 = Math.PI * 2;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.ctx.beginPath();\n    this.ctx.moveTo(...this.center);\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    let lastPoint;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      if (lastPoint) {\n        this.ctx.moveTo(...lastPoint);\n        this.ctx.lineTo(...point);\n      }\n      lastPoint = point;\n      this.ctx.stroke();\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(\n        ...this.getPoint({ side, index: i, rotation, ...sideProps })\n      );\n      this.ctx.lineTo(\n        ...this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize =\n      Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport TimesTables from './string_art_types/TimesTables.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Circles from './string_art_types/Circles.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  TimesTables,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Circles,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0 } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails } = this.config;\n\n    this.ctx.strokeStyle = innerColor;\n    let prevPoint;\n\n    for (const { prevSide, sideIndex, point } of this.generateStarPoints()) {\n      this.ctx.beginPath();\n\n      if (sideIndex && !(sideIndex % 2)) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...point);\n      } else {\n        this.ctx.moveTo(...point);\n      }\n\n      const prevSideIndex = sideNails - sideIndex;\n      this.ctx.lineTo(\n        ...this.getStarPoint({ side: prevSide, sideIndex: prevSideIndex })\n      );\n      prevPoint = point;\n      this.ctx.stroke();\n      yield;\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor } = this.config;\n\n    let prevCirclePoint;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = outterColor;\n    for (const { side, prevSide, sideIndex, point } of this.generateStarPoints({\n      reverseOrder: true,\n    })) {\n      this.ctx.beginPath();\n      if (!prevCirclePoint) {\n        prevCirclePoint = this.circle.getPoint(\n          this.sides[prevSide].circlePointsStart\n        );\n      }\n\n      this.ctx.moveTo(...prevCirclePoint);\n\n      this.ctx.lineTo(...point);\n      this.ctx.stroke();\n\n      yield;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      const nextPointIndex = isPrevSide\n        ? this.sides[prevSide].circlePointsEnd - sideIndex\n        : this.sides[side].circlePointsStart + sideIndex;\n\n      const nextPoint = this.circle.getPoint(nextPointIndex);\n      this.ctx.lineTo(...nextPoint);\n\n      prevCirclePoint = this.circle.getPoint(\n        isPrevSide\n          ? this.sides[prevSide].circlePointsEnd - sideIndex + 1\n          : this.sides[side].circlePointsStart + sideIndex - 1\n      );\n\n      this.ctx.lineTo(...prevCirclePoint);\n\n      this.ctx.stroke();\n      isPrevSide = !isPrevSide;\n      yield;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails } = this.config;\n    const starCount = sideNails * sides;\n    return starCount * 3; // Once for each side + two more times for the side's circle\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size1',\n              label: 'Size',\n              defaultValue: 0.25,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size1, n }) => Math.round(n * size1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'end1',\n              label: 'End Position',\n              defaultValue: 1,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end1, n }) => Math.round(n * end1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'color1',\n              label: 'Color',\n              defaultValue: '#a94fb0',\n              type: 'color',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size2',\n              label: 'Size',\n              defaultValue: 0.125,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size2, n }) => Math.round(n * size2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'end2',\n              label: 'End Position',\n              defaultValue: 0.888,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'color2',\n              label: 'Color',\n              defaultValue: '#ec6ad0',\n              type: 'color',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size3',\n              label: 'Size',\n              defaultValue: 0,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size3, n }) => Math.round(n * size3),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'end3',\n              label: 'End Position',\n              defaultValue: 0.826,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'color3',\n              label: 'Color',\n              defaultValue: '#f08ad5',\n              type: 'color',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: true,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = color;\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      this.ctx.beginPath();\n\n      if (prevPoint) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...this.getPoint(prevPointIndex + advance));\n      } else {\n        this.ctx.moveTo(...this.getPoint(getPointIndex(index)));\n      }\n\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      prevPoint = this.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class TimesTables extends StringArt {\n  name = 'Times Tables';\n  id = 'times_tables';\n  link =\n    'https://www.youtube.com/watch?v=LWin7w9hF-E&ab_channel=Jorgedelatierra';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, margin } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', steps, time }) {\n    const { base } = this.config;\n    const n = this.n;\n    const stepsToRender = steps ?? n;\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= stepsToRender; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      point = this.circle.getPoint(i + shift);\n      this.ctx.lineTo(...point);\n      const toIndex = (i * base) % n;\n      this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    return this.config.layers * this.n;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\nimport Spiral from './Spiral.js';\n\nexport default class Wave extends Spiral {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 144,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 0.075,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n  }\n\n  *generateStrings() {\n    for (let layer = 0; layer < this.layersCount; layer++) {\n      yield* this.drawSpiral({\n        color: this.color.getColor(layer),\n        shift: -this.layerShift * layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 40,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from './Circle.js';\n\nexport default class Circles extends StringArt {\n  name = 'Circles';\n  id = 'circles';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.ctx.strokeStyle = color;\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        this.ctx.beginPath();\n        this.ctx.moveTo(...(prevCirclePoint ?? this.getPoint(layer, i)));\n\n        if (layerIndex === 0 && i) {\n          this.ctx.lineTo(...this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n        this.ctx.lineTo(...prevCirclePoint);\n        this.ctx.stroke();\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd(e) {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      this.currentInputRange.value = this.currentInputRangeValue;\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll(e) {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.config = Object.freeze({\n      ...this.pattern.config,\n      [controlKey]: inputValue,\n    });\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\n\nconst elements = {\n  canvas: document.querySelector('canvas'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  buttons: document.querySelector('#buttons'),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\nlet activeDialog;\n\nwindow.addEventListener('load', main);\n\nfunction main() {\n  initRouting();\n  initSize();\n\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      selectPattern(patterns[0]);\n    }\n  }\n\n  window.addEventListener('resize', () => currentPattern.draw());\n\n  elements.canvas.addEventListener('click', () => {\n    player.toggle();\n  });\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = elements.canvas.toDataURL('image/png');\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? JSON.stringify(currentPattern.config) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig ? `&config=${encodeURIComponent(configQuery)}` : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize({ width, height }) {\n  elements.canvas.removeAttribute('width');\n  elements.canvas.removeAttribute('height');\n\n  if (width && height) {\n    elements.canvas.style.width = `${width}px`;\n    elements.canvas.style.height = `${height}px`;\n    if (!elements.canvas.parentElement.classList.contains('overflow')) {\n      elements.canvas.parentElement.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.parentElement.classList.remove('overflow');\n    elements.canvas.removeAttribute('style');\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  const pattern = findPatternById(state.pattern);\n  selectPattern(pattern, {\n    draw: false,\n    config: state.config ? JSON.parse(state.config) : {},\n  });\n\n  currentPattern.draw();\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId} not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.config = config;\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  elements.patternLink.setAttribute('href', pattern.link);\n  if (draw) {\n    currentPattern.draw();\n  }\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\n\nconst THUMBNAIL_WIDTH = 100;\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    } else {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern.name;\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const canvas = document.createElement('canvas');\n      canvas.style.width = canvas.style.height = `${THUMBNAIL_WIDTH}px`;\n\n      const pattern = new PatternType(canvas);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n      const patternLink = document.createElement('a');\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      patternLink.appendChild(canvas);\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","show","isMultiColor","attr","min","max","step","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","getColorMap","stepCount","stepsPerColor","Math","floor","colorMap","Map","i","set","include","exclude","defaults","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","$a8180031c78213da$var$PI2","PI","canvas","context","getContext","setConfig","centerX","width","nails","nailRadius","nailsColor","nailNumbersFontSize","addNail","nail","push","drawNumbers","globalCompositeOperation","beginPath","fillStyle","textBaseline","font","nailNumberOffset","forEach","point","x","y","number","moveTo","arc","isRightAlign","numberPosition","textAlign","fillText","String","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","margin","showNailNumbers","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","Error","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","concat","defaultConfig","_defaultConfig","_config","value","assign","getSize","clientWidth","clientHeight","v","setUpDraw","removeAttribute","height","size","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","$188437ce07b37c18$var$PI2","getPoint","index","points","has","get","realIndex","isReverse","n","sin","indexAngle","rotationAngle","radius","cos","serializedConfig","_serializeConfig","rotation","configCenter","props","clear","join","nailsNumberStart","getNumber","round","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","id","link","$188437ce07b37c18$export$2e2bcd8739ae039","nailsConfig","innerLength","rotationConfig","super","layers","layersCount","circleConfig","circle","shift","repetition","currentInnerLength","repetitionCount","strokeStyle","prevPointIndex","prevPoint","isPrevPoint","stepColor","nextPointIndex","lineTo","stroke","drawSpiral","$17fe1039ca333e84$export$2e2bcd8739ae039","nSpirals","radiusIncrease","angleStep","PI2","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","generatePoints","lastPoint","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","$8b13425f1e264518$export$2e2bcd8739ae039","_n","sides","extraNails","sideNails","sideAngle","starCenterStart","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerY","reverseOrder","prevSide","innerColor","generateStarPoints","prevSideIndex","outterColor","prevCirclePoint","isPrevSide","nextPoint","drawCircle","drawStar","size1","show1","end1","size2","show2","end2","size3","show3","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","self","advance","getPointIndex","layerShift","steps","time","base","stepsToRender","toIndex","instructions","drawTimesTable","$828d2af56886c091$export$2e2bcd8739ae039","layerSpread","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","nextLayerIndex","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","Set","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","parentElement","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","Function","add","_triggerEvent","eventData","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","controlKey","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","entries","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadNailsBtn","resetBtn","buttons","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","text","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","style","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","thumbnailConfig","li","href","title","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$downloadCanvas","downloadLink","download","toDataURL","click","$52852adbc3c0b381$var$downloadNailsImage","currentConfig","$52852adbc3c0b381$var$reset","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","patternId","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$initRouting","$52852adbc3c0b381$var$setSize","$52852adbc3c0b381$var$initSize","queryParams","URLSearchParams","location","search","queryPattern","dialogId","toggleFor"],"version":3,"file":"index.dd782c00.js.map"}