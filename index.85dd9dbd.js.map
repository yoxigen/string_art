{"mappings":"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","sources":["src/scripts/helpers/Color.js","src/scripts/helpers/math_utils.js","src/scripts/Nails.js","src/scripts/StringArt.js","src/scripts/helpers/Circle.js","src/scripts/string_art_types/Spiral.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Mandala.js","src/scripts/string_art_types/Eye.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/string_art_types/Flower.js","src/scripts/string_art_types/MaurerRose.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Freestyle.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/Serialize.js","src/scripts/share.js","src/scripts/main.js","src/scripts/editor/Player.js","src/scripts/thumbnails/Thumbnails.js","src/scripts/pwa.js"],"sourcesContent":["const COLOR_CONTROLS = [\n  {\n    key: 'isMultiColor',\n    label: 'Use multiple colors',\n    defaultValue: false,\n    type: 'checkbox',\n  },\n  {\n    key: 'color',\n    label: 'String color',\n    defaultValue: '#ff4d00',\n    type: 'color',\n    show: ({ isMultiColor }) => !isMultiColor,\n  },\n  {\n    key: 'colorCount',\n    label: 'Colors count',\n    defaultValue: 7,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 20,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorRange',\n    label: 'Multicolor range',\n    defaultValue: 360,\n    type: 'range',\n    attr: {\n      min: 1,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'multicolorStart',\n    label: 'Multicolor start',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 360,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'reverseColors',\n    label: 'Reverse colors order',\n    defaultValue: false,\n    type: 'checkbox',\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'saturation',\n    label: 'Saturation',\n    defaultValue: 100,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 100,\n      step: 1,\n    },\n    show: ({ isMultiColor }) => isMultiColor,\n  },\n  {\n    key: 'lightness',\n    label: 'Lightness',\n    type: 'group',\n    defaultValue: 'minimized',\n    show: ({ isMultiColor }) => isMultiColor,\n    children: [\n      {\n        key: 'multicolorByLightness',\n        label: 'Multi lightness',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ isMultiColor }) => isMultiColor,\n      },\n      {\n        key: 'minLightness',\n        label: 'Minimum lightness',\n        defaultValue: 0,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n      {\n        key: 'maxLightness',\n        label: 'Maximum lightness',\n        defaultValue: 100,\n        type: 'range',\n        attr: {\n          min: 0,\n          max: 100,\n          step: 1,\n        },\n        show: ({ multicolorByLightness, isMultiColor }) =>\n          multicolorByLightness && isMultiColor,\n      },\n    ],\n  },\n];\n\nexport default class Color {\n  constructor(config) {\n    this.config = config;\n    const {\n      multicolorRange,\n      colorCount,\n      multicolorByLightness,\n      minLightness = 0,\n      maxLightness = 100,\n      multicolorStart,\n      darkMode,\n      saturation,\n      reverseColors,\n      isMultiColor,\n    } = config;\n\n    if (isMultiColor) {\n      this.multiColorStep = multicolorRange / colorCount;\n      this.multiColorLightnessStep = multicolorByLightness\n        ? (maxLightness - minLightness) / (colorCount - 1)\n        : 1;\n\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\n        const lightness = multicolorByLightness\n          ? minLightness + this.multiColorLightnessStep * colorIndex\n          : darkMode\n          ? 50\n          : 40;\n        return `hsl(${\n          multicolorStart + colorIndex * this.multiColorStep\n        }, ${saturation}%, ${lightness}%)`;\n      });\n\n      if (reverseColors) {\n        this.colors.reverse();\n      }\n    }\n  }\n\n  /**\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\n   * @param {number} colorIndex\n   * @returns string\n   */\n  getColor(colorIndex) {\n    const { isMultiColor, colorCount, color } = this.config;\n\n    if (!isMultiColor) {\n      return color;\n    }\n\n    if (colorIndex >= colorCount) {\n      colorIndex = colorCount - 1;\n    }\n\n    return this.colors[colorIndex];\n  }\n\n  getColorMap({ stepCount, colorCount }) {\n    if (!colorCount) {\n      throw new Error(\"Can't get color map, no colorCount provided!\");\n    }\n    const stepsPerColor = Math.floor(stepCount / colorCount);\n    const colorMap = new Map();\n    for (let i = 0; i < colorCount; i++) {\n      colorMap.set(i * stepsPerColor, this.getColor(i));\n    }\n    return colorMap;\n  }\n\n  static getConfig({ include, exclude, defaults = {} }) {\n    const controls = getControls();\n\n    return {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: controls,\n    };\n\n    function getControls(controlsConfig = COLOR_CONTROLS) {\n      return controlsConfig\n        .filter(\n          ({ key }) =>\n            (!exclude || !exclude.includes(key)) &&\n            (!include || include.includes(key))\n        )\n        .map(control => {\n          const finalControl = {\n            ...control,\n            defaultValue: defaults[control.key] ?? control.defaultValue,\n          };\n\n          if (control.type === 'group') {\n            finalControl.children = getControls(control.children);\n          }\n          return Object.freeze(finalControl);\n        });\n    }\n  }\n}\n","/**\n * Returns the greatest common divisor of two integers\n * https://en.wikipedia.org/wiki/Euclidean_algorithm\n * @param {number} int1\n * @param {number} int2\n * @returns number\n */\nexport function gcd(int1, int2) {\n  if (!int2) return int1;\n\n  return gcd(int2, int1 % int2);\n}\n\nexport const PI2 = Math.PI * 2;\n","import { PI2 } from './helpers/math_utils.js';\n\nconst NUMBER_MARGIN = 4;\n\nexport default class Nails {\n  constructor(canvas, config) {\n    this.context = canvas.getContext('2d');\n    this.setConfig(config);\n    this.centerX = canvas.width / 2;\n    this.nails = [];\n    this.addedPoints = new Set();\n  }\n\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\n    this.nailRadius = nailRadius;\n    this.nailsColor = nailsColor;\n    this.nailNumbersFontSize = nailNumbersFontSize;\n    this.nails = [];\n    if (this.addedPoints) {\n      this.addedPoints.clear();\n    }\n  }\n\n  // Adds a nail to be rendered. nail: { point, number }\n  addNail(nail) {\n    const nailPoint = nail.point.map(Math.round).join('_');\n    if (!this.addedPoints.has(nailPoint)) {\n      this.nails.push(nail);\n      this.addedPoints.add(nailPoint);\n    }\n  }\n\n  fill({ drawNumbers = true } = {}) {\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.beginPath();\n    this.context.fillStyle = this.nailsColor;\n    this.context.textBaseline = 'middle';\n    this.context.font = `${this.nailNumbersFontSize}px sans-serif`;\n    const nailNumberOffset = this.nailRadius + NUMBER_MARGIN;\n\n    this.nails.forEach(({ point: [x, y], number }) => {\n      this.context.moveTo(x + this.nailRadius, y);\n      this.context.arc(x, y, this.nailRadius, 0, PI2);\n      if (drawNumbers && number !== undefined && number !== null) {\n        const isRightAlign = x < this.centerX;\n\n        const numberPosition = [\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\n          y,\n        ];\n\n        this.context.textAlign = isRightAlign ? 'right' : 'left';\n        this.context.fillText(String(number), ...numberPosition);\n      }\n    });\n\n    this.context.fill();\n    this.nails = [];\n    this.addedPoints.clear();\n  }\n}\n","import Nails from './Nails.js';\n\nconst COLORS = {\n  dark: '#0e0e0e',\n  light: '#ffffff',\n};\n\nconst COMMON_CONFIG_CONTROLS = [\n  {\n    key: 'strings',\n    label: 'Strings',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showStrings',\n        label: 'Show strings',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showNails }) => !showNails,\n      },\n      {\n        key: 'stringWidth',\n        label: 'String width',\n        defaultValue: 1,\n        type: 'range',\n        attr: { min: 0.2, max: 4, step: 0.1 },\n        show: ({ showStrings }) => showStrings,\n      },\n    ],\n  },\n  {\n    key: 'nails',\n    label: 'Nails',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'showNails',\n        label: 'Show nails',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ showStrings }) => !showStrings,\n      },\n      {\n        key: 'showNailNumbers',\n        label: 'Show nail numbers',\n        defaultValue: false,\n        type: 'checkbox',\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailNumbersFontSize',\n        label: 'Nail numbers font size',\n        defaultValue: 10,\n        type: 'range',\n        attr: { min: 6, max: 24, step: 0.5 },\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\n      },\n      {\n        key: 'margin',\n        label: 'Margin',\n        defaultValue: 20,\n        type: 'number',\n        attr: { min: 0, max: 500, step: 1 },\n        displayValue: ({ margin }) => `${margin}px`,\n      },\n      {\n        key: 'nailRadius',\n        label: 'Nail size',\n        defaultValue: 1.5,\n        type: 'range',\n        attr: { min: 0.5, max: 5, step: 0.25 },\n        show: ({ showNails }) => showNails,\n      },\n      {\n        key: 'nailsColor',\n        label: 'Nails color',\n        defaultValue: '#ffffff',\n        type: 'color',\n        show: ({ showNails }) => showNails,\n      },\n    ],\n  },\n  {\n    key: 'background',\n    label: 'Background',\n    type: 'group',\n    defaultValue: 'minimized',\n    children: [\n      {\n        key: 'darkMode',\n        label: 'Dark mode',\n        defaultValue: true,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'customBackgroundColor',\n        label: 'Custom background color',\n        defaultValue: false,\n        type: 'checkbox',\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'backgroundColor',\n        label: 'Background color',\n        defaultValue: COLORS.dark,\n        type: 'color',\n        show: ({ customBackgroundColor }) => customBackgroundColor,\n        isDisabled: ({ enableBackground }) => !enableBackground,\n      },\n      {\n        key: 'enableBackground',\n        label: 'Enable background',\n        defaultValue: true,\n        type: 'checkbox',\n      },\n    ],\n  },\n];\n\nclass StringArt {\n  constructor(canvas) {\n    if (!canvas) {\n      throw new Error('Canvas not specified!');\n    }\n\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const bsr =\n      this.ctx.webkitBackingStorePixelRatio ||\n      this.ctx.mozBackingStorePixelRatio ||\n      this.ctx.msBackingStorePixelRatio ||\n      this.ctx.oBackingStorePixelRatio ||\n      this.ctx.backingStorePixelRatio ||\n      1;\n    this.pixelRatio = dpr / bsr;\n  }\n\n  get configControls() {\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\n  }\n\n  get defaultConfig() {\n    if (!this._defaultConfig) {\n      this._defaultConfig = Object.freeze(\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\n      );\n    }\n\n    return this._defaultConfig;\n  }\n\n  get config() {\n    return this._config ?? this.defaultConfig;\n  }\n\n  set config(value) {\n    this._config = Object.assign({}, this.defaultConfig, value);\n  }\n\n  getSize() {\n    const canvasScreenSize = [\n      this.canvas.clientWidth,\n      this.canvas.clientHeight,\n    ];\n    return canvasScreenSize.map(v => v * this.pixelRatio);\n  }\n\n  setUpDraw() {\n    this.canvas.removeAttribute('width');\n    this.canvas.removeAttribute('height');\n    const [width, height] = (this.size = this.getSize());\n    Object.assign(this, this.size);\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n    this.center = this.size.map(value => value / 2);\n\n    if (this.nails) {\n      this.nails.setConfig(this.config);\n    } else {\n      this.nails = new Nails(this.canvas, this.config);\n    }\n\n    this.ctx.clearRect(0, 0, ...this.size);\n    this.ctx.lineWidth = this.config.stringWidth;\n  }\n\n  afterDraw() {\n    const { showNails, showNailNumbers } = this.config;\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  initDraw() {\n    this.setUpDraw(this.config);\n    const {\n      showNails,\n      showNailNumbers,\n      darkMode,\n      backgroundColor,\n      customBackgroundColor,\n      enableBackground,\n    } = this.config;\n\n    this.ctx.beginPath();\n    if (enableBackground) {\n      this.ctx.globalCompositeOperation = 'destination-over';\n      this.ctx.fillStyle = customBackgroundColor\n        ? backgroundColor\n        : darkMode\n        ? COLORS.dark\n        : COLORS.light;\n      this.ctx.fillRect(0, 0, ...this.size);\n    }\n\n    this.ctx.globalCompositeOperation = 'source-over';\n    if (showNails) {\n      this.drawNails();\n      this.nails.fill({ drawNumbers: showNailNumbers });\n    }\n  }\n\n  /**\n   * Draws the string art on canvas\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\n   */\n  draw({ position = Infinity } = {}) {\n    this.initDraw();\n    const { showStrings } = this.config;\n\n    if (showStrings) {\n      this.stringsIterator = this.generateStrings();\n      this.position = 0;\n\n      while (!this.drawNext().done && this.position < position);\n      this.afterDraw();\n    }\n  }\n\n  goto(position) {\n    if (position === this.position) {\n      return;\n    }\n\n    if (this.stringsIterator && position > this.position) {\n      while (!this.drawNext().done && this.position < position);\n    } else {\n      this.draw({ position });\n    }\n  }\n\n  drawNext() {\n    const result = this.stringsIterator.next();\n\n    if (result.done) {\n      this.afterDraw();\n    } else {\n      this.position++;\n    }\n\n    return result;\n  }\n\n  generateStrings() {\n    throw new Error('generateStrings method not defined!');\n  }\n\n  getStepCount() {\n    throw new Error(\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\n    );\n  }\n}\n\nfunction flattenConfig(configControls) {\n  return configControls.reduce(\n    (config, { key, defaultValue, children }) =>\n      children\n        ? {\n            ...config,\n            ...flattenConfig(children),\n          }\n        : {\n            ...config,\n            [key]: defaultValue,\n          },\n    {}\n  );\n}\n\nexport default StringArt;\n","import Nails from '../Nails.js';\nimport { PI2 } from './math_utils.js';\n\nexport default class Circle {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  getPoint(index = 0) {\n    const realIndex = this.getNailIndex(index);\n\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const point = [\n      this.center[0] +\n        Math.sin(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n      this.center[1] +\n        Math.cos(realIndex * this.indexAngle + this.rotationAngle) *\n          this.radius,\n    ];\n\n    this.points.set(index, point);\n    return point;\n  }\n\n  getNailIndex(index = 0) {\n    let realIndex = this.isReverse ? this.config.n - 1 - index : index;\n    if (realIndex > this.config.n - 1) {\n      realIndex = realIndex % this.config.n;\n    }\n    return realIndex;\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const {\n        n,\n        size,\n        margin = 0,\n        rotation = 0,\n        center: configCenter,\n        radius,\n        reverse = false,\n      } = config;\n      const center = configCenter ?? size.map(v => v / 2);\n      const props = {\n        center,\n        radius: radius ?? Math.min(...center) - margin,\n        indexAngle: PI2 / n,\n        rotationAngle: -PI2 * rotation,\n        isReverse: reverse,\n      };\n      this.config = config;\n      this.serializedConfig = serializedConfig;\n      Object.assign(this, props);\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n    }\n  }\n\n  _serializeConfig({\n    n,\n    size,\n    margin = 0,\n    rotation = 0,\n    center,\n    radius,\n    reverse = false,\n  }) {\n    return [\n      size?.join(','),\n      center?.join(','),\n      radius,\n      margin,\n      n,\n      rotation,\n      reverse,\n    ].join('_');\n  }\n\n  /**\n   * Given a Nails instance, uses it to draw the nails of this Circle\n   * @param {Nails} nails\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\n   */\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\n    for (let i = 0; i < this.config.n; i++) {\n      nails.addNail({\n        point: this.getPoint(i),\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\n      });\n    }\n  }\n\n  static rotationConfig = Object.freeze({\n    key: 'rotation',\n    label: 'Rotation',\n    defaultValue: 0,\n    type: 'range',\n    attr: {\n      min: 0,\n      max: 1 + 1 / 360,\n      step: 1 / 360,\n    },\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\n  });\n\n  static nailsConfig = Object.freeze({\n    key: 'n',\n    label: 'Number of nails',\n    defaultValue: 144,\n    type: 'range',\n    attr: {\n      min: 3,\n      max: 300,\n      step: 1,\n    },\n  });\n}\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    colorCount: 7,\n    color: '#ffbb29',\n    multicolorRange: '21',\n    multicolorStart: 32,\n    multicolorByLightness: true,\n    minLightness: 36,\n    maxLightness: 98,\n  },\n});\n\nexport default class Spiral extends StringArt {\n  id = 'spiral';\n  name = 'Spiral';\n  link =\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'repetition',\n      label: 'Repetition',\n      defaultValue: 5,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'innerLength',\n      label: 'Spiral thickness',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 0.75,\n    },\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, layers, margin, colorCount, repetition } = this.config;\n    this.layersCount = layers ?? 1;\n    this.realRepetition = repetition * 2 - 1;\n\n    const circleConfig = {\n      size: this.size,\n      n,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers ?? colorCount,\n    });\n\n    if (colorCount) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount,\n      });\n    }\n  }\n\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\n    const { innerLength, n } = this.config;\n\n    let currentInnerLength = Math.round(innerLength * n);\n    let repetitionCount = 0;\n    this.ctx.strokeStyle = color;\n    let prevPointIndex = shift;\n    let prevPoint = this.circle.getPoint(prevPointIndex);\n    let isPrevPoint = false;\n\n    for (let i = 0; currentInnerLength > 0; i++) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(i);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      prevPointIndex = isPrevPoint\n        ? prevPointIndex - currentInnerLength + 1\n        : prevPointIndex + currentInnerLength;\n\n      if (repetitionCount === this.realRepetition) {\n        currentInnerLength--;\n        repetitionCount = 0;\n        prevPointIndex++;\n      } else {\n        repetitionCount++;\n      }\n\n      prevPoint = this.circle.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n\n      this.ctx.stroke();\n\n      yield i;\n      isPrevPoint = !isPrevPoint;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawSpiral({\n      color: this.color.getColor(0),\n    });\n  }\n\n  getStepCount() {\n    const { innerLength, repetition, n, layers = 1 } = this.config;\n    return Math.round(layers * n * (innerLength * 2) * repetition);\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 60,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { PI2 } from '../helpers/math_utils.js';\n\nclass Spirals extends StringArt {\n  name = 'Spirals';\n  id = 'spirals';\n  link =\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\n  controls = [\n    {\n      key: 'radiusIncrease',\n      label: 'Radius change',\n      defaultValue: 5.7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 0.1 },\n    },\n    {\n      key: 'angleStep',\n      label: 'Angle step',\n      defaultValue: 0.45,\n      type: 'range',\n      attr: { min: 0, max: 1, step: 0.01 },\n    },\n    {\n      key: 'nSpirals',\n      label: 'Number of spirals',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 330 / 360,\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        colorCount: 4,\n        color: '#00d5ff',\n        multicolorRange: 1,\n        multicolorStart: 190,\n        multicolorByLightness: true,\n        minLightness: 50,\n        maxLightness: 88,\n        reverseColors: true,\n      },\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const {\n      nSpirals,\n      rotation,\n      margin,\n      radiusIncrease,\n      angleStep,\n      colorCount,\n    } = this.config;\n\n    this.spiralRotations = new Array(nSpirals)\n      .fill(null)\n      .map((_, i) => (i * PI2) / nSpirals);\n    this.rotationAngle = -PI2 * rotation;\n    const maxRadius = Math.min(...this.size) / 2 - margin;\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\n    this.angleIncrease = angleStep / (maxRadius / 50);\n    this.color = new Color(this.config);\n    this.colorMap = this.color.getColorMap({\n      stepCount: this.getStepCount(),\n      colorCount,\n    });\n  }\n\n  *generatePoints() {\n    const { nSpirals } = this.config;\n\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\n      for (let s = 0; s < nSpirals; s++) {\n        const point = this.getPoint(s, i);\n        yield { point, nailNumber: `${s}_${i}` };\n      }\n    }\n  }\n\n  getPoint(spiralIndex, index) {\n    const [centerx, centery] = this.center;\n    const { radiusIncrease } = this.config;\n\n    const angle =\n      this.rotationAngle +\n      this.angleIncrease * index +\n      this.spiralRotations[spiralIndex];\n    const radius = index * radiusIncrease;\n\n    return [\n      centerx + radius * Math.sin(angle),\n      centery + radius * Math.cos(angle),\n    ];\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n    let index = 0;\n    this.ctx.beginPath();\n    this.ctx.moveTo(...this.center);\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    let lastPoint;\n\n    for (const { point } of points) {\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      if (lastPoint) {\n        this.ctx.moveTo(...lastPoint);\n        this.ctx.lineTo(...point);\n      }\n      lastPoint = point;\n      this.ctx.stroke();\n      yield index++;\n    }\n  }\n\n  getStepCount() {\n    const { nSpirals, radiusIncrease, margin } = this.config;\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\n    const n = Math.floor(maxRadius / radiusIncrease);\n    return n * nSpirals;\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, nailNumber } of points) {\n      this.nails.addNail({ point, number: nailNumber });\n    }\n  }\n\n  static thumbnailConfig = {\n    radiusIncrease: 1.4,\n    angleStep: 0.11,\n  };\n}\n\nexport default Spirals;\n","import Color from '../helpers/Color.js';\nimport StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Mandala extends StringArt {\n  name = 'Mandala';\n  id = 'mandala';\n  link = 'https://www.youtube.com/watch?v=qhbuKbxJsk8';\n  linkText = 'Learn';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails',\n      defaultValue: 180,\n      type: 'range',\n      attr: { min: 3, max: 240, step: 1 },\n    },\n    {\n      key: 'base',\n      label: 'Multiplication',\n      defaultValue: 2,\n      type: 'range',\n      attr: { min: 2, max: 99, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 7,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    Circle.rotationConfig,\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 180,\n        multicolorStart: 256,\n        color: '#ff4d00',\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, layers } = this.config;\n      const extraNails = n % layers;\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { layers, rotation, margin, layerFill, base, reverse } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: this.n,\n      margin,\n      rotation,\n      reverse,\n    };\n    this.stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      colorCount: layers,\n    });\n\n    this.layerShift = Math.floor(this.n / layers);\n    this.base = base;\n  }\n\n  *drawTimesTable({ shift = 0, color = '#f00', time }) {\n    const n = this.n;\n\n    let point = this.circle.getPoint(shift);\n\n    for (let i = 1; i <= this.stringsPerLayer; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(...point);\n      point = this.circle.getPoint(i + shift);\n      this.ctx.lineTo(...point);\n      const toIndex = (i * this.base) % n;\n      this.ctx.lineTo(...this.circle.getPoint(toIndex + shift));\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n\n      yield {\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\n        index: time * n + i,\n      };\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n\n    for (let time = 0; time < layers; time++) {\n      const color = this.color.getColor(time);\n      yield* this.drawTimesTable({\n        time,\n        color,\n        shift: this.layerShift * time,\n      });\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { layers, layerFill } = this.config;\n    const stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\n    return (layers ?? 1) * stringsPerLayer;\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\n\nconst SIDES = ['left', 'bottom', 'right', 'top'];\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\n\nconst SIDES_ROTATION = {\n  left: 0,\n  bottom: Math.PI / 2,\n  right: Math.PI,\n  top: Math.PI * 1.5,\n};\n\nclass Eye extends StringArt {\n  name = 'Eye';\n  id = 'eye';\n  link =\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\n  controls = [\n    {\n      key: 'n',\n      label: 'Number of nails per side',\n      defaultValue: 82,\n      type: 'range',\n      attr: { min: 2, max: 200, step: 1 },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 13,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'angle',\n      label: 'Layer angle',\n      defaultValue: 30,\n      displayValue: ({ angle }) => `${angle}°`,\n      type: 'range',\n      attr: { min: 0, max: 45, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'color1',\n          label: 'String #1 color',\n          defaultValue: '#11e8bd',\n          type: 'color',\n        },\n        {\n          key: 'color2',\n          label: 'String #2 color',\n          defaultValue: '#6fff52',\n          type: 'color',\n        },\n        {\n          key: 'colorPerLayer',\n          label: 'Color per layer',\n          defaultValue: false,\n          type: 'checkbox',\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n\n    const { n, angle, layers, margin } = this.config;\n\n    this.maxSize = Math.min(...this.size) - 2 * margin;\n    this.nailSpacing = this.maxSize / (n - 1);\n    this.layerAngle = (angle * Math.PI) / 180;\n\n    this.layers = new Array(layers)\n      .fill(null)\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\n  }\n\n  // Sides: top, right, bottom, left\n  getPoint({ index, angle, layerStart, rotation }) {\n    const theta = angle + rotation;\n\n    const point = {\n      x: layerStart.x,\n      y: layerStart.y + this.nailSpacing * index,\n    };\n\n    const pivot = { x: this.center[0], y: this.center[1] };\n\n    const cosAngle = Math.cos(theta);\n    const sinAngle = Math.sin(theta);\n\n    const position = [\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\n    ];\n    return position;\n  }\n\n  *drawSide({\n    side,\n    color = '#ffffff',\n    angle,\n    size,\n    layerStart,\n    layerStringCount,\n  }) {\n    const sideIndex = SIDES.indexOf(side);\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\n    const rotation = SIDES_ROTATION[side];\n    const nextSideRotation = SIDES_ROTATION[nextSide];\n\n    const sideProps = { layerStringCount, size, layerStart, angle };\n\n    for (let i = 0; i <= layerStringCount; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(\n        ...this.getPoint({ side, index: i, rotation, ...sideProps })\n      );\n      this.ctx.lineTo(\n        ...this.getPoint({\n          side: nextSide,\n          index: i,\n          rotation: nextSideRotation,\n          ...sideProps,\n        })\n      );\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      yield i;\n    }\n  }\n\n  _getLayerProps(layerIndex) {\n    const colors = this._getLayerColors(layerIndex);\n    const layerAngle = this.layerAngle * layerIndex;\n    const layerSize =\n      this.maxSize /\n      Math.pow(\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\n        layerIndex\n      );\n    const layerStart = {\n      x: this.center[0] - layerSize / 2,\n      y: this.center[1] - layerSize / 2,\n    };\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\n\n    return {\n      colors,\n      layerAngle,\n      layerSize,\n      layerStart,\n      layerStringCount,\n    };\n  }\n\n  _getLayerColors(layerIndex) {\n    const { color1, color2, colorPerLayer } = this.config;\n    if (colorPerLayer) {\n      const layerColor = layerIndex % 2 ? color1 : color2;\n      return [layerColor, layerColor, layerColor, layerColor];\n    } else {\n      return [color2, color1, color2, color1];\n    }\n  }\n\n  *drawLayer(layerIndex) {\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\n      this.layers[layerIndex];\n\n    for (let i = 0; i < SIDES.length; i++) {\n      yield* this.drawSide({\n        color: colors[i],\n        side: SIDES_ORDER[i],\n        angle: layerAngle,\n        size: layerSize,\n        layerStart,\n        layerStringCount,\n      });\n    }\n  }\n\n  *generateStrings() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      yield* this.drawLayer(layer);\n    }\n  }\n\n  getStepCount() {\n    let count = 0;\n    const { layers, angle, n, margin } = this.config;\n    const layerAngle = (angle * Math.PI) / 180;\n    const maxSize =\n      Math.min(this.canvas.clientWidth, this.canvas.clientHeight) - 2 * margin;\n    const nailSpacing = maxSize / (n - 1);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const layerSize =\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\n    }\n\n    return count;\n  }\n\n  drawNails() {\n    const { layers } = this.config;\n    for (let layer = layers - 1; layer >= 0; layer--) {\n      const {\n        layerAngle: angle,\n        layerSize: size,\n        layerStart,\n        layerStringCount,\n      } = this.layers[layer];\n\n      for (let s = 0; s < SIDES.length; s++) {\n        const sideOrder = SIDES_ORDER[s];\n        const rotation = SIDES_ROTATION[sideOrder];\n\n        for (let i = 0; i <= layerStringCount; i++) {\n          const sideProps = { layerStringCount, size, layerStart, angle };\n          this.nails.addNail({\n            point: this.getPoint({\n              sideOrder,\n              index: i,\n              rotation,\n              ...sideProps,\n            }),\n            number: `${layer}_${s}_${i}`,\n          });\n        }\n      }\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 25,\n    layers: 7,\n  };\n}\n\nexport default Eye;\n","import { PI2 } from './math_utils.js';\n\nexport default class Polygon {\n  constructor(config) {\n    this.setConfig(config);\n  }\n\n  setConfig(config) {\n    const serializedConfig = this._serializeConfig(config);\n    if (serializedConfig !== this.serializedConfig) {\n      const { rotation = 0, sides: sideCount } = (this.config = config);\n\n      const sideAngle = PI2 / sideCount;\n\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\n        const angle = sideAngle * i + PI2 * rotation;\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\n\n        return {\n          cos: Math.cos(angle),\n          sin: Math.sin(angle),\n          center: {\n            cos: Math.cos(radiusAngle),\n            sin: Math.sin(radiusAngle),\n          },\n        };\n      });\n\n      Object.assign(this, {\n        sides,\n        sideCount,\n        sideAngle,\n      });\n\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n\n      Object.assign(this, this._getProps());\n\n      if (config.fitSize) {\n        Object.assign(this, this._getProps(this.getSizeAndCenter()));\n        this.points.clear();\n      }\n    }\n  }\n\n  getSizeAndCenter() {\n    const { size: configSize, margin } = this.config;\n\n    const boundingRect = this.getBoundingRect();\n    const scale = Math.min(\n      (configSize[0] - 2 * margin) / boundingRect.width,\n      (configSize[1] - 2 * margin) / boundingRect.height\n    );\n\n    const size = configSize.map(v => v * scale);\n    const center = [\n      this.center[0] -\n        (scale * (boundingRect.left - configSize[0] + boundingRect.right)) / 2,\n      this.center[1] -\n        (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) / 2,\n    ];\n\n    this.points.clear();\n    return { size, center };\n  }\n\n  _getProps(overrideConfig) {\n    const {\n      nailsSpacing,\n      size,\n      margin = 0,\n      center: configCenter,\n    } = Object.assign({}, this.config, overrideConfig);\n\n    const center = configCenter ?? this.config.size.map(v => v / 2);\n\n    const radius = Math.min(...size) / 2 - margin;\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\n    const start = [\n      radius * Math.sin(this.sideAngle / 2),\n      radius * Math.cos(this.sideAngle / 2),\n    ];\n    const nailsDistance = sideSize * nailsSpacing;\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\n    const radiusNailsDistance = radius / radiusNailsCount;\n\n    return {\n      nailsSpacing,\n      nailsPerSide: 1 / nailsSpacing,\n      center,\n      radius,\n      sideSize,\n      start,\n      nailsDistance,\n      radiusNailsCount,\n      radiusNailsDistance,\n    };\n  }\n\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\n      '_'\n    );\n  }\n\n  getSidePoint({ side, index }) {\n    const pointsMapIndex = [side, index].join('_');\n\n    if (this.points.has(pointsMapIndex)) {\n      return this.points.get(pointsMapIndex);\n    }\n\n    const startX = this.start[0] - index * this.nailsDistance;\n    const { cos, sin } = this.sides[side];\n\n    const point = [\n      cos * startX - sin * this.start[1] + this.center[0],\n      sin * startX + cos * this.start[1] + this.center[1],\n    ];\n\n    this.points.set(pointsMapIndex, point);\n    return point;\n  }\n\n  getCenterPoint({ side, index }) {\n    const radius = index * this.radiusNailsDistance;\n    const { sin, cos } = this.sides[side].center;\n\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\n  }\n\n  getBoundingRect() {\n    const points = this.sides.map((_, side) =>\n      this.getSidePoint({ side, index: 0 })\n    );\n    const firstPoint = points[0];\n\n    const boundingRect = points.slice(1).reduce(\n      (boundingRect, [x, y]) => ({\n        left: Math.min(boundingRect.left, x),\n        right: Math.max(boundingRect.right, x),\n        top: Math.min(boundingRect.top, y),\n        bottom: Math.max(boundingRect.bottom, y),\n      }),\n      {\n        left: firstPoint[0],\n        right: firstPoint[0],\n        top: firstPoint[1],\n        bottom: firstPoint[1],\n      }\n    );\n\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\n    boundingRect.width = boundingRect.right - boundingRect.left;\n    Object.freeze(boundingRect);\n    return boundingRect;\n  }\n\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\n    for (let side = 0; side < this.sideCount; side++) {\n      const sideIndexStart = side * this.nailsPerSide;\n\n      if (drawSides) {\n        for (let index = 0; index < this.nailsPerSide; index++) {\n          nails.addNail({\n            point: this.getSidePoint({ side, index }),\n            number: sideIndexStart + index,\n          });\n        }\n      }\n\n      if (drawCenter) {\n        for (let index = 0; index < this.radiusNailsCount; index++) {\n          nails.addNail({\n            point: this.getCenterPoint({ side, index }),\n            number: `${side}_${index}`,\n          });\n        }\n      }\n    }\n  }\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ff0000',\n    multicolorRange: 1,\n    multicolorStart: 0,\n    multicolorByLightness: true,\n    minLightness: 20,\n    maxLightness: 50,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class PolygonPattern extends StringArt {\n  name = 'Polygon';\n  id = 'polygon';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 5,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'bezier',\n      label: 'Bezier',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 4,\n        step: 1,\n      },\n      show: ({ sides }) => sides > 4,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#5c5c5c',\n    nailRadius: 1,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const polygonConfig = {\n      sides,\n      rotation,\n      margin,\n      size,\n      nailsSpacing: 1 / n,\n      fitSize: true,\n    };\n\n    if (this.polygon) {\n      this.polygon.setConfig(polygonConfig);\n    } else {\n      this.polygon = new Polygon(polygonConfig);\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: sides,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: sides,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier } = this.config;\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let side = 0; side < sides; side++) {\n      const nextSide = (side + limitedBezier) % sides;\n\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\n        if (this.colorMap) {\n          color = this.colorMap.get(step);\n        }\n\n        this.ctx.strokeStyle = color;\n        this.ctx.beginPath();\n        this.ctx.moveTo(...this.polygon.getSidePoint({ side, index }));\n        this.ctx.lineTo(\n          ...this.polygon.getSidePoint({ side: nextSide, index })\n        );\n\n        this.ctx.stroke();\n\n        yield;\n        step++;\n      }\n    }\n  }\n\n  getStepCount() {\n    const { sides, n } = this.config;\n    return sides * n;\n  }\n\n  drawNails() {\n    this.polygon.drawNails(this.nails);\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Polygon from '../helpers/Polygon.js';\nimport Color from '../helpers/Color.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#29f1ff',\n    multicolorRange: 264,\n    multicolorStart: 53,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n  },\n  exclude: ['colorCount'],\n});\n\nexport default class Flower extends StringArt {\n  name = 'Flower';\n  id = 'flower';\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 10,\n        step: 1,\n      },\n    },\n    {\n      key: 'n',\n      label: 'Nails per side',\n      defaultValue: 60,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 100,\n        step: 1,\n      },\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 2,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 10,\n        step: 1,\n      },\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  defaultValues = {\n    nailsColor: '#29f1ff',\n    nailRadius: 1,\n    stringWidth: 0.5,\n  };\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\n    const size = this.getSize();\n\n    const layerAngleShift = 1 / (sides * layers);\n\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\n      const polygonConfig = {\n        sides,\n        rotation: rotation + i * layerAngleShift,\n        margin,\n        size,\n        nailsSpacing: 1 / n,\n      };\n\n      return new Polygon(polygonConfig);\n    });\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount: layers,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.getStepCount(),\n        colorCount: layers,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  *generateStrings() {\n    const { sides, bezier, layers } = this.config;\n\n    let step = 0;\n    let color = this.color.getColor(0);\n\n    for (let layer = 0; layer < layers; layer++) {\n      const polygon = this.polygons[layer];\n\n      for (let side = 0; side < sides; side++) {\n        const leftSide = side === sides - 1 ? 0 : side + 1;\n\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\n          if (this.colorMap) {\n            color = this.colorMap.get(step);\n          }\n\n          const centerIndexes = this.getCenterIndexes({\n            polygon,\n            sideIndex: index,\n          });\n\n          this.ctx.strokeStyle = color;\n          this.ctx.beginPath();\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: side,\n              index: centerIndexes[0],\n            })\n          );\n          this.ctx.moveTo(...polygon.getSidePoint({ side, index }));\n          this.ctx.lineTo(\n            ...polygon.getCenterPoint({\n              side: leftSide,\n              index: centerIndexes[1],\n            })\n          );\n\n          this.ctx.stroke();\n\n          yield;\n          step++;\n        }\n      }\n    }\n  }\n\n  getCenterIndexes({ polygon, sideIndex }) {\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\n\n    return [\n      sideIndex < extraNailCount\n        ? -extraNailCount + sideIndex\n        : sideIndex - extraNailCount,\n      polygon.radiusNailsCount - sideIndex,\n    ];\n  }\n\n  getStepCount() {\n    const { sides, n, layers } = this.config;\n    return sides * (n + 1) * layers;\n  }\n\n  drawNails() {\n    this.polygons.forEach(polygon =>\n      polygon.drawNails(this.nails, { drawCenter: true })\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 20,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\nimport Color from '../helpers/Color.js';\nimport { gcd, PI2 } from '../helpers/math_utils.js';\n\nconst COLOR_CONFIG = Color.getConfig({\n  defaults: {\n    isMultiColor: true,\n    color: '#ffffff',\n    multicolorRange: 133,\n    multicolorStart: 239,\n    multicolorByLightness: false,\n    minLightness: 30,\n    maxLightness: 70,\n    colorCount: 4,\n  },\n});\n\nexport default class MaurerRose extends StringArt {\n  name = 'Maurer Rose';\n  id = 'maurer_rose';\n  link = 'https://blog.glitch.land/en/posts/maurer-rose/';\n  linkText = 'Learn';\n  controls = [\n    {\n      key: 'n',\n      label: 'N',\n      defaultValue: 4,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 12,\n        step: 1,\n      },\n    },\n    {\n      key: 'maxSteps',\n      label: 'Max steps',\n      defaultValue: 512,\n      type: 'range',\n      attr: {\n        min: 3,\n        max: 720,\n        step: 1,\n      },\n    },\n    {\n      key: 'angle',\n      label: 'Angle',\n      defaultValue: 341,\n      type: 'range',\n      attr: {\n        min: 1,\n        max: 720,\n        step: 1,\n      },\n      displayValue: ({ angle }) => `${angle}°`,\n    },\n    Circle.rotationConfig,\n    COLOR_CONFIG,\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { isMultiColor, colorCount } = this.config;\n    const structureProps = this.getStructureProps();\n    const structureChanged = Object.entries(structureProps).some(\n      ([key, value]) =>\n        key === 'currentSize'\n          ? value.join(',') !== this[key].join(',')\n          : value !== this[key]\n    );\n\n    if (structureChanged) {\n      if (this.points) {\n        this.points.clear();\n      } else {\n        this.points = new Map();\n      }\n      Object.assign(this, structureProps);\n      this.stepCount = null;\n      this.stepCount = this.getStepCount();\n    }\n\n    this.color = new Color({\n      ...this.config,\n      isMultiColor,\n      colorCount,\n    });\n\n    if (isMultiColor) {\n      this.colorMap = this.color.getColorMap({\n        stepCount: this.stepCount,\n        colorCount,\n      });\n    } else {\n      this.colorMap = null;\n    }\n  }\n\n  getStructureProps() {\n    const { n, angle, rotation, maxSteps } = this.config;\n    const size = this.getSize();\n\n    return {\n      n,\n      angleRadians: (PI2 * angle) / maxSteps,\n      radius: Math.min(...size) / 2,\n      currentSize: size,\n      rotationAngle: -Math.PI * 2 * rotation,\n    };\n  }\n\n  getPoint(index) {\n    if (this.points.has(index)) {\n      return this.points.get(index);\n    }\n\n    const k = index * this.angleRadians;\n    const r = this.radius * Math.sin(this.n * k);\n\n    const point = [\n      this.center[0] - r * Math.cos(k - this.rotationAngle),\n      this.center[1] - r * Math.sin(k - this.rotationAngle),\n    ];\n    this.points.set(index, point);\n    return point;\n  }\n\n  *generatePoints() {\n    const count = this.stepCount;\n\n    for (let i = 0; i < count + 1; i++) {\n      yield { point: this.getPoint(i), index: i };\n    }\n  }\n\n  *generateStrings() {\n    const points = this.generatePoints();\n\n    let prevPoint;\n\n    this.ctx.strokeStyle = this.color.getColor(0);\n\n    for (const { point, index } of points) {\n      if (!prevPoint) {\n        prevPoint = point;\n        continue;\n      }\n\n      if (this.colorMap) {\n        const stepColor = this.colorMap.get(index);\n        if (stepColor) {\n          this.ctx.strokeStyle = stepColor;\n        }\n      }\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(...prevPoint);\n      prevPoint = point;\n      this.ctx.lineTo(...point);\n      this.ctx.stroke();\n\n      yield;\n    }\n  }\n\n  getStepCount() {\n    if (this.stepCount) {\n      return this.stepCount;\n    }\n\n    const { maxSteps, angle, n } = this.config;\n    const angleGcd = gcd(maxSteps, angle);\n\n    let steps = maxSteps / angleGcd;\n    if (!(steps % 2) && n % 2) {\n      steps /= 2;\n    }\n    return Math.round(steps);\n  }\n\n  drawNails() {\n    const points = this.generatePoints();\n    for (const { point, index } of points) {\n      this.nails.addNail({ point, number: index });\n    }\n  }\n\n  static thumbnailConfig = {\n    maxSteps: 160,\n    angle: 213,\n  };\n}\n","import Spiral from './string_art_types/Spiral.js';\nimport Spirals from './string_art_types/Spirals.js';\nimport Wave from './string_art_types/Wave.js';\nimport Eye from './string_art_types/Eye.js';\nimport Mandala from './string_art_types/Mandala.js';\nimport Star from './string_art_types/Star.js';\nimport Assymetry from './string_art_types/Assymetry.js';\nimport Freestyle from './string_art_types/Freestyle.js';\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\nimport Flower from './string_art_types/Flower.js';\nimport MaurerRose from './string_art_types/MaurerRose.js';\n\nconst patternTypes = [\n  Star,\n  Assymetry,\n  Mandala,\n  Spiral,\n  Spirals,\n  Wave,\n  Eye,\n  Freestyle,\n  PolygonPattern,\n  Flower,\n  MaurerRose,\n];\n\nexport default patternTypes;\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Star extends StringArt {\n  name = 'Star';\n  id = 'star';\n  link =\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\n  controls = [\n    {\n      key: 'sides',\n      label: 'Sides',\n      defaultValue: 3,\n      type: 'range',\n      attr: { min: 3, max: 20, step: 1 },\n    },\n    {\n      key: 'sideNails',\n      label: 'Nails per side',\n      defaultValue: 40,\n      type: 'range',\n      attr: { min: 1, max: 200, step: 1 },\n    },\n    {\n      key: 'ringSize',\n      label: 'Outer ring size',\n      defaultValue: 0.1,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 0.5,\n        step: ({ config: { sideNails, sides } }) => 1 / (sideNails * sides),\n      },\n      displayValue: ({ sideNails, sides, ringSize }) =>\n        Math.floor(ringSize * sideNails * sides),\n    },\n    Circle.rotationConfig,\n    {\n      key: 'colorGroup',\n      label: 'Color',\n      type: 'group',\n      children: [\n        {\n          key: 'innerColor',\n          label: 'Star color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n        {\n          key: 'outterColor',\n          label: 'Outter color',\n          defaultValue: '#2a82c6',\n          type: 'color',\n        },\n        {\n          key: 'ringColor',\n          label: 'Ring color',\n          defaultValue: '#2ec0ff',\n          type: 'color',\n        },\n      ],\n    },\n  ];\n\n  get n() {\n    if (!this._n) {\n      const { n, sides } = this.config;\n      const extraNails = n % sides;\n      this._n = n - extraNails;\n    }\n\n    return this._n;\n  }\n\n  setUpDraw() {\n    this._n = null;\n    super.setUpDraw();\n\n    const { sides, rotation, sideNails, margin = 0, ringSize } = this.config;\n    const circleConfig = {\n      size: this.size,\n      n: sideNails * sides,\n      margin,\n      rotation,\n    };\n\n    if (this.circle) {\n      this.circle.setConfig(circleConfig);\n    } else {\n      this.circle = new Circle(circleConfig);\n    }\n\n    this.sideAngle = (Math.PI * 2) / sides;\n    this.nailSpacing = this.circle.radius / sideNails;\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\n\n    if ((this.renderRing = ringSize > 0)) {\n      this.ringDistance = Math.floor(ringSize * circleConfig.n);\n    }\n\n    this.sides = new Array(sides).fill(null).map((_, side) => {\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\n      const circlePointsStart = side * sideNails;\n\n      return {\n        sinSideAngle: Math.sin(sideAngle),\n        cosSideAngle: Math.cos(sideAngle),\n        circlePointsStart,\n        circlePointsEnd: circlePointsStart + sideNails,\n      };\n    });\n  }\n\n  getStarPoint({ side, sideIndex }) {\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\n    const [centerX, centerY] = this.circle.center;\n\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\n  }\n\n  getArcPoint({ side, sideIndex }) {\n    return this.circle.getPoint(side * this.config.sideNails + sideIndex);\n  }\n\n  *generateStarPoints({ reverseOrder = false } = {}) {\n    const { sides, sideNails } = this.config;\n\n    for (let side = 0; side < sides; side++) {\n      const prevSide = side === 0 ? sides - 1 : side - 1;\n      for (let i = 0; i < sideNails; i++) {\n        const sideIndex = reverseOrder ? sideNails - i : i;\n        yield {\n          side,\n          prevSide,\n          sideIndex,\n          point: this.getStarPoint({ side, sideIndex }),\n        };\n      }\n    }\n  }\n\n  *drawStar() {\n    const { innerColor, sideNails, sides } = this.config;\n\n    this.ctx.strokeStyle = innerColor;\n    let alternate = false;\n    const linesPerRound = sides % 2 ? sides * 2 : sides;\n    const rounds = sides % 2 ? Math.floor(sideNails / 2) : sideNails;\n\n    let prevPointIndex = 0;\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: prevPointIndex });\n\n    for (let round = 0; round <= rounds; round++) {\n      let side = 0;\n\n      const linesPerThisRound = linesPerRound - (round === rounds ? sides : 0);\n\n      for (let i = 0; i < linesPerThisRound; i++) {\n        this.ctx.beginPath();\n\n        this.ctx.moveTo(...prevPoint);\n        side = side !== sides - 1 ? side + 1 : 0;\n        alternate = !alternate;\n        prevPointIndex = alternate ? sideNails - round : round;\n        prevPoint = this.getStarPoint({ side, sideIndex: prevPointIndex });\n        this.ctx.lineTo(...prevPoint);\n        this.ctx.stroke();\n        yield;\n      }\n\n      prevPointIndex = alternate ? prevPointIndex - 1 : prevPointIndex + 1;\n      prevPoint = this.getStarPoint({ side: 0, sideIndex: prevPointIndex });\n      this.ctx.lineTo(...prevPoint);\n    }\n  }\n\n  *drawCircle() {\n    const { outterColor, sides, sideNails } = this.config;\n    this.ctx.strokeStyle = outterColor;\n\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: 0 });\n    let alternate = false;\n    let isStar = false;\n\n    const rounds = sides % 2 ? Math.ceil(sideNails / 2) : sideNails;\n    let side = 0;\n    const linesPerRound = sides % 2 ? sides * 4 : sides * 2;\n\n    for (let round = 0; round <= rounds; round++) {\n      const linesPerThisRound =\n        linesPerRound - (round === rounds ? sides * 2 : 0);\n\n      for (let i = 0; i < linesPerThisRound; i++) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(...prevPoint);\n        const pointPosition = {\n          side,\n          sideIndex: alternate ? sideNails - round : round,\n        };\n        prevPoint = isStar\n          ? this.getStarPoint(pointPosition)\n          : this.getArcPoint(pointPosition);\n        this.ctx.lineTo(...prevPoint);\n        this.ctx.stroke();\n        yield;\n        isStar = !isStar;\n\n        if (isStar) {\n          side = side !== sides - 1 ? side + 1 : 0;\n          alternate = !alternate;\n        }\n      }\n      prevPoint = this.getStarPoint({ side: 0, sideIndex: round + 1 });\n    }\n  }\n\n  *drawRing() {\n    if (!this.renderRing) {\n      return;\n    }\n\n    const { n } = this.circle.config;\n    const { ringColor } = this.config;\n\n    let prevPoint;\n    let prevPointIndex = 0;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = ringColor;\n    for (let i = 0; i < n; i++) {\n      this.ctx.beginPath();\n      if (!prevPoint) {\n        prevPoint = this.circle.getPoint(0);\n      }\n\n      this.ctx.moveTo(...prevPoint);\n      prevPointIndex = isPrevSide ? i : prevPointIndex + this.ringDistance;\n      prevPoint = this.circle.getPoint(prevPointIndex);\n\n      this.ctx.lineTo(...prevPoint);\n\n      if (i < n - 1) {\n        prevPointIndex++;\n        prevPoint = this.circle.getPoint(prevPointIndex);\n        this.ctx.lineTo(...prevPoint);\n      }\n\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n  }\n\n  *generateStrings() {\n    yield* this.drawCircle();\n    yield* this.drawRing();\n    yield* this.drawStar();\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails);\n\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\n      this.nails.addNail({\n        point,\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\n      });\n    }\n\n    this.circle.drawNails(this.nails);\n  }\n\n  getStepCount() {\n    const { sides, sideNails, ringSize } = this.config;\n    const ringCount = ringSize ? sideNails * sides : 0;\n    const starAndCircleCount = 3 * sides * (sideNails + (sides % 2 ? 1 : 0));\n\n    return starAndCircleCount + ringCount;\n  }\n\n  static thumbnailConfig = {\n    sideNails: 18,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Assymetry extends StringArt {\n  name = 'Assymetry';\n  id = 'assymetry';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    Circle.nailsConfig,\n    Circle.rotationConfig,\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size1',\n              label: 'Size',\n              defaultValue: 0.25,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size1, n }) => Math.round(n * size1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'end1',\n              label: 'End Position',\n              defaultValue: 1,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end1, n }) => Math.round(n * end1),\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'color1',\n              label: 'Color',\n              defaultValue: '#a94fb0',\n              type: 'color',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size2',\n              label: 'Size',\n              defaultValue: 0.125,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size2, n }) => Math.round(n * size2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'end2',\n              label: 'End Position',\n              defaultValue: 0.888,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'color2',\n              label: 'Color',\n              defaultValue: '#ec6ad0',\n              type: 'color',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'size3',\n              label: 'Size',\n              defaultValue: 0,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 0.5,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ size3, n }) => Math.round(n * size3),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'end3',\n              label: 'End Position',\n              defaultValue: 0.826,\n              type: 'range',\n              attr: {\n                min: 0,\n                max: 1,\n                step: ({ config: { n } }) => 1 / n,\n              },\n              displayValue: ({ end2, n }) => Math.round(n * end2),\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'color3',\n              label: 'Color',\n              defaultValue: '#f08ad5',\n              type: 'color',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: true,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { rotation, n, margin = 0 } = this.config;\n    const size = this.getSize();\n\n    const circleConfig = {\n      size,\n      n,\n      margin,\n      rotation: rotation - 0.25,\n    };\n\n    let circle;\n    if (this.circle) {\n      circle = this.circle;\n      this.circle.setConfig(circleConfig);\n    } else {\n      circle = new Circle(circleConfig);\n    }\n\n    let lineSpacing = circle.indexAngle * circle.radius;\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\n    lineSpacing +=\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\n    const firstCirclePoint = circle.getPoint(0);\n    const totalNailCount = lineNailCount + n;\n    const totalIndexCount = totalNailCount + lineNailCount;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    return {\n      circle,\n      lineSpacing,\n      lineNailCount,\n      firstCirclePoint,\n      layers,\n      totalNailCount,\n      totalIndexCount,\n    };\n\n    function getLayer(layerIndex) {\n      const size =\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\n      return {\n        size,\n        endIndex:\n          Math.round(\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\n          ) - size,\n        color: this.config['color' + layerIndex],\n        enable: this.config['show' + layerIndex],\n        isReverse: this.config['reverse' + layerIndex],\n      };\n    }\n  }\n\n  /**\n   * Returns the position of a point on the line\n   * @param {index of the point in the circle, 0 is the center} index\n   */\n  getPoint(index) {\n    if (index < this.lineNailCount || index > this.totalNailCount) {\n      const linePosition =\n        index < this.lineNailCount\n          ? this.lineNailCount - index\n          : index - this.totalNailCount;\n\n      const indexLength = linePosition * this.lineSpacing;\n      return [\n        this.firstCirclePoint[0] -\n          indexLength * Math.sin(this.circle.rotationAngle),\n        this.firstCirclePoint[1] -\n          indexLength * Math.cos(this.circle.rotationAngle),\n      ];\n    } else {\n      const circleIndex = index - this.lineNailCount;\n      return this.circle.getPoint(circleIndex);\n    }\n  }\n\n  *drawCircle({ endIndex, color, isReverse, size }) {\n    let prevPoint;\n    let prevPointIndex;\n    let isPrevSide = false;\n    this.ctx.strokeStyle = color;\n    const self = this;\n    const advance = isReverse ? -1 : 1;\n\n    for (let index = 0; index <= endIndex; index++) {\n      this.ctx.beginPath();\n\n      if (prevPoint) {\n        this.ctx.moveTo(...prevPoint);\n        this.ctx.lineTo(...this.getPoint(prevPointIndex + advance));\n      } else {\n        this.ctx.moveTo(...this.getPoint(getPointIndex(index)));\n      }\n\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\n      prevPoint = this.getPoint(prevPointIndex);\n      this.ctx.lineTo(...prevPoint);\n      this.ctx.stroke();\n\n      yield;\n\n      isPrevSide = !isPrevSide;\n    }\n\n    function getPointIndex(index) {\n      return isReverse ? self.totalIndexCount - index : index;\n    }\n  }\n\n  *generateStrings() {\n    for (const layer of this.layers) {\n      yield* this.drawCircle(layer);\n    }\n  }\n\n  drawNails() {\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\n\n    for (let i = 0; i < this.lineNailCount; i++) {\n      this.nails.addNail({ point: this.getPoint(i), number: i });\n    }\n  }\n\n  getStepCount() {\n    const { layers } = this.getSetUp();\n    return layers.reduce(\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\n      0\n    );\n  }\n\n  static thumbnailConfig = {\n    n: 50,\n  };\n}\n","import Color from '../helpers/Color.js';\nimport Circle from '../helpers/Circle.js';\nimport Mandala from './Mandala.js';\n\nexport default class Wave extends Mandala {\n  id = 'wave';\n  name = 'Wave';\n  link =\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\n  controls = [\n    {\n      ...Circle.nailsConfig,\n      defaultValue: 200,\n    },\n    {\n      key: 'layerFill',\n      label: 'Layer fill',\n      defaultValue: 0.5,\n      type: 'range',\n      attr: {\n        min: ({ config: { n } }) => 1 / n,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerFill }) => Math.floor(100 * layerFill) + '%',\n    },\n    {\n      ...Circle.rotationConfig,\n      defaultValue: 176 / 360,\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      defaultValue: 11,\n      type: 'range',\n      attr: { min: 1, max: 20, step: 1 },\n    },\n    {\n      key: 'layerSpread',\n      label: 'Layer spread',\n      defaultValue: 15 / 200,\n      type: 'range',\n      attr: {\n        min: 0,\n        max: 1,\n        step: ({ config: { n } }) => 1 / n,\n      },\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\n    },\n    {\n      key: 'reverse',\n      label: 'Reverse',\n      defaultValue: true,\n      type: 'checkbox',\n    },\n    Color.getConfig({\n      defaults: {\n        isMultiColor: true,\n        multicolorRange: 216,\n        multicolorStart: 263,\n        color: '#ffffff',\n        multicolorByLightness: true,\n        minLightness: 10,\n        maxLightness: 90,\n      },\n      exclude: ['colorCount'],\n    }),\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    const { n, layerSpread } = this.config;\n    this.layerShift = Math.round(n * layerSpread);\n    this.base = 2;\n  }\n\n  *generateStrings() {\n    const {layers, reverse} = this.config;\n\n    for (let layer = 0; layer < layers; layer++) {\n      yield* this.drawTimesTable({\n        color: this.color.getColor(layer),\n        shift: this.layerShift * (reverse ? 1 : -1) * layer,\n        time: layer,\n      });\n    }\n  }\n\n  static thumbnailConfig = {\n    n: 70,\n  };\n}\n","import StringArt from '../StringArt.js';\nimport Circle from '../helpers/Circle.js';\n\nexport default class Freestyle extends StringArt {\n  name = 'Freestyle';\n  id = 'freestyle';\n  link =\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\n  controls = [\n    {\n      key: 'n',\n      label: 'Circle nails',\n      defaultValue: 80,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'minNailDistance',\n      label: 'Min nail distance',\n      defaultValue: 20,\n      type: 'range',\n      attr: { min: 1, max: 300, step: 1 },\n    },\n    {\n      key: 'color',\n      label: 'Color',\n      defaultValue: '#ec6ad0',\n      type: 'color',\n    },\n    {\n      key: 'layers',\n      label: 'Layers',\n      type: 'group',\n      children: [\n        {\n          key: 'layer1',\n          label: 'Layer 1',\n          type: 'group',\n          children: [\n            {\n              key: 'show1',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius1',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'x1',\n              label: 'Position X',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'y1',\n              label: 'Position Y',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show1 }) => show1,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation1',\n              show: ({ show1 }) => show1,\n            },\n            {\n              key: 'reverse1',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show1 }) => show1,\n            },\n          ],\n        },\n        {\n          key: 'layer2',\n          label: 'Layer 2',\n          type: 'group',\n          children: [\n            {\n              key: 'show2',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius2',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'x2',\n              label: 'Position X',\n              defaultValue: 0,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'y2',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show2 }) => show2,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation2',\n              show: ({ show2 }) => show2,\n            },\n            {\n              key: 'reverse2',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show2 }) => show2,\n            },\n          ],\n        },\n        {\n          key: 'layer3',\n          label: 'Layer 3',\n          type: 'group',\n          children: [\n            {\n              key: 'show3',\n              label: 'Enable',\n              defaultValue: true,\n              type: 'checkbox',\n            },\n            {\n              key: 'radius3',\n              label: 'Radius',\n              defaultValue: 0.5,\n              type: 'range',\n              attr: { min: 0.01, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'x3',\n              label: 'Position X',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'y3',\n              label: 'Position Y',\n              defaultValue: 1,\n              type: 'range',\n              attr: { min: 0, max: 1, step: 0.01 },\n              show: ({ show3 }) => show3,\n            },\n            {\n              ...Circle.rotationConfig,\n              key: 'rotation3',\n              show: ({ show3 }) => show3,\n            },\n            {\n              key: 'reverse3',\n              label: 'Reverse',\n              defaultValue: false,\n              type: 'checkbox',\n              show: ({ show3 }) => show3,\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  setUpDraw() {\n    super.setUpDraw();\n    Object.assign(this, this.getSetUp());\n  }\n\n  getSetUp() {\n    const { n, margin = 0, minNailDistance } = this.config;\n    const size = this.getSize();\n\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\n    const layers = new Array(3)\n      .fill(null)\n      .map((_, i) => getLayer.call(this, i + 1))\n      .filter(({ enable }) => enable);\n\n    const maxShapeNailsCount = Math.max(\n      ...layers.map(({ circle }) => circle.config.n)\n    );\n\n    return {\n      layers,\n      maxShapeNailsCount,\n    };\n\n    function getLayer(layerIndex) {\n      const prop = prop => this.config[prop + layerIndex];\n\n      const props = {\n        enable: prop('show'),\n        isReverse: prop('reverse'),\n        position: [prop('x'), prop('y')],\n        radius: maxRadius * prop('radius'),\n        rotation: prop('rotation'),\n      };\n\n      const circumsference = Math.PI * 2 * props.radius;\n      const circleNails = Math.min(\n        n,\n        Math.floor(circumsference / minNailDistance)\n      );\n\n      const circle = new Circle({\n        radius: props.radius,\n        center: props.position.map(\n          (v, i) =>\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\n        ),\n        n: circleNails,\n        rotation: props.rotation,\n        reverse: props.isReverse,\n      });\n\n      return {\n        circle,\n        ...props,\n      };\n    }\n  }\n\n  getPoint(layer, index) {\n    const { circle } = layer;\n    let circleIndex = Math.round(\n      (index * circle.config.n) / this.maxShapeNailsCount\n    );\n    return circle.getPoint(circleIndex);\n  }\n\n  *generateStrings() {\n    const { n, color } = this.config;\n\n    this.ctx.strokeStyle = color;\n    let prevCirclePoint;\n\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\n        const layer = this.layers[layerIndex];\n        this.ctx.beginPath();\n        this.ctx.moveTo(...(prevCirclePoint ?? this.getPoint(layer, i)));\n\n        if (layerIndex === 0 && i) {\n          this.ctx.lineTo(...this.getPoint(layer, i));\n        }\n\n        let nextLayerIndex = layerIndex + 1;\n        if (nextLayerIndex === this.layers.length) {\n          nextLayerIndex = 0;\n        }\n\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\n        this.ctx.lineTo(...prevCirclePoint);\n        this.ctx.stroke();\n        yield;\n      }\n    }\n  }\n\n  drawNails() {\n    const n = this.config;\n    this.layers.forEach(({ circle }, layerIndex) =>\n      circle.drawNails(this.nails, {\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\n      })\n    );\n  }\n\n  getStepCount() {\n    const { layers, maxShapeNailsCount } = this.getSetUp();\n    return layers.length * maxShapeNailsCount - 1;\n  }\n\n  static thumbnailConfig = {\n    minNailDistance: 3,\n  };\n}\n","const elements = {\n  controls: document.querySelector('#controls'),\n  controlsPanel: document.querySelector('#controls_panel'),\n  sidebarForm: document.querySelector('#sidebar_form'),\n};\n\nconst EVENTS = new Set(['input', 'change']);\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\n\nlet inputTimeout;\n\nexport default class EditorControls {\n  constructor({ pattern }) {\n    this.pattern = pattern;\n    this.state = this._getState() ?? { groups: {} };\n\n    this.eventHandlers = {\n      input: new Set(),\n      change: new Set(),\n    };\n\n    this._toggleFieldset = e => {\n      if (e.target.nodeName === 'LEGEND') {\n        e.target.parentElement.classList.toggle('minimized');\n        const groupId = e.target.parentElement.dataset.group;\n        this.state = {\n          ...this.state,\n          groups: {\n            ...this.state.groups,\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\n          },\n        };\n        this._updateState(this.state);\n      }\n    };\n\n    this._toggleFieldSetOnEnter = e => {\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\n        this._toggleFieldset(e);\n      }\n    };\n\n    this._wrappedOnInput = e => this._onInput(e);\n    elements.controls.addEventListener('input', this._wrappedOnInput);\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.addEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    this.controlElements = {};\n    this.renderControls();\n  }\n\n  destroy() {\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\n    elements.sidebarForm.removeEventListener(\n      'keydown',\n      this._toggleFieldSetOnEnter\n    );\n    elements.controls.removeEventListener(\n      'touchstart',\n      this._wrappedOnTouchStart\n    );\n    elements.controls.innerHTML = '';\n  }\n\n  addEventListener(event, eventHandler) {\n    if (!EVENTS.has(event)) {\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\n    }\n\n    if (!(eventHandler instanceof Function)) {\n      throw new Error('Invalid event handler.');\n    }\n\n    this.eventHandlers[event].add(eventHandler);\n  }\n\n  _triggerEvent(event, eventData) {\n    for (const eventHandler of this.eventHandlers[event]) {\n      eventHandler(eventData);\n    }\n  }\n\n  /**\n   * Needed for range inputs, to avoid changing the value when the user drags to\n   * scroll and accidentally touches a range input when intending to scroll.\n   * @param {Event} e\n   */\n  _onTouchStart(e) {\n    if (e.target.getAttribute('type') === 'range') {\n      this._postponeRangeInput = true;\n      this.currentInputRange = e.target;\n      this.currentInputRangeValue = e.target.value;\n      this._rangeLockTimeout = setTimeout(() => {\n        this._postponeRangeInput = false;\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\n      elements.controlsPanel.addEventListener(\n        'scroll',\n        this._wrappedOnRangeScroll\n      );\n    }\n  }\n\n  _onTouchEnd() {\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\n    elements.controlsPanel.removeEventListener(\n      'scroll',\n      this._wrappedOnRangeScroll\n    );\n\n    if (this._lockRange) {\n      this._lockRange = false;\n      if (this.currentInputRange) {\n        this.currentInputRange.value = this.currentInputRangeValue;\n      }\n    }\n\n    this.currentInputRange = this.currentInputRangeValue = null;\n  }\n\n  _onRangeScroll() {\n    this._lockRange = true;\n  }\n\n  _onInput(e) {\n    clearTimeout(inputTimeout);\n    clearTimeout(this._postponeRangeInputTimeout);\n\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\n      e.preventDefault();\n      this._postponeRangeInputTimeout = setTimeout(() => {\n        this._onInput(e);\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\n      return false;\n    }\n    if (this._lockRange) {\n      e.preventDefault();\n      return false;\n    }\n\n    this.updateInput({\n      inputElement: e.target,\n      originalEvent: e,\n      deferChange: true,\n    });\n  }\n\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\n    const inputValue = getInputValue(inputElement.type, inputElement);\n    const controlKey = inputElement.id.replace(/^config_/, '');\n\n    this.pattern.config = Object.freeze({\n      ...this.pattern.config,\n      [controlKey]: inputValue,\n    });\n\n    const { config, displayValue } = this.controlElements[controlKey];\n    if (displayValue) {\n      const formattedValue = config.displayValue\n        ? config.displayValue(this.pattern.config, config)\n        : inputElement.value;\n      displayValue.innerText = formattedValue;\n    }\n\n    const eventData = Object.freeze({\n      control: controlKey,\n      value: inputValue,\n      originalEvent,\n      pattern: this.pattern,\n    });\n\n    this._triggerEvent('input', eventData);\n\n    const triggerChange = () => {\n      this._triggerEvent('change', eventData);\n      this.updateControlsVisibility();\n    };\n\n    if (deferChange) {\n      inputTimeout = setTimeout(triggerChange, 100);\n    } else {\n      triggerChange();\n    }\n  }\n\n  _getState() {\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\n    if (state) {\n      try {\n        return JSON.parse(state);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    return null;\n  }\n\n  _updateState(newState) {\n    if (newState) {\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\n    } else {\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\n    }\n  }\n\n  updateControlsVisibility(configControls = this.pattern.configControls) {\n    configControls.forEach(control => {\n      if (control.show) {\n        const shouldShowControl = control.show(this.pattern.config);\n        const controlEl = this.controlElements[control.key].control;\n        if (controlEl) {\n          if (shouldShowControl) {\n            controlEl.removeAttribute('hidden');\n          } else {\n            controlEl.setAttribute('hidden', 'hidden');\n          }\n        }\n      }\n\n      if (control.isDisabled) {\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\n        const inputEl = this.controlElements[control.key].input;\n        if (inputEl) {\n          if (shouldDisableControl) {\n            inputEl.setAttribute('disabled', 'disabled');\n          } else {\n            inputEl.removeAttribute('disabled');\n          }\n        }\n      }\n\n      if (control.children) {\n        this.updateControlsVisibility(control.children);\n      }\n    });\n  }\n\n  updateInputs(config) {\n    Object.entries(config).forEach(([key, value]) => {\n      const { input, value: valueEl } = this.controlElements[key];\n      if (input) {\n        if (input.type === 'checkbox') {\n          input.checked = value;\n        } else {\n          input.value = value;\n        }\n        if (valueEl) {\n          valueEl.innerText = value;\n        }\n      }\n    });\n  }\n\n  renderControls(containerEl = elements.controls, _configControls) {\n    const configControls = _configControls ?? this.pattern.configControls;\n    containerEl.innerHTML = '';\n    const controlsFragment = document.createDocumentFragment();\n\n    configControls.forEach(control => {\n      const controlId = `config_${control.key}`;\n      const controlElements = (this.controlElements[control.key] = {\n        config: control,\n      });\n\n      let controlEl;\n\n      if (control.type === 'group') {\n        controlEl = document.createElement('fieldset');\n        controlEl.setAttribute('data-group', control.key);\n        const groupTitleEl = document.createElement('legend');\n        groupTitleEl.setAttribute('tabindex', '0');\n        groupTitleEl.innerText = control.label;\n        controlEl.appendChild(groupTitleEl);\n        controlEl.className = 'control control_group';\n        if (control.defaultValue === 'minimized') {\n          controlEl.classList.add('minimized');\n          this.state.groups[control.key] = false;\n        }\n        const childrenContainer = document.createElement('div');\n        controlEl.appendChild(childrenContainer);\n        this.renderControls(childrenContainer, control.children);\n      } else {\n        controlEl = document.createElement('div');\n        controlEl.className = 'control';\n\n        const label = document.createElement('label');\n        label.innerHTML = control.label;\n        label.setAttribute('for', controlId);\n\n        const inputEl = (controlElements.input =\n          document.createElement('input'));\n        inputEl.setAttribute('type', control.type);\n        const inputValue =\n          this.pattern.config[control.key] ?? control.defaultValue;\n\n        if (control.attr) {\n          Object.entries(control.attr).forEach(([attr, value]) => {\n            const realValue =\n              value instanceof Function ? value(this.pattern) : value;\n            inputEl.setAttribute(attr, realValue);\n          });\n        }\n\n        if (control.type === 'checkbox') {\n          inputEl.checked = inputValue;\n          controlEl.appendChild(inputEl);\n          controlEl.appendChild(label);\n        } else {\n          controlEl.appendChild(label);\n          controlEl.appendChild(inputEl);\n          inputEl.value = inputValue;\n          const inputValueEl = (controlElements.displayValue =\n            document.createElement('span'));\n          inputValueEl.id = `config_${control.key}_value`;\n          inputValueEl.innerText = control.displayValue\n            ? control.displayValue(this.pattern.config, control)\n            : inputValue;\n          inputValueEl.className = 'control_input_value';\n          controlEl.appendChild(inputValueEl);\n        }\n        inputEl.id = controlId;\n      }\n\n      this.controlElements[control.key].control = controlEl;\n      controlEl.id = `control_${control.key}`;\n      controlsFragment.appendChild(controlEl);\n    });\n\n    containerEl.appendChild(controlsFragment);\n    this.updateGroupsState();\n    requestAnimationFrame(() => this.updateControlsVisibility());\n  }\n\n  updateGroupsState() {\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\n    groups.forEach(groupEl => {\n      const groupId = groupEl.dataset.group;\n      const groupState = this.state.groups[groupId];\n      if (typeof groupState === 'boolean') {\n        if (groupState) {\n          groupEl.classList.remove('minimized');\n        } else {\n          groupEl.classList.add('minimized');\n        }\n      }\n    });\n  }\n}\n\nfunction getInputValue(type, inputElement) {\n  switch (type) {\n    case 'range':\n      return parseFloat(inputElement.value);\n    case 'checkbox':\n      return inputElement.checked;\n    case 'number':\n      return parseFloat(inputElement.value);\n    default:\n      return inputElement.value;\n  }\n}\n","const sizeControls = document.querySelector('#size_controls');\n\nconst elements = {\n  sizeSelect: sizeControls.querySelector('#size_select'),\n  sizeCustom: sizeControls.querySelector('#size_custom'),\n  width: sizeControls.querySelector('#size_custom_width'),\n  height: sizeControls.querySelector('#size_custom_height'),\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\n};\n\nfunction cmToPixels(cm, dpi = 300) {\n  return Math.floor((cm / 2.54) * dpi);\n}\n\nconst SCREEN_SIZE = [\n  Math.floor(window.screen.width),\n  Math.floor(window.screen.height),\n];\n\nconst SIZES = [\n  { id: 'fit', name: 'Fit to screen' },\n  {\n    id: 'A4',\n    value: [20, 28].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'A3',\n    value: [28, 40].map(v => cmToPixels(v)),\n    orientationSelect: true,\n  },\n  {\n    id: 'screen',\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\n    value: SCREEN_SIZE,\n  },\n  { id: 'custom', name: 'Custom...' },\n];\n\nexport default class EditorSizeControls {\n  element = document.querySelector('#size_controls');\n\n  constructor({ getCurrentSize }) {\n    const sizeOptionsFragment = document.createDocumentFragment();\n    SIZES.forEach(size => {\n      const sizeListItem = document.createElement('option');\n      sizeListItem.setAttribute('value', size.id);\n      sizeListItem.innerText = size.name ?? size.id;\n      sizeOptionsFragment.appendChild(sizeListItem);\n    });\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\n    this.selectedSize = SIZES[0];\n\n    elements.sizeSelect.addEventListener('change', e => {\n      const selectedSizeId = e.target.value;\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\n      this.selectedSize = size;\n\n      if (size.id === 'custom') {\n        elements.sizeCustom.removeAttribute('hidden');\n        const [width, height] = getCurrentSize();\n        elements.width.value = width;\n        elements.height.value = height;\n      } else {\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\n        this._notifyOnChange(this.getValue());\n      }\n\n      if (size.orientationSelect) {\n        elements.orientationSelect.removeAttribute('hidden');\n      } else {\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\n      }\n    });\n\n    elements.orientationSelect.addEventListener('change', e => {\n      this._notifyOnChange(this.getValue());\n    });\n\n    elements.sizeCustom.addEventListener('focusin', e => {\n      e.target.select();\n    });\n\n    elements.sizeCustom.addEventListener('input', () => {\n      this._notifyOnChange([\n        elements.width.value ? parseInt(elements.width.value) : null,\n        elements.height.value ? parseInt(elements.height.value) : null,\n      ]);\n    });\n  }\n\n  _notifyOnChange([width, height] = []) {\n    this.element.dispatchEvent(\n      new CustomEvent('sizechange', { detail: { width, height } })\n    );\n  }\n\n  getValue() {\n    if (this.selectedSize.id === 'custom') {\n      return [\n        parseInt(elements.width.value, 10),\n        parseInt(elements.height.value, 10),\n      ];\n    } else {\n      let value = this.selectedSize.value;\n      if (\n        this.selectedSize.orientationSelect &&\n        elements.orientationSelect.value === 'horizontal'\n      ) {\n        value = Array.from(value).reverse();\n      }\n      return value;\n    }\n  }\n}\n","const MAX_FLOAT_DECIMALS = 6;\n\nexport function serializeConfig(pattern) {\n  const { defaultConfig, config } = pattern;\n\n  const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\n    if (value === defaultConfig[key]) {\n      return null;\n    }\n\n    if (typeof value === 'boolean') {\n      return `!${value ? 1 : 0}`;\n    }\n\n    if (typeof value === 'number') {\n      return parseFloat(value.toFixed(MAX_FLOAT_DECIMALS));\n    }\n\n    return value;\n  });\n\n  while (nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\n    nonDefaultConfigValues.pop();\n  }\n\n  if (!nonDefaultConfigValues.length) {\n    return '';\n  }\n\n  const serializedConfigValues = nonDefaultConfigValues\n    .join('_')\n    .replace(/\\_{2,}/g, match => '~' + match.length + '_');\n  return serializedConfigValues;\n}\n\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\nconst booleanRegExp = /^(?:!)([01])$/;\n\nexport function deserializeConfig(pattern, serializedCofig) {\n  const serializedConfigValues = serializedCofig\n    .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) =>\n      new Array(+commaCount).fill('_').join('')\n    )\n    .split('_')\n    .map(v => {\n      if (v === '') {\n        return null;\n      }\n\n      if (numberRegExp.test(v)) {\n        return parseFloat(v);\n      }\n\n      const booleanMatch = v.match(booleanRegExp);\n      if (booleanMatch) {\n        return booleanMatch[1] === '1';\n      }\n\n      return v;\n    });\n\n  const configKeys = Object.keys(pattern.defaultConfig);\n\n  return serializedConfigValues.reduce((config, serializedValue, i) => {\n    if (serializedValue !== null) {\n      const key = configKeys[i];\n      return { ...config, [key]: serializedValue };\n    }\n\n    return config;\n  }, {});\n}\n","export async function share(input) {\n  try {\n    navigator.share(await getShareData(input));\n  } catch (error) {\n    alert('Error: ' + error.message);\n  }\n}\n\nexport async function isShareSupported(input) {\n  if (!navigator.share) {\n    return false;\n  }\n\n  const shareData = await getShareData(input);\n  return navigator.canShare(shareData);\n}\n\nasync function getShareData({ canvas, pattern }) {\n  const dataUrl = canvas.toDataURL();\n  const blob = await (await fetch(dataUrl)).blob();\n  const files = [\n    new File([blob], pattern.name + '.jpg', {\n      type: blob.type,\n      lastModified: new Date().getTime(),\n    }),\n  ];\n  return {\n    url: window.location.href,\n    files,\n    title: document.title,\n    text: 'String Art Studio - ' + pattern.name,\n  };\n}\n","import Player from './editor/Player.js';\nimport patternTypes from './pattern_types.js';\nimport EditorControls from './editor/EditorControls.js';\nimport EditorSizeControls from './editor/EditorSizeControls.js';\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\nimport { deserializeConfig, serializeConfig } from './Serialize.js';\nimport { isShareSupported, share } from './share.js';\nimport { initServiceWorker } from './pwa.js';\n\nwindow.addEventListener('error', function (event) {\n  alert('Error: ' + event.message);\n});\n\nconst elements = {\n  canvas: document.querySelector('canvas'),\n  patternLink: document.querySelector('#pattern_link'),\n  downloadBtn: document.querySelector('#download_btn'),\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\n  resetBtn: document.querySelector('#reset_btn'),\n  shareBtn: document.querySelector('#share_btn'),\n  playerBtn: document.querySelector('#player_btn'),\n  buttons: document.querySelector('#buttons'),\n  instructionsLink: document.querySelector(\n    '#pattern_select_dropdown_instructions'\n  ),\n};\n\nconst patterns = patternTypes.map(Pattern => new Pattern(elements.canvas));\n\nlet currentPattern;\nconst player = new Player(document.querySelector('#player'));\nconst sizeControls = new EditorSizeControls({\n  getCurrentSize: () => [\n    elements.canvas.clientWidth,\n    elements.canvas.clientHeight,\n  ],\n});\n\nconst thumbnails = new Thumbnails();\n\nlet controls;\n\nwindow.addEventListener('load', main);\n\nasync function main() {\n  initRouting();\n\n  await initServiceWorker();\n\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  unHide(document.querySelector('main'));\n  if (history.state?.pattern) {\n    updateState(history.state);\n  } else {\n    const queryParams = new URLSearchParams(document.location.search);\n    const queryPattern = queryParams.get('pattern');\n\n    if (queryPattern) {\n      const config = queryParams.get('config');\n      updateState({ pattern: queryPattern, config });\n    } else {\n      thumbnails.toggle();\n    }\n  }\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  elements.shareBtn.addEventListener(\n    'click',\n    async () =>\n      await share({\n        canvas: elements.canvas,\n        pattern: currentPattern,\n      })\n  );\n  elements.playerBtn.addEventListener('click', () => {\n    document.querySelectorAll('#buttons [data-toggle-for]').forEach(btn => {\n      if (btn.classList.contains('active')) {\n        btn.click();\n      }\n    });\n  });\n\n  elements.instructionsLink.addEventListener('click', e => {\n    e.preventDefault();\n    history.pushState({ pattern: null }, 'String Art Studio', './');\n    unselectPattern();\n  });\n\n  thumbnails.addOnChangeListener(({ detail }) => {\n    const pattern = findPatternById(detail.pattern);\n    setCurrentPattern(pattern);\n  });\n\n  document.body.addEventListener('click', e => {\n    const toggleBtn = e.target.closest('[data-toggle-for]');\n    if (toggleBtn) {\n      const dialogId = toggleBtn.dataset.toggleFor;\n\n      toggleBtn.classList.toggle('active');\n      const toggledElement = document.querySelector('#' + dialogId);\n      toggledElement.classList.toggle('open');\n      document.body.classList.toggle('dialog_' + dialogId);\n      currentPattern &&\n        currentPattern.draw({ position: currentPattern.position });\n    }\n  });\n}\n\nasync function initPattern() {\n  if (!currentPattern) {\n    throw new Error(\"Can't init pattern - no current pattern available!\");\n  }\n\n  initSize();\n\n  window.addEventListener(\n    'resize',\n    () => currentPattern && currentPattern.draw()\n  );\n\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\n  elements.resetBtn.addEventListener('click', reset);\n  const showShare = await isShareSupported({\n    canvas: elements.canvas,\n    pattern: currentPattern,\n  });\n  if (showShare) {\n    unHide(elements.shareBtn);\n  }\n}\n\nfunction downloadCanvas() {\n  const downloadLink = document.createElement('a');\n  downloadLink.download = currentPattern.name + '.png';\n  downloadLink.href = elements.canvas.toDataURL('image/png');\n  downloadLink.setAttribute('target', 'download');\n  downloadLink.click();\n}\n\nfunction downloadNailsImage() {\n  const currentConfig = currentPattern.config;\n  currentPattern.config = {\n    darkMode: false,\n    showNails: true,\n    showNailNumbers: true,\n    showStrings: false,\n    nailsColor: '#000000',\n  };\n  currentPattern.draw();\n  downloadCanvas();\n\n  // Reset to the config before the download:\n  currentPattern.config = currentConfig;\n  currentPattern.draw();\n}\n\nfunction reset() {\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\n    setCurrentPattern(currentPattern, { config: {} });\n  }\n}\n\nfunction onInputsChange({ withConfig = true } = {}) {\n  player.update(currentPattern);\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\n  history.replaceState(\n    {\n      pattern: currentPattern.id,\n      config: configQuery,\n    },\n    currentPattern.name,\n    `?pattern=${currentPattern.id}${\n      withConfig && configQuery\n        ? `&config=${encodeURIComponent(configQuery)}`\n        : ''\n    }`\n  );\n}\n\nfunction setCurrentPattern(pattern, setPatternOptions) {\n  selectPattern(pattern, setPatternOptions);\n  history.pushState(\n    { pattern: pattern.id },\n    pattern.name,\n    '?pattern=' + pattern.id\n  );\n}\n\nfunction initSize() {\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\n    setSize(detail);\n  });\n}\n\nfunction setSize({ width, height }) {\n  elements.canvas.removeAttribute('width');\n  elements.canvas.removeAttribute('height');\n\n  if (width && height) {\n    elements.canvas.style.width = `${width}px`;\n    elements.canvas.style.height = `${height}px`;\n    if (!elements.canvas.parentElement.classList.contains('overflow')) {\n      elements.canvas.parentElement.classList.add('overflow');\n    }\n  } else {\n    elements.canvas.parentElement.classList.remove('overflow');\n    elements.canvas.removeAttribute('style');\n  }\n\n  currentPattern.draw();\n}\n\nfunction initRouting() {\n  window.addEventListener('popstate', ({ state }) => {\n    updateState(state);\n  });\n}\n\nfunction updateState(state) {\n  if (state?.pattern) {\n    const pattern = findPatternById(state.pattern);\n    selectPattern(pattern, {\n      draw: false,\n      config: state.config ? deserializeConfig(pattern, state.config) : {},\n    });\n\n    thumbnails.close();\n    currentPattern.draw();\n  } else {\n    unselectPattern();\n    thumbnails.open();\n  }\n}\n\nfunction findPatternById(patternId) {\n  const pattern = patterns.find(({ id }) => id === patternId);\n  if (!pattern) {\n    throw new Error(`Pattern with id \"${patternId}\" not found!`);\n  }\n  return pattern;\n}\n\nfunction selectPattern(pattern, { config, draw = true } = {}) {\n  const isFirstTime = !currentPattern;\n\n  currentPattern = pattern;\n  if (config) {\n    currentPattern.config = config;\n  }\n  if (controls) {\n    controls.destroy();\n  }\n  controls = new EditorControls({ pattern, config });\n  controls.addEventListener('input', () => currentPattern.draw());\n  controls.addEventListener('change', onInputsChange);\n\n  if (pattern.link) {\n    elements.patternLink.setAttribute('href', pattern.link);\n    elements.patternLink.innerText = pattern.linkText ?? 'Example';\n    unHide(elements.patternLink);\n  } else {\n    hide(elements.patternLink);\n  }\n\n  if (draw) {\n    requestAnimationFrame(() => {\n      currentPattern.draw();\n    });\n  }\n\n  player.update(currentPattern, { draw: false });\n  thumbnails.setCurrentPattern(pattern);\n  document.title = `${pattern.name} - String Art Studio`;\n  document.body.setAttribute('data-pattern', pattern.id);\n\n  if (isFirstTime) {\n    initPattern();\n    document.body.querySelectorAll('.pattern_only').forEach(unHide);\n  }\n}\n\nfunction unHide(element) {\n  element.removeAttribute('hidden');\n}\n\nfunction hide(element) {\n  element.setAttribute('hidden', 'hidden');\n}\n\nfunction unselectPattern() {\n  currentPattern = null;\n  const context = elements.canvas.getContext('2d');\n\n  context.clearRect(0, 0, elements.canvas.width, elements.canvas.height);\n  hide(elements.patternLink);\n  thumbnails.setCurrentPattern(null);\n  controls && controls.destroy();\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\n  document.body.removeAttribute('data-pattern');\n}\n","export default class Player {\n  constructor(parentEl) {\n    this.elements = {\n      player: parentEl,\n      step: parentEl.querySelector('#step'),\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\n      playerPosition: parentEl.querySelector('#player_position'),\n      playBtn: parentEl.querySelector('#play_btn'),\n      pauseBtn: parentEl.querySelector('#pause_btn'),\n      text: parentEl.querySelector('#player_text'),\n    };\n    this.stepCount = 0;\n    this._isPlaying = false;\n\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\n      this.goto(+target.value);\n    });\n\n    this.elements.playBtn.addEventListener('click', () => {\n      this.play();\n    });\n\n    this.elements.pauseBtn.addEventListener('click', () => {\n      this.pause();\n    });\n  }\n\n  updateStatus(isPlaying) {\n    if (this._isPlaying !== isPlaying) {\n      this.elements.player.classList.toggle('playing');\n      this._isPlaying = isPlaying;\n    }\n  }\n\n  update(stringArt, { draw = true } = {}) {\n    this.stringArt = stringArt;\n    this.stepCount = stringArt.getStepCount();\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\n    this.elements.text.style.removeProperty('width');\n    this.elements.text.style.width =\n      (this.elements.text.clientWidth || 70) + 'px';\n    this.goto(this.stepCount, { updateStringArt: draw });\n  }\n\n  updatePosition(position) {\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\n    this.elements.playerPosition.value = position;\n  }\n\n  goto(position, { updateStringArt = true } = {}) {\n    this.pause();\n    this.updatePosition(position);\n    if (updateStringArt) {\n      this.stringArt.goto(position);\n    }\n  }\n\n  setInstructions(instructions) {\n    // this.elements.stepInstructions.innerText = instructions;\n  }\n\n  play() {\n    this.updateStatus(true);\n    cancelAnimationFrame(this.renderRafId);\n\n    if (this.stringArt.position === this.stepCount) {\n      this.stringArt.goto(0);\n    }\n\n    const self = this;\n\n    step();\n\n    function step() {\n      if (!self.stringArt.drawNext().done) {\n        self.renderRafId = requestAnimationFrame(step);\n      } else {\n        self.updateStatus(false);\n      }\n      self.updatePosition(self.stringArt.position);\n    }\n  }\n\n  pause() {\n    cancelAnimationFrame(this.renderRafId);\n    this.updateStatus(false);\n  }\n\n  toggle() {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n}\n","import patternTypes from '../pattern_types.js';\n\nconst THUMBNAIL_WIDTH = 100;\nconst MINIMIZED_CLASS = 'minimized';\n\nexport class Thumbnails {\n  elements = {\n    root: document.querySelector('#pattern_select_panel'),\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\n    toggleBtn: document.querySelector('#pattern_select_btn'),\n    dropdown: document.querySelector('#pattern_select_dropdown'),\n  };\n\n  constructor() {\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\n  }\n\n  toggle() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.open();\n    } else if (this.pattern) {\n      this.close();\n    }\n  }\n\n  open() {\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\n      if (!this.thumbnailsRendered) {\n        this.createThumbnails();\n        this.thumbnailsRendered = true;\n      }\n\n      this._onClickOutside = e => {\n        if (!e.target.closest('#pattern_select_panel')) {\n          this.toggle();\n        }\n      };\n\n      document.body.addEventListener('mousedown', this._onClickOutside);\n    }\n  }\n\n  close() {\n    if (!this.elements.root.classList.contains(MINIMIZED_CLASS)) {\n      this.elements.root.classList.add(MINIMIZED_CLASS);\n      document.body.removeEventListener('mousedown', this._onClickOutside);\n      this._onClickOutside = null;\n    }\n  }\n\n  setCurrentPattern(pattern) {\n    this.pattern = pattern;\n    this.elements.toggleBtn.innerText = pattern?.name ?? 'Choose a pattern';\n  }\n\n  createThumbnails() {\n    const thumbnailsFragment = document.createDocumentFragment();\n    const patterns = [];\n\n    patternTypes.forEach(PatternType => {\n      const canvas = document.createElement('canvas');\n      canvas.style.width = canvas.style.height = `${THUMBNAIL_WIDTH}px`;\n\n      const pattern = new PatternType(canvas);\n      pattern.config = Object.assign(\n        {\n          margin: 1,\n          enableBackground: false,\n          nailRadius: 0.5,\n        },\n        PatternType.thumbnailConfig\n      );\n\n      patterns.push(pattern);\n\n      const li = document.createElement('li');\n      thumbnailsFragment.appendChild(li);\n      const patternLink = document.createElement('a');\n      patternLink.href = `?pattern=${pattern.id}`;\n      patternLink.setAttribute('data-pattern', pattern.id);\n      patternLink.title = pattern.name;\n      patternLink.appendChild(canvas);\n      li.appendChild(patternLink);\n    });\n\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\n    patterns.forEach(pattern => pattern.draw());\n\n    this.elements.thumbnails.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const link = e.target.closest('[data-pattern]');\n\n      if (!link) {\n        return false;\n      }\n\n      this.elements.root.dispatchEvent(\n        new CustomEvent('change', {\n          detail: { pattern: link.dataset.pattern },\n        })\n      );\n      this.toggle();\n    });\n  }\n\n  addOnChangeListener(listener) {\n    this.elements.root.addEventListener('change', listener);\n  }\n\n  removeOnChangeListener(listener) {\n    this.elements.root.removeEventListener('change', listener);\n  }\n}\n","const swFilename = 'service-worker.js';\n\nexport async function initServiceWorker() {\n  if (!navigator.serviceWorker || document.location.hostname === '127.0.0.1') {\n    return;\n  }\n\n  try {\n    const registration = await navigator.serviceWorker.register(swFilename);\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log(\n              'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n            );\n          } else {\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n}\n"],"names":["$e8c1397eac31f13e$var$COLOR_CONTROLS","key","label","defaultValue","type","show","isMultiColor","attr","min","max","step","children","multicolorByLightness","config","this","multicolorRange","colorCount","minLightness","maxLightness","multicolorStart","darkMode","saturation","reverseColors","multiColorStep","multiColorLightnessStep","colors","Array","fill","map","_","colorIndex","lightness","reverse","getColor","color","getColorMap","stepCount","Error","stepsPerColor","Math","floor","colorMap","Map","i","set","include","exclude","defaults","controls","getControls","controlsConfig","filter","includes","control","finalControl","Object","freeze","$97e1d102fa450510$export$f81847884871263e","int1","int2","$97e1d102fa450510$export$f4644083ce95e7e3","PI","canvas","context","getContext","setConfig","centerX","width","nails","addedPoints","Set","nailRadius","nailsColor","nailNumbersFontSize","clear","addNail","nail","nailPoint","point","round","join","has","push","add","drawNumbers","globalCompositeOperation","beginPath","fillStyle","textBaseline","font","nailNumberOffset","forEach","x","y","number","moveTo","arc","isRightAlign","numberPosition","textAlign","fillText","String","$65e05ee91a8797e3$var$COLORS","$65e05ee91a8797e3$var$COMMON_CONFIG_CONTROLS","isDisabled","showNails","showStrings","displayValue","showNailNumbers","margin","enableBackground","customBackgroundColor","$65e05ee91a8797e3$var$flattenConfig","configControls","reduce","$65e05ee91a8797e3$export$2e2bcd8739ae039","ctx","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","concat","defaultConfig","_defaultConfig","assign","defaultValues","_config","value","getSize","clientWidth","clientHeight","v","setUpDraw","removeAttribute","height","size","setAttribute","center","$a8180031c78213da$export$2e2bcd8739ae039","clearRect","lineWidth","stringWidth","afterDraw","drawNails","initDraw","backgroundColor","fillRect","draw","position","Infinity","stringsIterator","generateStrings","drawNext","done","goto","result","next","getStepCount","name","getPoint","index","realIndex","getNailIndex","points","get","sin","indexAngle","rotationAngle","radius","cos","isReverse","n","serializedConfig","_serializeConfig","rotation","configCenter","props","nailsNumberStart","getNumber","$828d2af56886c091$var$COLOR_CONFIG","$e8c1397eac31f13e$export$2e2bcd8739ae039","getConfig","$17fe1039ca333e84$export$2e2bcd8739ae039","id","link","$ff21866e88ed26dc$export$2e2bcd8739ae039","rotationConfig","super","nSpirals","radiusIncrease","angleStep","spiralRotations","maxRadius","nailsPerSpiral","angleIncrease","s","nailNumber","spiralIndex","centerx","centery","angle","generatePoints","lastPoint","strokeStyle","stepColor","lineTo","stroke","linkText","_n","layers","extraNails","layerFill","base","circleConfig","stringsPerLayer","circle","layerShift","shift","time","toIndex","instructions","drawTimesTable","$f11ad0f2a18da5c9$var$SIDES","$f11ad0f2a18da5c9$var$SIDES_ORDER","$f11ad0f2a18da5c9$var$SIDES_ROTATION","left","bottom","right","top","$f11ad0f2a18da5c9$export$2e2bcd8739ae039","maxSize","nailSpacing","layerAngle","layerIndex","_getLayerProps","layerStart","theta","pivot","cosAngle","sinAngle","side","layerStringCount","sideIndex","indexOf","nextSide","length","nextSideRotation","sideProps","_getLayerColors","layerSize","pow","color1","color2","colorPerLayer","layerColor","drawSide","layer","drawLayer","count","sideOrder","sides","sideCount","sideAngle","radiusAngle","_getProps","fitSize","getSizeAndCenter","configSize","boundingRect","getBoundingRect","scale","overrideConfig","nailsSpacing","sideSize","start","nailsDistance","radiusNailsCount","nailsPerSide","getSidePoint","pointsMapIndex","startX","getCenterPoint","radiusNailsDistance","firstPoint","boundingRect1","slice","drawCenter","drawSides","sideIndexStart","index1","$d89aefe1e0b94ba8$var$COLOR_CONFIG","$a3a02ffca86b5e03$var$COLOR_CONFIG","$4231afd05203ede9$var$COLOR_CONFIG","$8b13425f1e264518$export$2e2bcd8739ae039","sideNails","ringSize","starCenterStart","renderRing","ringDistance","circlePointsStart","sinSideAngle","cosSideAngle","circlePointsEnd","getStarPoint","centerY","getArcPoint","reverseOrder","prevSide","innerColor","alternate","linesPerRound","rounds","prevPointIndex","prevPoint","linesPerThisRound","outterColor","isStar","ceil","pointPosition","ringColor","isPrevSide","drawCircle","drawRing","drawStar","generateStarPoints","nailsConfig","size1","show1","end1","size2","show2","end2","size3","show3","getSetUp","lineSpacing","lineNailCount","firstCirclePoint","totalNailCount","totalIndexCount","getLayer","call","enable","endIndex","indexLength","circleIndex","self","advance","getPointIndex","$4252a999d90491dd$export$2e2bcd8739ae039","innerLength","repetition","layersCount","realRepetition","currentInnerLength","repetitionCount","isPrevPoint","drawSpiral","layerSpread","minNailDistance","maxShapeNailsCount","prop","circumsference","circleNails","prevCirclePoint","nextLayerIndex","polygonConfig","polygon","$6489b1167eb82c4c$export$2e2bcd8739ae039","bezier","limitedBezier","layerAngleShift","polygons","leftSide","centerIndexes","getCenterIndexes","extraNailCount","structureProps","getStructureProps","entries","some","maxSteps","angleRadians","currentSize","k","r","steps","$2fc16ffa17719734$var$elements","document","querySelector","controlsPanel","sidebarForm","$2fc16ffa17719734$var$EVENTS","$2fc16ffa17719734$var$inputTimeout","pattern","state","_getState","groups","eventHandlers","input","change","_toggleFieldset","e","target","nodeName","parentElement","classList","toggle","groupId","dataset","group","contains","_updateState","_toggleFieldSetOnEnter","_wrappedOnInput","_onInput","addEventListener","_wrappedOnTouchStart","_onTouchStart","controlElements","renderControls","destroy","removeEventListener","innerHTML","event","eventHandler","Function","_triggerEvent","eventData","e1","getAttribute","_postponeRangeInput","currentInputRange","currentInputRangeValue","_rangeLockTimeout","setTimeout","_wrappedOnTouchEnd","_onTouchEnd","body","_wrappedOnRangeScroll","_onRangeScroll","_lockRange","clearTimeout","_postponeRangeInputTimeout","preventDefault","updateInput","inputElement","originalEvent","deferChange","inputValue","parseFloat","checked","$2fc16ffa17719734$var$getInputValue","controlKey","replace","formattedValue","innerText","triggerChange","updateControlsVisibility","localStorage","getItem","JSON","parse","newState","setItem","stringify","removeItem","shouldShowControl","controlEl","shouldDisableControl","inputEl","updateInputs","valueEl","containerEl","_configControls","controlsFragment","createDocumentFragment","controlId","createElement","groupTitleEl","appendChild","className","childrenContainer","realValue","inputValueEl","updateGroupsState","requestAnimationFrame","querySelectorAll","groupEl","groupState","remove","$0597ff46967fdd49$var$sizeControls","$0597ff46967fdd49$var$elements","sizeSelect","sizeCustom","orientationSelect","$0597ff46967fdd49$var$cmToPixels","cm","dpi","$0597ff46967fdd49$var$SCREEN_SIZE","screen","$0597ff46967fdd49$var$SIZES","$2085f05924b9087c$var$numberRegExp","$2085f05924b9087c$var$booleanRegExp","$2085f05924b9087c$export$39ef19ebad6081a3","serializedCofig","serializedConfigValues","commaCount","split","test","booleanMatch","match","configKeys","keys","serializedValue","$72facf7821ef2ed6$var$getShareData","dataUrl","toDataURL","blob","fetch","files","File","lastModified","Date","getTime","url","location","href","title","text","alert","message","$52852adbc3c0b381$var$elements","patternLink","downloadBtn","downloadNailsBtn","resetBtn","shareBtn","playerBtn","buttons","instructionsLink","$52852adbc3c0b381$var$patterns","Pattern","$52852adbc3c0b381$var$currentPattern","$52852adbc3c0b381$var$player","parentEl","elements","player","playerPosition","playBtn","pauseBtn","_isPlaying","play","pause","updateStatus","isPlaying","update","stringArt","style","removeProperty","updateStringArt","updatePosition","setInstructions","cancelAnimationFrame","renderRafId","$52852adbc3c0b381$var$sizeControls","element","getCurrentSize","sizeOptionsFragment","sizeListItem","selectedSize","selectedSizeId","find","_notifyOnChange","getValue","select","parseInt","dispatchEvent","CustomEvent","detail","from","$52852adbc3c0b381$var$thumbnails","root","thumbnails","toggleBtn","dropdown","open","close","thumbnailsRendered","createThumbnails","_onClickOutside","closest","setCurrentPattern","thumbnailsFragment","patterns","PatternType","thumbnailConfig","li","stopPropagation","addOnChangeListener","listener","removeOnChangeListener","$52852adbc3c0b381$var$controls","$52852adbc3c0b381$var$initPattern","$52852adbc3c0b381$var$setSize","$52852adbc3c0b381$var$downloadCanvas","$52852adbc3c0b381$var$downloadNailsImage","$52852adbc3c0b381$var$reset","navigator","share","shareData","canShare","$72facf7821ef2ed6$export$4fa6f570da04f7cc","$52852adbc3c0b381$var$unHide","downloadLink","download","click","currentConfig","confirm","$52852adbc3c0b381$var$setCurrentPattern","$52852adbc3c0b381$var$onInputsChange","withConfig","configQuery","nonDefaultConfigValues","toFixed","pop","$2085f05924b9087c$export$fa8157df3262779b","history","replaceState","encodeURIComponent","setPatternOptions","$52852adbc3c0b381$var$selectPattern","pushState","$52852adbc3c0b381$var$updateState","$52852adbc3c0b381$var$findPatternById","$52852adbc3c0b381$var$unselectPattern","patternId","isFirstTime","$2fc16ffa17719734$export$2e2bcd8739ae039","$52852adbc3c0b381$var$hide","$52852adbc3c0b381$var$initRouting","serviceWorker","hostname","registration","register","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","$df9fee1b96456f2b$export$d594efb518b3cec4","queryParams","URLSearchParams","search","queryPattern","async","$72facf7821ef2ed6$export$ed80d9de1d9df928","btn","dialogId","toggleFor"],"version":3,"file":"index.85dd9dbd.js.map"}