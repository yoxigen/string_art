{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-fd061fcae96016f7.js","src/scripts/main.js","src/scripts/editor/Player.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/scripts/pattern_types.js","src/scripts/string_art_types/Spiral.js","src/scripts/helpers/Color.js","src/scripts/StringArt.js","src/scripts/Nails.js","src/scripts/renderers/Renderer.js","src/scripts/helpers/Circle.js","src/scripts/helpers/easing.js","src/scripts/helpers/math_utils.js","src/scripts/string_art_types/Spirals.js","src/scripts/string_art_types/Wave.js","src/scripts/string_art_types/Mandala.js","src/scripts/string_art_types/Eye.js","src/scripts/string_art_types/Star.js","src/scripts/string_art_types/Assymetry.js","src/scripts/string_art_types/Freestyle.js","src/scripts/string_art_types/PolygonPattern.js","src/scripts/helpers/Polygon.js","src/scripts/string_art_types/Flower.js","src/scripts/string_art_types/MaurerRose.js","src/scripts/string_art_types/FlowerOfLife.js","src/scripts/string_art_types/Comet.js","src/scripts/editor/EditorControls.js","src/scripts/editor/EditorSizeControls.js","src/scripts/thumbnails/Thumbnails.js","src/scripts/renderers/CanvasRenderer.js","src/scripts/Serialize.js","src/scripts/share.js","src/scripts/pwa.js","src/scripts/renderers/SVGRenderer.js","src/scripts/download/SVGDownload.js","src/scripts/download/Download.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"1d23b73e4841ef46\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import Player from './editor/Player.js';\r\nimport patternTypes from './pattern_types.js';\r\nimport EditorControls from './editor/EditorControls.js';\r\nimport EditorSizeControls from './editor/EditorSizeControls.js';\r\nimport { Thumbnails } from './thumbnails/Thumbnails.js';\r\nimport { deserializeConfig, serializeConfig } from './Serialize.js';\r\nimport { isShareSupported, share } from './share.js';\r\nimport { initServiceWorker } from './pwa.js';\r\nimport CanvasRenderer from './renderers/CanvasRenderer.js';\r\nimport SVGRenderer from './renderers/SVGRenderer.js';\r\nimport { downloadPatternAsSVG } from './download/SVGDownload.js';\r\nimport { downloadFile } from './download/Download.js';\r\n\r\nwindow.addEventListener('error', function (event) {\r\n  alert('Error: ' + event.message);\r\n});\r\n\r\nconst elements = {\r\n  canvas: document.querySelector('#canvas_panel'),\r\n  patternLink: document.querySelector('#pattern_link'),\r\n  downloadBtn: document.querySelector('#download_btn'),\r\n  downloadSVGBtn: document.querySelector('#download_svg_btn'),\r\n  downloadNailsBtn: document.querySelector('#download_nails_btn'),\r\n  resetBtn: document.querySelector('#reset_btn'),\r\n  shareBtn: document.querySelector('#share_btn'),\r\n  playerBtn: document.querySelector('#player_btn'),\r\n  buttons: document.querySelector('#buttons'),\r\n  instructionsLink: document.querySelector(\r\n    '#pattern_select_dropdown_instructions'\r\n  ),\r\n};\r\n\r\nlet canvasRenderer;\r\nlet patterns;\r\n\r\nlet currentPattern;\r\nconst player = new Player(document.querySelector('#player'));\r\nconst sizeControls = new EditorSizeControls({\r\n  getCurrentSize: () => [\r\n    elements.canvas.clientWidth,\r\n    elements.canvas.clientHeight,\r\n  ],\r\n});\r\n\r\nconst thumbnails = new Thumbnails();\r\n\r\nlet controls;\r\n\r\nwindow.addEventListener('load', main);\r\n\r\nasync function main() {\r\n  initRouting();\r\n\r\n  await initServiceWorker();\r\n\r\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\r\n  unHide(document.querySelector('main'));\r\n\r\n  const queryParams = new URLSearchParams(document.location.search);\r\n  canvasRenderer =\r\n    queryParams.get('renderer') === 'svg'\r\n      ? new SVGRenderer(elements.canvas)\r\n      : new CanvasRenderer(elements.canvas);\r\n\r\n  patterns = patternTypes.map(Pattern => new Pattern(canvasRenderer));\r\n\r\n  if (history.state?.pattern) {\r\n    updateState(history.state);\r\n  } else {\r\n    const queryPattern = queryParams.get('pattern');\r\n\r\n    if (queryPattern) {\r\n      const config = queryParams.get('config');\r\n      updateState({ pattern: queryPattern, config });\r\n    } else {\r\n      thumbnails.toggle();\r\n    }\r\n  }\r\n\r\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\r\n  elements.downloadSVGBtn.addEventListener('click', downloadSVG);\r\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\r\n  elements.resetBtn.addEventListener('click', reset);\r\n  elements.shareBtn.addEventListener(\r\n    'click',\r\n    async () =>\r\n      await share({\r\n        renderer: canvasRenderer,\r\n        pattern: currentPattern,\r\n      })\r\n  );\r\n  elements.playerBtn.addEventListener('click', () => {\r\n    document.querySelectorAll('#buttons [data-toggle-for]').forEach(btn => {\r\n      if (btn.classList.contains('active')) {\r\n        btn.click();\r\n      }\r\n    });\r\n  });\r\n\r\n  elements.instructionsLink.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    history.pushState({ pattern: null }, 'String Art Studio', './');\r\n    unselectPattern();\r\n  });\r\n\r\n  thumbnails.addOnChangeListener(({ detail }) => {\r\n    const pattern = findPatternById(detail.pattern);\r\n    setCurrentPattern(pattern);\r\n  });\r\n\r\n  document.body.addEventListener('click', e => {\r\n    const toggleBtn = e.target.closest('[data-toggle-for]');\r\n    if (toggleBtn) {\r\n      const dialogId = toggleBtn.dataset.toggleFor;\r\n\r\n      toggleBtn.classList.toggle('active');\r\n      const toggledElement = document.querySelector('#' + dialogId);\r\n      toggledElement.classList.toggle('open');\r\n      document.body.classList.toggle('dialog_' + dialogId);\r\n      currentPattern &&\r\n        currentPattern.draw({ position: currentPattern.position });\r\n    }\r\n  });\r\n}\r\n\r\nasync function initPattern() {\r\n  if (!currentPattern) {\r\n    throw new Error(\"Can't init pattern - no current pattern available!\");\r\n  }\r\n\r\n  initSize();\r\n\r\n  window.addEventListener(\r\n    'resize',\r\n    () => currentPattern && currentPattern.draw()\r\n  );\r\n\r\n  elements.downloadBtn.addEventListener('click', downloadCanvas);\r\n  elements.downloadNailsBtn.addEventListener('click', downloadNailsImage);\r\n  elements.resetBtn.addEventListener('click', reset);\r\n  const showShare = await isShareSupported({\r\n    renderer: canvasRenderer,\r\n    pattern: currentPattern,\r\n  });\r\n  if (showShare) {\r\n    unHide(elements.shareBtn);\r\n  }\r\n}\r\n\r\nfunction downloadCanvas() {\r\n  downloadFile(canvasRenderer.toDataURL(), currentPattern.name + '.png');\r\n}\r\n\r\nfunction downloadSVG() {\r\n  downloadPatternAsSVG(currentPattern, canvasRenderer.getSize());\r\n}\r\n\r\nfunction downloadNailsImage() {\r\n  const currentConfig = currentPattern.config;\r\n  currentPattern.config = {\r\n    darkMode: false,\r\n    showNails: true,\r\n    showNailNumbers: true,\r\n    showStrings: false,\r\n    nailsColor: '#000000',\r\n  };\r\n  currentPattern.draw();\r\n  downloadCanvas();\r\n\r\n  // Reset to the config before the download:\r\n  currentPattern.config = currentConfig;\r\n  currentPattern.draw();\r\n}\r\n\r\nfunction reset() {\r\n  if (confirm('Are you sure you wish to reset options to defaults?')) {\r\n    setCurrentPattern(currentPattern, { config: {} });\r\n  }\r\n}\r\n\r\nfunction onInputsChange({ withConfig = true } = {}) {\r\n  player.update(currentPattern);\r\n  const configQuery = withConfig ? serializeConfig(currentPattern) : null;\r\n  history.replaceState(\r\n    {\r\n      pattern: currentPattern.id,\r\n      config: configQuery,\r\n    },\r\n    currentPattern.name,\r\n    `?pattern=${currentPattern.id}${\r\n      withConfig && configQuery\r\n        ? `&config=${encodeURIComponent(configQuery)}`\r\n        : ''\r\n    }`\r\n  );\r\n}\r\n\r\nfunction setCurrentPattern(pattern, setPatternOptions) {\r\n  selectPattern(pattern, setPatternOptions);\r\n  history.pushState(\r\n    { pattern: pattern.id },\r\n    pattern.name,\r\n    '?pattern=' + pattern.id\r\n  );\r\n}\r\n\r\nfunction initSize() {\r\n  sizeControls.element.addEventListener('sizechange', ({ detail }) => {\r\n    setSize(detail);\r\n  });\r\n}\r\n\r\nfunction setSize(size) {\r\n  if (size.width && size.height) {\r\n    canvasRenderer.setSize(size);\r\n    if (!elements.canvas.classList.contains('overflow')) {\r\n      elements.canvas.classList.add('overflow');\r\n    }\r\n  } else {\r\n    elements.canvas.classList.remove('overflow');\r\n    canvasRenderer.setSize(null);\r\n  }\r\n\r\n  currentPattern.draw();\r\n}\r\n\r\nfunction initRouting() {\r\n  window.addEventListener('popstate', ({ state }) => {\r\n    updateState(state);\r\n  });\r\n}\r\n\r\nfunction updateState(state) {\r\n  if (state?.pattern) {\r\n    const pattern = findPatternById(state.pattern);\r\n    selectPattern(pattern, {\r\n      draw: false,\r\n      config: state.config ? deserializeConfig(pattern, state.config) : {},\r\n    });\r\n\r\n    thumbnails.close();\r\n    currentPattern.draw();\r\n  } else {\r\n    unselectPattern();\r\n    thumbnails.open();\r\n  }\r\n}\r\n\r\nfunction findPatternById(patternId) {\r\n  const pattern = patterns.find(({ id }) => id === patternId);\r\n  if (!pattern) {\r\n    throw new Error(`Pattern with id \"${patternId}\" not found!`);\r\n  }\r\n  return pattern;\r\n}\r\n\r\nfunction selectPattern(pattern, { config, draw = true } = {}) {\r\n  const isFirstTime = !currentPattern;\r\n\r\n  currentPattern = pattern;\r\n  if (config) {\r\n    currentPattern.setConfig(config);\r\n  }\r\n  if (controls) {\r\n    controls.destroy();\r\n  }\r\n  controls = new EditorControls({ pattern, config });\r\n  controls.addEventListener('input', () => currentPattern.draw());\r\n  controls.addEventListener('change', onInputsChange);\r\n\r\n  if (pattern.link) {\r\n    elements.patternLink.setAttribute('href', pattern.link);\r\n    elements.patternLink.innerText = pattern.linkText ?? 'Example';\r\n    unHide(elements.patternLink);\r\n  } else {\r\n    hide(elements.patternLink);\r\n  }\r\n\r\n  if (draw) {\r\n    requestAnimationFrame(() => {\r\n      currentPattern.draw();\r\n    });\r\n  }\r\n\r\n  player.update(currentPattern, { draw: false });\r\n  thumbnails.setCurrentPattern(pattern);\r\n  document.title = `${pattern.name} - String Art Studio`;\r\n  document.body.setAttribute('data-pattern', pattern.id);\r\n\r\n  if (isFirstTime) {\r\n    initPattern();\r\n    document.body.querySelectorAll('.pattern_only').forEach(unHide);\r\n  }\r\n}\r\n\r\nfunction unHide(element) {\r\n  element.removeAttribute('hidden');\r\n}\r\n\r\nfunction hide(element) {\r\n  element.setAttribute('hidden', 'hidden');\r\n}\r\n\r\nfunction unselectPattern() {\r\n  currentPattern = null;\r\n  canvasRenderer.clear();\r\n  hide(elements.patternLink);\r\n  thumbnails.setCurrentPattern(null);\r\n  controls && controls.destroy();\r\n  document.body.querySelectorAll('.pattern_only').forEach(hide);\r\n  document.body.removeAttribute('data-pattern');\r\n}\r\n","export default class Player {\r\n  constructor(parentEl) {\r\n    this.elements = {\r\n      player: parentEl,\r\n      step: parentEl.querySelector('#step'),\r\n      //stepInstructions: parentEl.querySelector('#step_instructions'),\r\n      playerPosition: parentEl.querySelector('#player_position'),\r\n      playBtn: parentEl.querySelector('#play_btn'),\r\n      pauseBtn: parentEl.querySelector('#pause_btn'),\r\n      text: parentEl.querySelector('#player_text'),\r\n    };\r\n    this.stepCount = 0;\r\n    this._isPlaying = false;\r\n\r\n    this.elements.playerPosition.addEventListener('input', ({ target }) => {\r\n      this.goto(+target.value);\r\n    });\r\n\r\n    this.elements.playBtn.addEventListener('click', () => {\r\n      this.play();\r\n    });\r\n\r\n    this.elements.pauseBtn.addEventListener('click', () => {\r\n      this.pause();\r\n    });\r\n  }\r\n\r\n  updateStatus(isPlaying) {\r\n    if (this._isPlaying !== isPlaying) {\r\n      this.elements.player.classList.toggle('playing');\r\n      this._isPlaying = isPlaying;\r\n    }\r\n  }\r\n\r\n  update(stringArt, { draw = true } = {}) {\r\n    this.stringArt = stringArt;\r\n    this.stepCount = stringArt.getStepCount();\r\n    this.elements.playerPosition.setAttribute('max', this.stepCount);\r\n    this.elements.step.innerText = `${this.stepCount}/${this.stepCount}`;\r\n    this.elements.text.style.removeProperty('width');\r\n    this.elements.text.style.width =\r\n      (this.elements.text.clientWidth || 70) + 'px';\r\n    this.goto(this.stepCount, { updateStringArt: draw });\r\n  }\r\n\r\n  updatePosition(position) {\r\n    this.elements.step.innerText = `${position}/${this.stepCount}`;\r\n    this.elements.playerPosition.value = position;\r\n  }\r\n\r\n  goto(position, { updateStringArt = true } = {}) {\r\n    this.pause();\r\n    this.updatePosition(position);\r\n    if (updateStringArt) {\r\n      this.stringArt.goto(position);\r\n    }\r\n  }\r\n\r\n  setInstructions(instructions) {\r\n    // this.elements.stepInstructions.innerText = instructions;\r\n  }\r\n\r\n  play() {\r\n    this.updateStatus(true);\r\n    cancelAnimationFrame(this.renderRafId);\r\n\r\n    if (this.stringArt.position === this.stepCount) {\r\n      this.stringArt.goto(0);\r\n    }\r\n\r\n    const self = this;\r\n\r\n    step();\r\n\r\n    function step() {\r\n      if (!self.stringArt.drawNext().done) {\r\n        self.renderRafId = requestAnimationFrame(step);\r\n      } else {\r\n        self.updateStatus(false);\r\n      }\r\n      self.updatePosition(self.stringArt.position);\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    cancelAnimationFrame(this.renderRafId);\r\n    this.updateStatus(false);\r\n  }\r\n\r\n  toggle() {\r\n    if (this._isPlaying) {\r\n      this.pause();\r\n    } else {\r\n      this.play();\r\n    }\r\n  }\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import Spiral from './string_art_types/Spiral.js';\r\nimport Spirals from './string_art_types/Spirals.js';\r\nimport Wave from './string_art_types/Wave.js';\r\nimport Eye from './string_art_types/Eye.js';\r\nimport Mandala from './string_art_types/Mandala.js';\r\nimport Star from './string_art_types/Star.js';\r\nimport Assymetry from './string_art_types/Assymetry.js';\r\nimport Freestyle from './string_art_types/Freestyle.js';\r\nimport PolygonPattern from './string_art_types/PolygonPattern.js';\r\nimport Flower from './string_art_types/Flower.js';\r\nimport MaurerRose from './string_art_types/MaurerRose.js';\r\nimport FlowerOfLife from './string_art_types/FlowerOfLife.js';\r\nimport Comet from './string_art_types/Comet.js';\r\n\r\nconst patternTypes = [\r\n  Star,\r\n  Assymetry,\r\n  Mandala,\r\n  Spiral,\r\n  Spirals,\r\n  Wave,\r\n  Eye,\r\n  Freestyle,\r\n  PolygonPattern,\r\n  Flower,\r\n  MaurerRose,\r\n  FlowerOfLife,\r\n  Comet,\r\n];\r\n\r\nexport default patternTypes;\r\n","import Color from '../helpers/Color.js';\r\nimport StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\n\r\nconst COLOR_CONFIG = Color.getConfig({\r\n  defaults: {\r\n    isMultiColor: true,\r\n    colorCount: 7,\r\n    color: '#ffbb29',\r\n    multicolorRange: '21',\r\n    multicolorStart: 32,\r\n    multicolorByLightness: true,\r\n    minLightness: 36,\r\n    maxLightness: 98,\r\n  },\r\n  exclude: ['repeatColors', 'mirrorColors'],\r\n});\r\n\r\nexport default class Spiral extends StringArt {\r\n  id = 'spiral';\r\n  name = 'Spiral';\r\n  link =\r\n    'https://www.etsy.com/il-en/listing/840974781/boho-wall-decor-artwork-spiral-round';\r\n  controls = [\r\n    {\r\n      ...Circle.nailsConfig,\r\n      defaultValue: 200,\r\n    },\r\n    {\r\n      key: 'repetition',\r\n      label: 'Repetition',\r\n      defaultValue: 5,\r\n      type: 'range',\r\n      attr: { min: 1, max: 20, step: 1 },\r\n    },\r\n    {\r\n      key: 'innerLength',\r\n      label: 'Spiral thickness',\r\n      defaultValue: 0.5,\r\n      type: 'range',\r\n      attr: {\r\n        min: ({ config: { n } }) => 1 / n,\r\n        max: 1,\r\n        step: ({ config: { n } }) => 1 / n,\r\n      },\r\n      displayValue: ({ n, innerLength }) => Math.round(n * innerLength),\r\n    },\r\n    {\r\n      ...Circle.rotationConfig,\r\n      defaultValue: 0.75,\r\n    },\r\n    Circle.distortionConfig,\r\n    COLOR_CONFIG,\r\n  ];\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    const { n, rotation, layers, margin, colorCount, repetition, distortion } =\r\n      this.config;\r\n    this.layersCount = layers ?? 1;\r\n    this.realRepetition = repetition * 2 - 1;\r\n\r\n    const circleConfig = {\r\n      size: this.size,\r\n      n,\r\n      margin,\r\n      rotation,\r\n      distortion,\r\n    };\r\n\r\n    if (this.circle) {\r\n      this.circle.setConfig(circleConfig);\r\n    } else {\r\n      this.circle = new Circle(circleConfig);\r\n    }\r\n\r\n    this.color = new Color({\r\n      ...this.config,\r\n      colorCount: layers ?? colorCount,\r\n    });\r\n\r\n    if (colorCount) {\r\n      this.colorMap = this.color.getColorMap({\r\n        stepCount: this.getStepCount(),\r\n        colorCount,\r\n      });\r\n    }\r\n  }\r\n\r\n  *drawSpiral({ shift = 0, color = '#ffffff' } = {}) {\r\n    const { innerLength, n } = this.config;\r\n\r\n    let currentInnerLength = Math.round(innerLength * n);\r\n    let repetitionCount = 0;\r\n    this.renderer.setColor(color);\r\n    let prevPointIndex = shift;\r\n    let prevPoint = this.circle.getPoint(prevPointIndex);\r\n    let isPrevPoint = false;\r\n\r\n    for (let i = 0; currentInnerLength > 0; i++) {\r\n      if (this.colorMap) {\r\n        const stepColor = this.colorMap.get(i);\r\n        if (stepColor) {\r\n          this.renderer.setColor(stepColor);\r\n        }\r\n      }\r\n\r\n      prevPointIndex = isPrevPoint\r\n        ? prevPointIndex - currentInnerLength + 1\r\n        : prevPointIndex + currentInnerLength;\r\n\r\n      if (repetitionCount === this.realRepetition) {\r\n        currentInnerLength--;\r\n        repetitionCount = 0;\r\n        prevPointIndex++;\r\n      } else {\r\n        repetitionCount++;\r\n      }\r\n\r\n      const nextPoint = this.circle.getPoint(prevPointIndex);\r\n\r\n      this.renderer.renderLines(prevPoint, nextPoint);\r\n      prevPoint = nextPoint;\r\n\r\n      yield i;\r\n      isPrevPoint = !isPrevPoint;\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    yield* this.drawSpiral({\r\n      color: this.color.getColor(0),\r\n    });\r\n  }\r\n\r\n  getStepCount() {\r\n    const { innerLength, repetition, n, layers = 1 } = this.config;\r\n    return Math.round(layers * n * (innerLength * 2) * repetition);\r\n  }\r\n\r\n  drawNails() {\r\n    this.circle.drawNails(this.nails);\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 60,\r\n  };\r\n}\r\n","const COLOR_CONTROLS = [\r\n  {\r\n    key: 'isMultiColor',\r\n    label: 'Use multiple colors',\r\n    defaultValue: false,\r\n    type: 'checkbox',\r\n  },\r\n  {\r\n    key: 'colorCount',\r\n    label: 'Colors count',\r\n    defaultValue: 7,\r\n    type: 'range',\r\n    attr: {\r\n      min: 1,\r\n      max: 20,\r\n      step: 1,\r\n    },\r\n    show: ({ isMultiColor }) => isMultiColor,\r\n  },\r\n  {\r\n    key: 'color',\r\n    label: 'String color',\r\n    defaultValue: '#ff4d00',\r\n    type: 'color',\r\n    show: ({ isMultiColor }) => !isMultiColor,\r\n  },\r\n  {\r\n    key: 'multicolorRange',\r\n    label: 'Multicolor range',\r\n    defaultValue: 360,\r\n    type: 'range',\r\n    attr: {\r\n      min: 1,\r\n      max: 360,\r\n      step: 1,\r\n    },\r\n    show: ({ isMultiColor }) => isMultiColor,\r\n  },\r\n  {\r\n    key: 'multicolorStart',\r\n    label: 'Multicolor start',\r\n    defaultValue: 0,\r\n    type: 'range',\r\n    attr: {\r\n      min: 0,\r\n      max: 360,\r\n      step: 1,\r\n    },\r\n    show: ({ isMultiColor }) => isMultiColor,\r\n  },\r\n  {\r\n    key: 'saturation',\r\n    label: 'Saturation',\r\n    defaultValue: 100,\r\n    type: 'range',\r\n    attr: {\r\n      min: 0,\r\n      max: 100,\r\n      step: 1,\r\n    },\r\n    show: ({ isMultiColor }) => isMultiColor,\r\n  },\r\n  {\r\n    key: 'lightness',\r\n    label: 'Lightness',\r\n    type: 'group',\r\n    defaultValue: 'minimized',\r\n    show: ({ isMultiColor }) => isMultiColor,\r\n    children: [\r\n      {\r\n        key: 'multicolorByLightness',\r\n        label: 'Multi lightness',\r\n        defaultValue: false,\r\n        type: 'checkbox',\r\n        show: ({ isMultiColor }) => isMultiColor,\r\n      },\r\n      {\r\n        key: 'minLightness',\r\n        label: 'Minimum lightness',\r\n        defaultValue: 0,\r\n        type: 'range',\r\n        attr: {\r\n          min: 0,\r\n          max: 100,\r\n          step: 1,\r\n        },\r\n        show: ({ multicolorByLightness, isMultiColor }) =>\r\n          multicolorByLightness && isMultiColor,\r\n      },\r\n      {\r\n        key: 'maxLightness',\r\n        label: 'Maximum lightness',\r\n        defaultValue: 100,\r\n        type: 'range',\r\n        attr: {\r\n          min: 0,\r\n          max: 100,\r\n          step: 1,\r\n        },\r\n        show: ({ multicolorByLightness, isMultiColor }) =>\r\n          multicolorByLightness && isMultiColor,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'colorOrderGroup',\r\n    type: 'group',\r\n    label: 'Order',\r\n    defaultValue: 'minimized',\r\n    show: ({ isMultiColor }) => isMultiColor,\r\n    children: [\r\n      {\r\n        key: 'reverseColors',\r\n        label: 'Reverse colors order',\r\n        defaultValue: false,\r\n        type: 'checkbox',\r\n        show: ({ isMultiColor }) => isMultiColor,\r\n      },\r\n      {\r\n        key: 'repeatColors',\r\n        label: 'Repeat colors',\r\n        defaultValue: false,\r\n        type: 'checkbox',\r\n        show: ({ isMultiColor }) => isMultiColor,\r\n      },\r\n      {\r\n        key: 'mirrorColors',\r\n        label: 'Mirror Colors',\r\n        defaultValue: false,\r\n        type: 'checkbox',\r\n        show: ({ isMultiColor, repeatColors }) => isMultiColor && repeatColors,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default class Color {\r\n  constructor(config) {\r\n    this.config = config;\r\n    const {\r\n      multicolorRange,\r\n      colorCount,\r\n      multicolorByLightness,\r\n      minLightness = 0,\r\n      maxLightness = 100,\r\n      multicolorStart,\r\n      darkMode,\r\n      saturation,\r\n      reverseColors,\r\n      repeatColors,\r\n      mirrorColors,\r\n      isMultiColor,\r\n    } = config;\r\n\r\n    if (isMultiColor) {\r\n      this.multiColorStep = multicolorRange / colorCount;\r\n      this.multiColorLightnessStep = multicolorByLightness\r\n        ? (maxLightness - minLightness) / (Math.max(colorCount, 2) - 1)\r\n        : 1;\r\n\r\n      this.colors = new Array(colorCount).fill(null).map((_, colorIndex) => {\r\n        const lightness = multicolorByLightness\r\n          ? minLightness + this.multiColorLightnessStep * colorIndex\r\n          : darkMode\r\n          ? 50\r\n          : 40;\r\n        return `hsl(${\r\n          multicolorStart + colorIndex * this.multiColorStep\r\n        }, ${saturation}%, ${lightness}%)`;\r\n      });\r\n\r\n      if (repeatColors && mirrorColors) {\r\n        const [_firstColor, ...restColors] = this.colors;\r\n        restColors.pop();\r\n        this.colors = [...this.colors, ...restColors.reverse()];\r\n      }\r\n\r\n      if (reverseColors) {\r\n        this.colors.reverse();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the color to be used in the provided layer index. If no multiColor is used, will use the 'color' config property.\r\n   * @param {number} colorIndex\r\n   * @returns string\r\n   */\r\n  getColor(colorIndex) {\r\n    const { isMultiColor, colorCount, color, repeatColors, mirrorColors } =\r\n      this.config;\r\n\r\n    if (!isMultiColor) {\r\n      return color;\r\n    }\r\n\r\n    if (colorIndex >= colorCount) {\r\n      colorIndex = repeatColors\r\n        ? colorIndex % this.colors.length\r\n        : this.colors.length - 1;\r\n    }\r\n\r\n    return this.colors[colorIndex];\r\n  }\r\n\r\n  getColorMap({ stepCount, colorCount }) {\r\n    if (!colorCount) {\r\n      throw new Error(\"Can't get color map, no colorCount provided!\");\r\n    }\r\n    const stepsPerColor = Math.floor(stepCount / colorCount);\r\n    const colorMap = new Map();\r\n    for (let i = 0; i < colorCount; i++) {\r\n      colorMap.set(i * stepsPerColor, this.getColor(i));\r\n    }\r\n    return colorMap;\r\n  }\r\n\r\n  static getConfig({ include, exclude, defaults = {}, customControls }) {\r\n    const controls = getControls();\r\n\r\n    return {\r\n      key: 'colorGroup',\r\n      label: 'Color',\r\n      type: 'group',\r\n      children: [...(customControls ?? []), ...controls],\r\n    };\r\n\r\n    function getControls(controlsConfig = COLOR_CONTROLS) {\r\n      return controlsConfig\r\n        .filter(\r\n          ({ key }) =>\r\n            (!exclude || !exclude.includes(key)) &&\r\n            (!include || include.includes(key))\r\n        )\r\n        .map(control => {\r\n          const finalControl = {\r\n            ...control,\r\n            defaultValue: defaults[control.key] ?? control.defaultValue,\r\n          };\r\n\r\n          if (control.type === 'group') {\r\n            finalControl.children = getControls(control.children);\r\n          }\r\n          return Object.freeze(finalControl);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import Nails from './Nails.js';\r\nimport Renderer from './renderers/Renderer.js';\r\n\r\nconst COLORS = {\r\n  dark: '#0e0e0e',\r\n  light: '#ffffff',\r\n};\r\n\r\nconst COMMON_CONFIG_CONTROLS = [\r\n  {\r\n    key: 'strings',\r\n    label: 'Strings',\r\n    type: 'group',\r\n    defaultValue: 'minimized',\r\n    children: [\r\n      {\r\n        key: 'showStrings',\r\n        label: 'Show strings',\r\n        defaultValue: true,\r\n        type: 'checkbox',\r\n        isDisabled: ({ showNails }) => !showNails,\r\n      },\r\n      {\r\n        key: 'stringWidth',\r\n        label: 'String width',\r\n        defaultValue: 1,\r\n        type: 'range',\r\n        attr: { min: 0.2, max: 4, step: 0.1 },\r\n        show: ({ showStrings }) => showStrings,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'nails',\r\n    label: 'Nails',\r\n    type: 'group',\r\n    defaultValue: 'minimized',\r\n    children: [\r\n      {\r\n        key: 'showNails',\r\n        label: 'Show nails',\r\n        defaultValue: true,\r\n        type: 'checkbox',\r\n        isDisabled: ({ showStrings }) => !showStrings,\r\n      },\r\n      {\r\n        key: 'showNailNumbers',\r\n        label: 'Show nail numbers',\r\n        defaultValue: false,\r\n        type: 'checkbox',\r\n        show: ({ showNails }) => showNails,\r\n      },\r\n      {\r\n        key: 'nailNumbersFontSize',\r\n        label: 'Nail numbers font size',\r\n        defaultValue: 10,\r\n        type: 'range',\r\n        attr: { min: 6, max: 24, step: 0.5 },\r\n        displayValue: ({ nailNumbersFontSize }) => `${nailNumbersFontSize}px`,\r\n        show: ({ showNails, showNailNumbers }) => showNails && showNailNumbers,\r\n      },\r\n      {\r\n        key: 'margin',\r\n        label: 'Margin',\r\n        defaultValue: 20,\r\n        type: 'number',\r\n        attr: { min: 0, max: 500, step: 1 },\r\n        displayValue: ({ margin }) => `${margin}px`,\r\n      },\r\n      {\r\n        key: 'nailRadius',\r\n        label: 'Nail size',\r\n        defaultValue: 1.5,\r\n        type: 'range',\r\n        attr: { min: 0.5, max: 5, step: 0.25 },\r\n        show: ({ showNails }) => showNails,\r\n      },\r\n      {\r\n        key: 'nailsColor',\r\n        label: 'Nails color',\r\n        defaultValue: '#ffffff',\r\n        type: 'color',\r\n        show: ({ showNails }) => showNails,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'background',\r\n    label: 'Background',\r\n    type: 'group',\r\n    defaultValue: 'minimized',\r\n    children: [\r\n      {\r\n        key: 'darkMode',\r\n        label: 'Dark mode',\r\n        defaultValue: true,\r\n        type: 'checkbox',\r\n        isDisabled: ({ enableBackground }) => !enableBackground,\r\n      },\r\n      {\r\n        key: 'customBackgroundColor',\r\n        label: 'Custom background color',\r\n        defaultValue: false,\r\n        type: 'checkbox',\r\n        isDisabled: ({ enableBackground }) => !enableBackground,\r\n      },\r\n      {\r\n        key: 'backgroundColor',\r\n        label: 'Background color',\r\n        defaultValue: COLORS.dark,\r\n        type: 'color',\r\n        show: ({ customBackgroundColor }) => customBackgroundColor,\r\n        isDisabled: ({ enableBackground }) => !enableBackground,\r\n      },\r\n      {\r\n        key: 'enableBackground',\r\n        label: 'Enable background',\r\n        defaultValue: true,\r\n        type: 'checkbox',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nclass StringArt {\r\n  constructor(renderer) {\r\n    if (!renderer) {\r\n      throw new Error('Renderer not specified!');\r\n    }\r\n\r\n    if (!(renderer instanceof Renderer)) {\r\n      throw new Error('Renderer is not an instance of Renderer!');\r\n    }\r\n\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  get configControls() {\r\n    return (this.controls ?? []).concat(COMMON_CONFIG_CONTROLS);\r\n  }\r\n\r\n  get controlsIndex() {\r\n    if (!this._controlsIndex) {\r\n      this._controlsIndex = getControlsIndex(this.controls);\r\n    }\r\n\r\n    return this._controlsIndex;\r\n  }\r\n\r\n  get defaultConfig() {\r\n    if (!this._defaultConfig) {\r\n      this._defaultConfig = Object.freeze(\r\n        Object.assign(flattenConfig(this.configControls), this.defaultValues)\r\n      );\r\n    }\r\n\r\n    return this._defaultConfig;\r\n  }\r\n\r\n  get config() {\r\n    return this._config ?? this.defaultConfig;\r\n  }\r\n\r\n  set config(value) {\r\n    this._config = Object.assign({}, this.defaultConfig, value);\r\n  }\r\n\r\n  setConfig(config) {\r\n    const currentConfig = this.config;\r\n    this.config = config;\r\n    if (this.onConfigChange) {\r\n      const changedControlKeys = Object.keys(currentConfig).filter(\r\n        key => config[key] !== currentConfig[key]\r\n      );\r\n\r\n      this.onConfigChange({\r\n        controls: changedControlKeys.map(key => ({\r\n          control: this.controlsIndex[key],\r\n          value: config[key],\r\n        })),\r\n      });\r\n    }\r\n  }\r\n\r\n  resetStructure() {}\r\n\r\n  onConfigChange({ controls }) {\r\n    if (controls.some(({ control }) => control.isStructural)) {\r\n      this.resetStructure();\r\n      if (\r\n        this.stepCount != null &&\r\n        controls.some(({ control }) => control.affectsStepCount !== false)\r\n      ) {\r\n        this.stepCount = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  onResize() {\r\n    this.resetStructure();\r\n  }\r\n\r\n  setConfigValue(controlKey, value) {\r\n    this._config = Object.freeze({\r\n      ...(this._config ?? this.defaultConfig),\r\n      [controlKey]: value,\r\n    });\r\n\r\n    if (this.onConfigChange) {\r\n      this.onConfigChange({\r\n        controls: [{ control: this.controlsIndex[controlKey], value }].filter(\r\n          ({ control }) => !!control\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  getSize() {\r\n    return this.renderer.getSize();\r\n  }\r\n\r\n  setUpDraw() {\r\n    const previousSize = this.size;\r\n    this.renderer.reset();\r\n    const [width, height] = (this.size = this.getSize());\r\n    Object.assign(this, this.size);\r\n    this.center = this.size.map(value => value / 2);\r\n\r\n    if (\r\n      previousSize &&\r\n      (previousSize[0] !== width || previousSize[1] !== height)\r\n    ) {\r\n      if (this.onResize) {\r\n        this.onResize();\r\n      }\r\n    }\r\n\r\n    if (this.nails) {\r\n      this.nails.setConfig(this.config);\r\n    } else {\r\n      this.nails = new Nails(this.renderer, this.config);\r\n    }\r\n\r\n    this.renderer.setLineWidth(this.config.stringWidth);\r\n  }\r\n\r\n  afterDraw() {\r\n    const { showNails, showNailNumbers } = this.config;\r\n    if (showNails) {\r\n      this.drawNails();\r\n      this.nails.fill({ drawNumbers: showNailNumbers });\r\n    }\r\n  }\r\n\r\n  initDraw() {\r\n    this.setUpDraw(this.config);\r\n    const {\r\n      showNails,\r\n      showNailNumbers,\r\n      darkMode,\r\n      backgroundColor,\r\n      customBackgroundColor,\r\n      enableBackground,\r\n    } = this.config;\r\n\r\n    if (enableBackground) {\r\n      this.renderer.setBackground(\r\n        customBackgroundColor\r\n          ? backgroundColor\r\n          : darkMode\r\n          ? COLORS.dark\r\n          : COLORS.light\r\n      );\r\n    }\r\n\r\n    if (showNails) {\r\n      this.drawNails();\r\n      this.nails.fill({ drawNumbers: showNailNumbers });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draws the string art\r\n   * @param { step: number } renderConfig configuration for rendering. Accepts the step to render (leave undefined or null to render all)\r\n   */\r\n  draw({ position = Infinity } = {}) {\r\n    this.initDraw();\r\n    const { showStrings } = this.config;\r\n\r\n    if (showStrings) {\r\n      this.stringsIterator = this.generateStrings();\r\n      this.position = 0;\r\n\r\n      while (!this.drawNext().done && this.position < position);\r\n      this.afterDraw();\r\n    }\r\n  }\r\n\r\n  goto(position) {\r\n    if (position === this.position) {\r\n      return;\r\n    }\r\n\r\n    if (this.stringsIterator && position > this.position) {\r\n      while (!this.drawNext().done && this.position < position);\r\n    } else {\r\n      this.draw({ position });\r\n    }\r\n  }\r\n\r\n  drawNext() {\r\n    const result = this.stringsIterator.next();\r\n\r\n    if (result.done) {\r\n      this.afterDraw();\r\n    } else {\r\n      this.position++;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  generateStrings() {\r\n    throw new Error('generateStrings method not defined!');\r\n  }\r\n\r\n  getStepCount() {\r\n    throw new Error(\r\n      `'getStepCount' method not implemented for string art type \"${this.name}\"`\r\n    );\r\n  }\r\n}\r\n\r\nfunction flattenConfig(configControls) {\r\n  return configControls.reduce(\r\n    (config, { key, defaultValue, children }) =>\r\n      children\r\n        ? {\r\n            ...config,\r\n            ...flattenConfig(children),\r\n          }\r\n        : {\r\n            ...config,\r\n            [key]: defaultValue,\r\n          },\r\n    {}\r\n  );\r\n}\r\n\r\nfunction getControlsIndex(configControls) {\r\n  return configControls.reduce(\r\n    (controlsIndex, control) =>\r\n      control.children\r\n        ? {\r\n            ...controlsIndex,\r\n            ...getControlsIndex(control.children),\r\n          }\r\n        : {\r\n            ...controlsIndex,\r\n            [control.key]: control,\r\n          },\r\n    {}\r\n  );\r\n}\r\n\r\nexport default StringArt;\r\n","const NUMBER_MARGIN = 4;\r\n\r\nexport default class Nails {\r\n  constructor(renderer, config) {\r\n    this.setConfig(config);\r\n    this.nails = [];\r\n    this.addedPoints = new Set();\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  setConfig({ nailRadius, nailsColor, nailNumbersFontSize }) {\r\n    this.nailRadius = nailRadius;\r\n    this.nailsColor = nailsColor;\r\n    this.nailNumbersFontSize = nailNumbersFontSize;\r\n    this.nails = [];\r\n    if (this.addedPoints) {\r\n      this.addedPoints.clear();\r\n    }\r\n  }\r\n\r\n  // Adds a nail to be rendered. nail: { point, number }\r\n  addNail(nail) {\r\n    const nailPoint = nail.point.map(Math.round).join('_');\r\n    if (!this.addedPoints.has(nailPoint)) {\r\n      this.nails.push(nail);\r\n      this.addedPoints.add(nailPoint);\r\n    }\r\n  }\r\n\r\n  fill({ drawNumbers = true } = {}) {\r\n    this.renderer.renderNails(this.nails, {\r\n      color: this.nailsColor,\r\n      fontSize: this.nailNumbersFontSize,\r\n      radius: this.nailRadius,\r\n      renderNumbers: drawNumbers,\r\n      margin: NUMBER_MARGIN,\r\n    });\r\n\r\n    this.nails = [];\r\n    this.addedPoints.clear();\r\n  }\r\n}\r\n","export default class Renderer {\r\n  constructor(parentElement) {\r\n    this.parentElement = parentElement;\r\n  }\r\n\r\n  destroy() {\r\n    this.parentElement.removeElement(this.element);\r\n  }\r\n\r\n  get element() {\r\n    throw new Error('element getter not implemented!');\r\n  }\r\n\r\n  reset() {}\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  setLineWidth(width) {}\r\n\r\n  setBackground(color) {}\r\n\r\n  renderLines(startPosition, ...positions) {\r\n    throw new Error('Renderer \"renderLines\" method not implemented!');\r\n  }\r\n\r\n  /**\r\n   * Renders the nails for the string art\r\n   * @param {[{ point: [x: number, y: number], number: string }]} nails\r\n   * @param {*} param1\r\n   */\r\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin }) {\r\n    throw new Error('Renderer \"renderNails\" method not implemented!');\r\n  }\r\n\r\n  getSize() {\r\n    const { width, height } = this.parentElement.getBoundingClientRect();\r\n    return [width, height];\r\n  }\r\n\r\n  setSize(size) {\r\n    this.size = size;\r\n\r\n    this.element.removeAttribute('width');\r\n    this.element.removeAttribute('height');\r\n\r\n    if (size) {\r\n      this.element.style.width = `${size.width}px`;\r\n      this.element.style.height = `${size.height}px`;\r\n    } else {\r\n      this.element.removeAttribute('style');\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    throw new Error('Renderer \"clear\" method not implemented!');\r\n  }\r\n\r\n  toDataURL() {\r\n    throw new Error('Renderer \"toDataURL\" method not implemented!');\r\n  }\r\n}\r\n","import Nails from '../Nails.js';\r\nimport easing from './easing.js';\r\nimport { fitInside, PI2 } from './math_utils.js';\r\n\r\nexport default class Circle {\r\n  constructor(config) {\r\n    this.setConfig(config);\r\n  }\r\n\r\n  getPoint(index = 0) {\r\n    const realIndex = this.getNailIndex(index);\r\n\r\n    if (this.points.has(index)) {\r\n      return this.points.get(index);\r\n    }\r\n\r\n    const angle =\r\n      this.easingFunction(realIndex / this.config.n) * PI2 + this.rotationAngle;\r\n\r\n    const point = [\r\n      this.center[0] + Math.sin(angle) * this.xyRadius[0],\r\n      this.center[1] + Math.cos(angle) * this.xyRadius[1],\r\n    ];\r\n\r\n    this.points.set(index, point);\r\n    return point;\r\n  }\r\n\r\n  getNailIndex(index = 0) {\r\n    let realIndex = this.isReverse ? this.config.n - 1 - index : index;\r\n    if (realIndex > this.config.n - 1) {\r\n      realIndex = realIndex % this.config.n;\r\n    }\r\n    return realIndex;\r\n  }\r\n\r\n  setConfig(config) {\r\n    const serializedConfig = this._serializeConfig(config);\r\n    if (serializedConfig !== this.serializedConfig) {\r\n      const {\r\n        n,\r\n        size,\r\n        margin = 0,\r\n        rotation = 0,\r\n        center: configCenter,\r\n        radius,\r\n        reverse = false,\r\n      } = config;\r\n      const center = configCenter ?? size.map(v => v / 2);\r\n      const clampedRadius = radius ?? Math.min(...center) - margin;\r\n      let xyRadius = [clampedRadius, clampedRadius];\r\n\r\n      if (config.distortion) {\r\n        const distortedBox =\r\n          config.distortion < 0\r\n            ? [clampedRadius * (1 - Math.abs(config.distortion)), clampedRadius]\r\n            : [clampedRadius / (1 - config.distortion), clampedRadius];\r\n\r\n        xyRadius = fitInside(\r\n          distortedBox,\r\n          center.map(v => v - margin)\r\n        );\r\n      }\r\n\r\n      const props = {\r\n        center,\r\n        radius: clampedRadius,\r\n        xyRadius,\r\n        indexAngle: PI2 / n,\r\n        rotationAngle: -PI2 * rotation,\r\n        isReverse: reverse,\r\n      };\r\n\r\n      const easingFunction = config.displacementFunc\r\n        ? easing[config.displacementFunc]\r\n        : easing.linear;\r\n      const easingParams = [];\r\n      if (easingFunction.requirePower) {\r\n        easingParams.push(config.displacementMag);\r\n      }\r\n      if (easingFunction.requireFastArea) {\r\n        easingParams.push(config.displacementFastArea);\r\n      }\r\n      const easingFunctionWithParams = easingParams.length\r\n        ? easingFunction.bind(null, ...easingParams)\r\n        : easingFunction;\r\n\r\n      this.easingFunction = easingFunctionWithParams;\r\n      this.config = config;\r\n      this.serializedConfig = serializedConfig;\r\n      Object.assign(this, props);\r\n      if (this.points) {\r\n        this.points.clear();\r\n      } else {\r\n        this.points = new Map();\r\n      }\r\n    }\r\n  }\r\n\r\n  _serializeConfig({\r\n    n,\r\n    size,\r\n    margin = 0,\r\n    rotation = 0,\r\n    center,\r\n    radius,\r\n    reverse = false,\r\n    distortion = 0,\r\n    displacementFunc,\r\n    displacementMag,\r\n    displacementFastArea,\r\n  }) {\r\n    return [\r\n      size?.join(','),\r\n      center?.join(','),\r\n      radius,\r\n      margin,\r\n      n,\r\n      rotation,\r\n      reverse,\r\n      distortion,\r\n    ]\r\n      .concat(\r\n        displacementFunc === 'linear'\r\n          ? []\r\n          : [displacementFunc, displacementMag, displacementFastArea]\r\n      )\r\n      .join('_');\r\n  }\r\n\r\n  /**\r\n   * Given a Nails instance, uses it to draw the nails of this Circle\r\n   * @param {Nails} nails\r\n   * @param {{nailsNumberStart?: number, getNumber?: Function}} param1\r\n   */\r\n  drawNails(nails, { nailsNumberStart = 0, getNumber } = {}) {\r\n    for (let i = 0; i < this.config.n; i++) {\r\n      nails.addNail({\r\n        point: this.getPoint(i),\r\n        number: getNumber ? getNumber(i) : i + nailsNumberStart,\r\n      });\r\n    }\r\n  }\r\n\r\n  *drawRing(renderer, { ringSize, color }) {\r\n    const { n } = this.config;\r\n    const ringDistance = Math.floor(ringSize * n);\r\n\r\n    let prevPoint;\r\n    let prevPointIndex = 0;\r\n    let isPrevSide = false;\r\n    renderer.setColor(color);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      if (!prevPoint) {\r\n        prevPoint = this.getPoint(0);\r\n      }\r\n\r\n      const startPoint = prevPoint;\r\n      const positions = [];\r\n      prevPointIndex = isPrevSide ? i : prevPointIndex + ringDistance;\r\n      prevPoint = this.getPoint(prevPointIndex);\r\n      positions.push(prevPoint);\r\n\r\n      if (i < n - 1) {\r\n        prevPointIndex++;\r\n        prevPoint = this.getPoint(prevPointIndex);\r\n        positions.push(prevPoint);\r\n      }\r\n\r\n      renderer.renderLines(startPoint, ...positions);\r\n      yield;\r\n\r\n      isPrevSide = !isPrevSide;\r\n    }\r\n  }\r\n\r\n  static rotationConfig = Object.freeze({\r\n    key: 'rotation',\r\n    label: 'Rotation',\r\n    defaultValue: 0,\r\n    type: 'range',\r\n    attr: {\r\n      min: 0,\r\n      max: 1 + 1 / 360,\r\n      step: 1 / 360,\r\n    },\r\n    displayValue: (config, { key }) => `${Math.round(config[key] * 360)}°`,\r\n    isStructural: true,\r\n    affectsStepCount: false,\r\n  });\r\n\r\n  static nailsConfig = Object.freeze({\r\n    key: 'n',\r\n    label: 'Number of nails',\r\n    defaultValue: 144,\r\n    type: 'range',\r\n    attr: {\r\n      min: 3,\r\n      max: 300,\r\n      step: 1,\r\n    },\r\n    isStructural: true,\r\n  });\r\n\r\n  static displacementConfig = Object.freeze({\r\n    key: 'displacement',\r\n    label: 'Displacement',\r\n    type: 'group',\r\n    children: [\r\n      {\r\n        key: 'displacementFunc',\r\n        label: 'Displacement function',\r\n        defaultValue: 'linear',\r\n        type: 'select',\r\n        options: Object.keys(easing),\r\n        isStructural: true,\r\n        affectsStepCount: false,\r\n      },\r\n      {\r\n        key: 'displacementMag',\r\n        label: 'Displacement magnitude',\r\n        defaultValue: 3,\r\n        type: 'range',\r\n        attr: {\r\n          min: 0,\r\n          max: 10,\r\n          step: 0.1,\r\n        },\r\n        show: ({ displacementFunc }) => easing[displacementFunc].requirePower,\r\n        isStructural: true,\r\n        affectsStepCount: false,\r\n      },\r\n      {\r\n        key: 'displacementFastArea',\r\n        label: 'Displacement fast area',\r\n        defaultValue: 0.4,\r\n        type: 'range',\r\n        attr: {\r\n          min: 0,\r\n          max: 0.5,\r\n          step: 0.01,\r\n        },\r\n        show: ({ displacementFunc }) =>\r\n          easing[displacementFunc].requireFastArea,\r\n        isStructural: true,\r\n        affectsStepCount: false,\r\n      },\r\n    ],\r\n  });\r\n\r\n  static distortionConfig = Object.freeze({\r\n    key: 'distortion',\r\n    label: 'Distortion',\r\n    defaultValue: 0,\r\n    type: 'range',\r\n    attr: {\r\n      min: -0.99,\r\n      max: 0.99,\r\n      step: 0.01,\r\n    },\r\n    isStructural: true,\r\n    affectsStepCount: false,\r\n  });\r\n}\r\n","const easing = {\r\n  linear: x => x,\r\n  inOutCirc(x) {\r\n    return x < 0.5\r\n      ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\r\n      : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\r\n  },\r\n  easeOutQuint(x) {\r\n    return 1 - Math.pow(1 - x, 5);\r\n  },\r\n  fastSlowFast(t) {\r\n    // Clamp t to [0,1] just to be safe\r\n    t = Math.max(0, Math.min(1, t));\r\n    // Custom easing formula: accelerates, slows in middle, then accelerates again\r\n    return 0.5 * (1 - Math.cos(Math.PI * t)) ** 1.5;\r\n  },\r\n  fastInOutSquare(x) {\r\n    return x <= 0.5\r\n      ? (1 - Math.pow(1 - x * 2, 2)) / 2\r\n      : 0.5 + Math.pow(x * 2 - 1, 2) / 2;\r\n  },\r\n  fastInOutCubic(x) {\r\n    return x <= 0.5\r\n      ? (1 - Math.pow(1 - x * 2, 3)) / 2\r\n      : 0.5 + Math.pow(x * 2 - 1, 3) / 2;\r\n  },\r\n  fastInOutQuint(x) {\r\n    return x <= 0.5\r\n      ? (1 - Math.pow(1 - x * 2, 5)) / 2\r\n      : 0.5 + Math.pow(x * 2 - 1, 5) / 2;\r\n  },\r\n  fastInOut(pow, x) {\r\n    return x <= 0.5\r\n      ? (1 - Math.pow(1 - x * 2, pow)) / 2\r\n      : 0.5 + Math.pow(x * 2 - 1, pow) / 2;\r\n  },\r\n  fastInOutFixed(pow, fastArea, x) {\r\n    if (x > fastArea && x < 1 - fastArea) {\r\n      const y1 = (1 - Math.pow(1 - fastArea * 2, pow)) / 2;\r\n      const y2 = 0.5 + Math.pow((1 - fastArea) * 2 - 1, pow) / 2;\r\n\r\n      return y1 + ((x - fastArea) * (y2 - y1)) / (1 - 2 * fastArea);\r\n    }\r\n    return x <= fastArea\r\n      ? (1 - Math.pow(1 - x * 2, pow)) / 2\r\n      : 0.5 + Math.pow(x * 2 - 1, pow) / 2;\r\n  },\r\n};\r\n\r\neasing.fastInOut.requirePower = true;\r\neasing.fastInOutFixed.requirePower = true;\r\neasing.fastInOutFixed.requireFastArea = true;\r\n\r\nexport default easing;\r\n","/**\r\n * Returns the greatest common divisor of two integers\r\n * https://en.wikipedia.org/wiki/Euclidean_algorithm\r\n * @param {number} int1\r\n * @param {number} int2\r\n * @returns number\r\n */\r\nexport function gcd(int1, int2) {\r\n  if (!int2) return int1;\r\n\r\n  return gcd(int2, int1 % int2);\r\n}\r\n\r\n/**\r\n * Fits the first size inside size2\r\n * @param {[number, number]} size1\r\n * @param {[number, number]} size2\r\n */\r\nexport function fitInside(size1, size2) {\r\n  const ratio = Math.min(size2[0] / size1[0], size2[1] / size1[1]);\r\n  return size1.map(v => v * ratio);\r\n}\r\n\r\nexport const PI2 = Math.PI * 2;\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\nimport Color from '../helpers/Color.js';\r\nimport { PI2 } from '../helpers/math_utils.js';\r\n\r\nclass Spirals extends StringArt {\r\n  name = 'Spirals';\r\n  id = 'spirals';\r\n  link =\r\n    'https://www.etsy.com/il-en/listing/974865185/3d-string-art-spiral-mandala-wall?ref=shop_home_active_10&frs=1';\r\n  controls = [\r\n    {\r\n      key: 'radiusIncrease',\r\n      label: 'Radius change',\r\n      defaultValue: 5.7,\r\n      type: 'range',\r\n      attr: { min: 1, max: 20, step: 0.1 },\r\n    },\r\n    {\r\n      key: 'angleStep',\r\n      label: 'Angle step',\r\n      defaultValue: 0.45,\r\n      type: 'range',\r\n      attr: { min: 0, max: 1, step: 0.01 },\r\n    },\r\n    {\r\n      key: 'nSpirals',\r\n      label: 'Number of spirals',\r\n      defaultValue: 3,\r\n      type: 'range',\r\n      attr: { min: 1, max: 20, step: 1 },\r\n    },\r\n    {\r\n      ...Circle.rotationConfig,\r\n      defaultValue: 330 / 360,\r\n    },\r\n    Color.getConfig({\r\n      defaults: {\r\n        isMultiColor: true,\r\n        colorCount: 4,\r\n        color: '#00d5ff',\r\n        multicolorRange: 1,\r\n        multicolorStart: 190,\r\n        multicolorByLightness: true,\r\n        minLightness: 50,\r\n        maxLightness: 88,\r\n        reverseColors: true,\r\n      },\r\n    }),\r\n  ];\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n\r\n    const {\r\n      nSpirals,\r\n      rotation,\r\n      margin,\r\n      radiusIncrease,\r\n      angleStep,\r\n      colorCount,\r\n    } = this.config;\r\n\r\n    this.spiralRotations = new Array(nSpirals)\r\n      .fill(null)\r\n      .map((_, i) => (i * PI2) / nSpirals);\r\n    this.rotationAngle = -PI2 * rotation;\r\n    const maxRadius = Math.min(...this.size) / 2 - margin;\r\n    this.nailsPerSpiral = Math.floor(maxRadius / radiusIncrease);\r\n    this.angleIncrease = angleStep / (maxRadius / 50);\r\n    this.color = new Color(this.config);\r\n    this.colorMap = this.color.getColorMap({\r\n      stepCount: this.getStepCount(),\r\n      colorCount,\r\n    });\r\n  }\r\n\r\n  *generatePoints() {\r\n    const { nSpirals } = this.config;\r\n\r\n    for (let i = 0; i < this.nailsPerSpiral; i++) {\r\n      for (let s = 0; s < nSpirals; s++) {\r\n        const point = this.getPoint(s, i);\r\n        yield { point, nailNumber: `${s}_${i}` };\r\n      }\r\n    }\r\n  }\r\n\r\n  getPoint(spiralIndex, index) {\r\n    const [centerx, centery] = this.center;\r\n    const { radiusIncrease } = this.config;\r\n\r\n    const angle =\r\n      this.rotationAngle +\r\n      this.angleIncrease * index +\r\n      this.spiralRotations[spiralIndex];\r\n    const radius = index * radiusIncrease;\r\n\r\n    return [\r\n      centerx + radius * Math.sin(angle),\r\n      centery + radius * Math.cos(angle),\r\n    ];\r\n  }\r\n\r\n  *generateStrings() {\r\n    const points = this.generatePoints();\r\n    let index = 0;\r\n    this.renderer.setColor(this.color.getColor(0));\r\n    let lastPoint = this.center;\r\n\r\n    for (const { point } of points) {\r\n      if (this.colorMap) {\r\n        const stepColor = this.colorMap.get(index);\r\n        if (stepColor) {\r\n          this.renderer.setColor(stepColor);\r\n        }\r\n      }\r\n\r\n      if (lastPoint) {\r\n        this.renderer.renderLines(lastPoint, point);\r\n      }\r\n      lastPoint = point;\r\n      yield index++;\r\n    }\r\n  }\r\n\r\n  getStepCount() {\r\n    const { nSpirals, radiusIncrease, margin } = this.config;\r\n    const maxRadius = Math.min(...this.getSize()) / 2 - margin;\r\n    const n = Math.floor(maxRadius / radiusIncrease);\r\n    return n * nSpirals;\r\n  }\r\n\r\n  drawNails() {\r\n    const points = this.generatePoints();\r\n    for (const { point, nailNumber } of points) {\r\n      this.nails.addNail({ point, number: nailNumber });\r\n    }\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    radiusIncrease: 1.4,\r\n    angleStep: 0.11,\r\n  };\r\n}\r\n\r\nexport default Spirals;\r\n","import Color from '../helpers/Color.js';\r\nimport Circle from '../helpers/Circle.js';\r\nimport Mandala from './Mandala.js';\r\n\r\nexport default class Wave extends Mandala {\r\n  id = 'wave';\r\n  name = 'Wave';\r\n  link =\r\n    'https://www.etsy.com/il-en/listing/943140543/personalized-gift-string-art-mandala?ref=sim_rv-5&pro=1';\r\n  controls = [\r\n    {\r\n      ...Circle.nailsConfig,\r\n      defaultValue: 200,\r\n    },\r\n    {\r\n      key: 'layerFill',\r\n      label: 'Layer fill',\r\n      defaultValue: 0.5,\r\n      type: 'range',\r\n      attr: {\r\n        min: ({ config: { n } }) => 1 / n,\r\n        max: 1,\r\n        step: ({ config: { n } }) => 1 / n,\r\n      },\r\n      displayValue: ({ layerFill }) => Math.floor(100 * layerFill) + '%',\r\n    },\r\n    {\r\n      ...Circle.rotationConfig,\r\n      defaultValue: 176 / 360,\r\n    },\r\n    Circle.distortionConfig,\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      defaultValue: 11,\r\n      type: 'range',\r\n      attr: { min: 1, max: 20, step: 1 },\r\n    },\r\n    {\r\n      key: 'layerSpread',\r\n      label: 'Layer spread',\r\n      defaultValue: 15 / 200,\r\n      type: 'range',\r\n      attr: {\r\n        min: 0,\r\n        max: 1,\r\n        step: ({ config: { n } }) => 1 / n,\r\n      },\r\n      displayValue: ({ layerSpread, n }) => Math.round(layerSpread * n),\r\n    },\r\n    {\r\n      key: 'reverse',\r\n      label: 'Reverse',\r\n      defaultValue: true,\r\n      type: 'checkbox',\r\n    },\r\n    Color.getConfig({\r\n      defaults: {\r\n        isMultiColor: true,\r\n        multicolorRange: 216,\r\n        multicolorStart: 263,\r\n        color: '#ffffff',\r\n        multicolorByLightness: true,\r\n        minLightness: 10,\r\n        maxLightness: 90,\r\n      },\r\n      exclude: ['colorCount'],\r\n    }),\r\n  ];\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    const { n, layerSpread } = this.config;\r\n    this.layerShift = Math.round(n * layerSpread);\r\n    this.base = 2;\r\n  }\r\n\r\n  *generateStrings() {\r\n    const { layers, reverse } = this.config;\r\n\r\n    for (let layer = 0; layer < layers; layer++) {\r\n      yield* this.drawTimesTable({\r\n        color: this.color.getColor(layer),\r\n        shift: this.layerShift * (reverse ? 1 : -1) * layer,\r\n        time: layer,\r\n      });\r\n    }\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 70,\r\n  };\r\n}\r\n","import Color from '../helpers/Color.js';\r\nimport StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\n\r\nexport default class Mandala extends StringArt {\r\n  name = 'Mandala';\r\n  id = 'mandala';\r\n  link = 'https://www.youtube.com/watch?v=qhbuKbxJsk8';\r\n  linkText = 'Learn';\r\n  controls = [\r\n    {\r\n      key: 'n',\r\n      label: 'Number of nails',\r\n      defaultValue: 180,\r\n      type: 'range',\r\n      attr: { min: 3, max: 240, step: 1 },\r\n    },\r\n    {\r\n      key: 'base',\r\n      label: 'Multiplication',\r\n      defaultValue: 2,\r\n      type: 'range',\r\n      attr: { min: 2, max: 99, step: 1 },\r\n    },\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      defaultValue: 7,\r\n      type: 'range',\r\n      attr: { min: 1, max: 20, step: 1 },\r\n    },\r\n    Circle.rotationConfig,\r\n    Circle.distortionConfig,\r\n    Color.getConfig({\r\n      defaults: {\r\n        isMultiColor: true,\r\n        multicolorRange: 180,\r\n        multicolorStart: 256,\r\n        color: '#ff4d00',\r\n      },\r\n      exclude: ['colorCount'],\r\n    }),\r\n  ];\r\n\r\n  get n() {\r\n    if (!this._n) {\r\n      const { n, layers } = this.config;\r\n      const extraNails = n % layers;\r\n      this._n = n - extraNails; // The number of nails should be a multiple of the layers, so the strings are exactly on the nails.\r\n    }\r\n\r\n    return this._n;\r\n  }\r\n\r\n  setUpDraw() {\r\n    this._n = null;\r\n    super.setUpDraw();\r\n\r\n    const { layers, rotation, distortion, margin, layerFill, base, reverse } =\r\n      this.config;\r\n    const circleConfig = {\r\n      size: this.size,\r\n      n: this.n,\r\n      margin,\r\n      rotation,\r\n      distortion,\r\n      reverse,\r\n    };\r\n    this.stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\r\n\r\n    if (this.circle) {\r\n      this.circle.setConfig(circleConfig);\r\n    } else {\r\n      this.circle = new Circle(circleConfig);\r\n    }\r\n\r\n    this.color = new Color({\r\n      ...this.config,\r\n      colorCount: layers,\r\n    });\r\n\r\n    this.layerShift = Math.floor(this.n / layers);\r\n    this.base = base;\r\n  }\r\n\r\n  *drawTimesTable({ shift = 0, color = '#f00', time }) {\r\n    const n = this.n;\r\n    this.renderer.setColor(color);\r\n\r\n    let point = this.circle.getPoint(shift);\r\n\r\n    for (let i = 1; i <= this.stringsPerLayer; i++) {\r\n      const startPoint = point;\r\n      point = this.circle.getPoint(i + shift);\r\n      const toIndex = (i * this.base) % n;\r\n      this.renderer.renderLines(\r\n        startPoint,\r\n        point,\r\n        this.circle.getPoint(toIndex + shift)\r\n      );\r\n\r\n      yield {\r\n        instructions: `${i - 1} → ${i} → ${toIndex} → ${i}`,\r\n        index: time * n + i,\r\n      };\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    const { layers } = this.config;\r\n\r\n    for (let time = 0; time < layers; time++) {\r\n      const color = this.color.getColor(time);\r\n      yield* this.drawTimesTable({\r\n        time,\r\n        color,\r\n        shift: this.layerShift * time,\r\n      });\r\n    }\r\n  }\r\n\r\n  drawNails() {\r\n    this.circle.drawNails(this.nails);\r\n  }\r\n\r\n  getStepCount() {\r\n    const { layers, layerFill } = this.config;\r\n    const stringsPerLayer = layerFill ? Math.floor(this.n * layerFill) : this.n;\r\n    return (layers ?? 1) * stringsPerLayer;\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 70,\r\n  };\r\n}\r\n","import StringArt from '../StringArt.js';\r\n\r\nconst SIDES = ['left', 'bottom', 'right', 'top'];\r\nconst SIDES_ORDER = ['left', 'bottom', 'right', 'top'];\r\n\r\nconst SIDES_ROTATION = {\r\n  left: 0,\r\n  bottom: Math.PI / 2,\r\n  right: Math.PI,\r\n  top: Math.PI * 1.5,\r\n};\r\n\r\nclass Eye extends StringArt {\r\n  name = 'Eye';\r\n  id = 'eye';\r\n  link =\r\n    'https://www.etsy.com/listing/489853161/rose-of-space-string-art-sacred-geometry?ga_order=most_relevant&ga_search_type=all&ga_view_type=gallery&ga_search_query=string+art&ref=sr_gallery_1&epik=dj0yJnU9WXNpM1BDTnNkLVBtcWdCa3AxN1J5QUZRY1FlbkJ5Z18mcD0wJm49ZXdJb2JXZmVpNVVwN1NKQ3lXMy10ZyZ0PUFBQUFBR0ZuUzZv';\r\n  controls = [\r\n    {\r\n      key: 'n',\r\n      label: 'Number of nails per side',\r\n      defaultValue: 82,\r\n      type: 'range',\r\n      attr: { min: 2, max: 200, step: 1 },\r\n    },\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      defaultValue: 13,\r\n      type: 'range',\r\n      attr: { min: 1, max: 20, step: 1 },\r\n    },\r\n    {\r\n      key: 'angle',\r\n      label: 'Layer angle',\r\n      defaultValue: 30,\r\n      displayValue: ({ angle }) => `${angle}°`,\r\n      type: 'range',\r\n      attr: { min: 0, max: 45, step: 1 },\r\n    },\r\n    {\r\n      key: 'color',\r\n      label: 'Color',\r\n      type: 'group',\r\n      children: [\r\n        {\r\n          key: 'color1',\r\n          label: 'String #1 color',\r\n          defaultValue: '#11e8bd',\r\n          type: 'color',\r\n        },\r\n        {\r\n          key: 'color2',\r\n          label: 'String #2 color',\r\n          defaultValue: '#6fff52',\r\n          type: 'color',\r\n        },\r\n        {\r\n          key: 'colorPerLayer',\r\n          label: 'Color per layer',\r\n          defaultValue: false,\r\n          type: 'checkbox',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n\r\n    const { n, angle, layers, margin } = this.config;\r\n\r\n    this.maxSize = Math.min(...this.size) - 2 * margin;\r\n    this.nailSpacing = this.maxSize / (n - 1);\r\n    this.layerAngle = (angle * Math.PI) / 180;\r\n\r\n    this.layers = new Array(layers)\r\n      .fill(null)\r\n      .map((_, layerIndex) => this._getLayerProps(layerIndex));\r\n  }\r\n\r\n  // Sides: top, right, bottom, left\r\n  getPoint({ index, angle, layerStart, rotation }) {\r\n    const theta = angle + rotation;\r\n\r\n    const point = {\r\n      x: layerStart.x,\r\n      y: layerStart.y + this.nailSpacing * index,\r\n    };\r\n\r\n    const pivot = { x: this.center[0], y: this.center[1] };\r\n\r\n    const cosAngle = Math.cos(theta);\r\n    const sinAngle = Math.sin(theta);\r\n\r\n    const position = [\r\n      cosAngle * (point.x - pivot.x) - sinAngle * (point.y - pivot.y) + pivot.x,\r\n      sinAngle * (point.x - pivot.x) + cosAngle * (point.y - pivot.y) + pivot.y,\r\n    ];\r\n    return position;\r\n  }\r\n\r\n  *drawSide({\r\n    side,\r\n    color = '#ffffff',\r\n    angle,\r\n    size,\r\n    layerStart,\r\n    layerStringCount,\r\n  }) {\r\n    const sideIndex = SIDES.indexOf(side);\r\n    const nextSide = SIDES[sideIndex === SIDES.length - 1 ? 0 : sideIndex + 1];\r\n    const rotation = SIDES_ROTATION[side];\r\n    const nextSideRotation = SIDES_ROTATION[nextSide];\r\n\r\n    const sideProps = { layerStringCount, size, layerStart, angle };\r\n    this.renderer.setColor(color);\r\n\r\n    for (let i = 0; i <= layerStringCount; i++) {\r\n      this.renderer.renderLines(\r\n        this.getPoint({ side, index: i, rotation, ...sideProps }),\r\n        this.getPoint({\r\n          side: nextSide,\r\n          index: i,\r\n          rotation: nextSideRotation,\r\n          ...sideProps,\r\n        })\r\n      );\r\n\r\n      yield i;\r\n    }\r\n  }\r\n\r\n  _getLayerProps(layerIndex) {\r\n    const colors = this._getLayerColors(layerIndex);\r\n    const layerAngle = this.layerAngle * layerIndex;\r\n    const layerSize =\r\n      this.maxSize /\r\n      Math.pow(\r\n        Math.cos(this.layerAngle) + Math.sin(this.layerAngle),\r\n        layerIndex\r\n      );\r\n    const layerStart = {\r\n      x: this.center[0] - layerSize / 2,\r\n      y: this.center[1] - layerSize / 2,\r\n    };\r\n    const layerStringCount = Math.floor(layerSize / this.nailSpacing);\r\n\r\n    return {\r\n      colors,\r\n      layerAngle,\r\n      layerSize,\r\n      layerStart,\r\n      layerStringCount,\r\n    };\r\n  }\r\n\r\n  _getLayerColors(layerIndex) {\r\n    const { color1, color2, colorPerLayer } = this.config;\r\n    if (colorPerLayer) {\r\n      const layerColor = layerIndex % 2 ? color1 : color2;\r\n      return [layerColor, layerColor, layerColor, layerColor];\r\n    } else {\r\n      return [color2, color1, color2, color1];\r\n    }\r\n  }\r\n\r\n  *drawLayer(layerIndex) {\r\n    const { colors, layerAngle, layerSize, layerStart, layerStringCount } =\r\n      this.layers[layerIndex];\r\n\r\n    for (let i = 0; i < SIDES.length; i++) {\r\n      yield* this.drawSide({\r\n        color: colors[i],\r\n        side: SIDES_ORDER[i],\r\n        angle: layerAngle,\r\n        size: layerSize,\r\n        layerStart,\r\n        layerStringCount,\r\n      });\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    const { layers } = this.config;\r\n    for (let layer = layers - 1; layer >= 0; layer--) {\r\n      yield* this.drawLayer(layer);\r\n    }\r\n  }\r\n\r\n  getStepCount() {\r\n    let count = 0;\r\n    const { layers, angle, n, margin } = this.config;\r\n    const layerAngle = (angle * Math.PI) / 180;\r\n    const maxSize = Math.min(...this.renderer.getSize()) - 2 * margin;\r\n    const nailSpacing = maxSize / (n - 1);\r\n\r\n    for (let layer = 0; layer < layers; layer++) {\r\n      const layerSize =\r\n        maxSize / Math.pow(Math.cos(layerAngle) + Math.sin(layerAngle), layer);\r\n      count += 4 * (Math.floor(layerSize / nailSpacing) + 1);\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  drawNails() {\r\n    const { layers } = this.config;\r\n    for (let layer = layers - 1; layer >= 0; layer--) {\r\n      const {\r\n        layerAngle: angle,\r\n        layerSize: size,\r\n        layerStart,\r\n        layerStringCount,\r\n      } = this.layers[layer];\r\n\r\n      for (let s = 0; s < SIDES.length; s++) {\r\n        const sideOrder = SIDES_ORDER[s];\r\n        const rotation = SIDES_ROTATION[sideOrder];\r\n\r\n        for (let i = 0; i <= layerStringCount; i++) {\r\n          const sideProps = { layerStringCount, size, layerStart, angle };\r\n          this.nails.addNail({\r\n            point: this.getPoint({\r\n              sideOrder,\r\n              index: i,\r\n              rotation,\r\n              ...sideProps,\r\n            }),\r\n            number: `${layer}_${s}_${i}`,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 25,\r\n    layers: 7,\r\n  };\r\n}\r\n\r\nexport default Eye;\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\n\r\nexport default class Star extends StringArt {\r\n  name = 'Star';\r\n  id = 'star';\r\n  link =\r\n    'https://www.etsy.com/listing/557818258/string-art-meditation-geometric-yoga?epik=dj0yJnU9Mm1hYmZKdks1eTc3bVY2TkVhS2p2Qlg0N2dyVWJxaTEmcD0wJm49MGlWSXE1SVJ2Vm0xZ0xtaGhITDBWQSZ0PUFBQUFBR0Zwd2lj';\r\n  controls = [\r\n    {\r\n      key: 'sides',\r\n      label: 'Sides',\r\n      defaultValue: 3,\r\n      type: 'range',\r\n      attr: { min: 3, max: 20, step: 1 },\r\n    },\r\n    {\r\n      key: 'sideNails',\r\n      label: 'Nails per side',\r\n      defaultValue: 40,\r\n      type: 'range',\r\n      attr: { min: 1, max: 200, step: 1 },\r\n    },\r\n    {\r\n      key: 'ringSize',\r\n      label: 'Outer ring size',\r\n      defaultValue: 0.1,\r\n      type: 'range',\r\n      attr: {\r\n        min: 0,\r\n        max: 0.5,\r\n        step: ({ config: { sideNails, sides } }) => 1 / (sideNails * sides),\r\n      },\r\n      displayValue: ({ sideNails, sides, ringSize }) =>\r\n        Math.floor(ringSize * sideNails * sides),\r\n    },\r\n    Circle.rotationConfig,\r\n    Circle.distortionConfig,\r\n    {\r\n      key: 'colorGroup',\r\n      label: 'Color',\r\n      type: 'group',\r\n      children: [\r\n        {\r\n          key: 'innerColor',\r\n          label: 'Star color',\r\n          defaultValue: '#2ec0ff',\r\n          type: 'color',\r\n        },\r\n        {\r\n          key: 'outterColor',\r\n          label: 'Outter color',\r\n          defaultValue: '#2a82c6',\r\n          type: 'color',\r\n        },\r\n        {\r\n          key: 'ringColor',\r\n          label: 'Ring color',\r\n          defaultValue: '#2ec0ff',\r\n          type: 'color',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  get n() {\r\n    if (!this._n) {\r\n      const { n, sides } = this.config;\r\n      const extraNails = n % sides;\r\n      this._n = n - extraNails;\r\n    }\r\n\r\n    return this._n;\r\n  }\r\n\r\n  setUpDraw() {\r\n    this._n = null;\r\n    super.setUpDraw();\r\n\r\n    const { sides, rotation, distortion, sideNails, margin = 0 } = this.config;\r\n    const circleConfig = {\r\n      size: this.size,\r\n      n: sideNails * sides,\r\n      margin,\r\n      rotation,\r\n      distortion,\r\n    };\r\n\r\n    if (this.circle) {\r\n      this.circle.setConfig(circleConfig);\r\n    } else {\r\n      this.circle = new Circle(circleConfig);\r\n    }\r\n\r\n    this.sideAngle = (Math.PI * 2) / sides;\r\n    this.nailSpacing = this.circle.radius / sideNails;\r\n    this.starCenterStart = (sideNails % 1) * this.nailSpacing;\r\n\r\n    this.sides = new Array(sides).fill(null).map((_, side) => {\r\n      const sideAngle = side * this.sideAngle + this.circle.rotationAngle;\r\n      const circlePointsStart = side * sideNails;\r\n\r\n      return {\r\n        sinSideAngle: Math.sin(sideAngle),\r\n        cosSideAngle: Math.cos(sideAngle),\r\n        circlePointsStart,\r\n        circlePointsEnd: circlePointsStart + sideNails,\r\n      };\r\n    });\r\n  }\r\n\r\n  getStarPoint({ side, sideIndex }) {\r\n    const radius = this.starCenterStart + sideIndex * this.nailSpacing;\r\n    const { sinSideAngle, cosSideAngle } = this.sides[side];\r\n    const [centerX, centerY] = this.circle.center;\r\n\r\n    return [centerX + sinSideAngle * radius, centerY + cosSideAngle * radius];\r\n  }\r\n\r\n  getArcPoint({ side, sideIndex }) {\r\n    return this.circle.getPoint(side * this.config.sideNails + sideIndex);\r\n  }\r\n\r\n  *generateStarPoints({ reverseOrder = false } = {}) {\r\n    const { sides, sideNails } = this.config;\r\n\r\n    for (let side = 0; side < sides; side++) {\r\n      const prevSide = side === 0 ? sides - 1 : side - 1;\r\n      for (let i = 0; i < sideNails; i++) {\r\n        const sideIndex = reverseOrder ? sideNails - i : i;\r\n        yield {\r\n          side,\r\n          prevSide,\r\n          sideIndex,\r\n          point: this.getStarPoint({ side, sideIndex }),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  *drawStar() {\r\n    const { innerColor, sideNails, sides } = this.config;\r\n\r\n    this.renderer.setColor(innerColor);\r\n    let alternate = false;\r\n    const linesPerRound = sides % 2 ? sides * 2 : sides;\r\n    const rounds = sides % 2 ? Math.floor(sideNails / 2) : sideNails;\r\n\r\n    let prevPointIndex = 0;\r\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: prevPointIndex });\r\n\r\n    for (let round = 0; round <= rounds; round++) {\r\n      let side = 0;\r\n\r\n      const linesPerThisRound = linesPerRound - (round === rounds ? sides : 0);\r\n\r\n      for (let i = 0; i < linesPerThisRound; i++) {\r\n        side = side !== sides - 1 ? side + 1 : 0;\r\n        alternate = !alternate;\r\n        prevPointIndex = alternate ? sideNails - round : round;\r\n        const nextPoint = this.getStarPoint({\r\n          side,\r\n          sideIndex: prevPointIndex,\r\n        });\r\n        this.renderer.renderLines(prevPoint, nextPoint);\r\n        prevPoint = nextPoint;\r\n        yield;\r\n      }\r\n\r\n      prevPointIndex = alternate ? prevPointIndex - 1 : prevPointIndex + 1;\r\n      const nextPoint = this.getStarPoint({\r\n        side: 0,\r\n        sideIndex: prevPointIndex,\r\n      });\r\n      this.renderer.renderLines(prevPoint, nextPoint);\r\n      prevPoint = nextPoint;\r\n    }\r\n  }\r\n\r\n  *drawCircle() {\r\n    const { outterColor, sides, sideNails } = this.config;\r\n    this.renderer.setColor(outterColor);\r\n\r\n    let prevPoint = this.getStarPoint({ side: 0, sideIndex: 0 });\r\n    let alternate = false;\r\n    let isStar = false;\r\n\r\n    const rounds = sides % 2 ? Math.ceil(sideNails / 2) : sideNails;\r\n    let side = 0;\r\n    const linesPerRound = sides % 2 ? sides * 4 : sides * 2;\r\n\r\n    for (let round = 0; round <= rounds; round++) {\r\n      const linesPerThisRound =\r\n        linesPerRound - (round === rounds ? sides * 2 : 0);\r\n\r\n      for (let i = 0; i < linesPerThisRound; i++) {\r\n        const pointPosition = {\r\n          side,\r\n          sideIndex: alternate ? sideNails - round : round,\r\n        };\r\n\r\n        const nextPoint = isStar\r\n          ? this.getStarPoint(pointPosition)\r\n          : this.getArcPoint(pointPosition);\r\n\r\n        this.renderer.renderLines(prevPoint, nextPoint);\r\n        prevPoint = nextPoint;\r\n\r\n        yield;\r\n        isStar = !isStar;\r\n\r\n        if (isStar) {\r\n          side = side !== sides - 1 ? side + 1 : 0;\r\n          alternate = !alternate;\r\n        }\r\n      }\r\n      prevPoint = this.getStarPoint({ side: 0, sideIndex: round + 1 });\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    yield* this.drawCircle();\r\n\r\n    const { ringSize, ringColor } = this.config;\r\n\r\n    if (ringSize !== 0) {\r\n      yield* this.circle.drawRing(this.renderer, {\r\n        ringSize,\r\n        color: ringColor,\r\n      });\r\n    }\r\n    yield* this.drawStar();\r\n  }\r\n\r\n  drawNails() {\r\n    this.circle.drawNails(this.nails);\r\n\r\n    for (const { point, side, sideIndex } of this.generateStarPoints()) {\r\n      this.nails.addNail({\r\n        point,\r\n        number: sideIndex ? `${side}_${sideIndex}` : 0,\r\n      });\r\n    }\r\n\r\n    this.circle.drawNails(this.nails);\r\n  }\r\n\r\n  getStepCount() {\r\n    const { sides, sideNails, ringSize } = this.config;\r\n    const ringCount = ringSize ? sideNails * sides : 0;\r\n    const starAndCircleCount = 3 * sides * (sideNails + (sides % 2 ? 1 : 0));\r\n\r\n    return starAndCircleCount + ringCount;\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    sideNails: 18,\r\n  };\r\n}\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\n\r\nconst LAYER_DEFAULTS = [\r\n  { size: 0.25, end: 1, color: '#a94fb0' },\r\n  { size: 0.125, end: 0.888, color: '#ec6ad0' },\r\n  { size: 0, end: 0.826, color: '#f08ad5', reverse: true },\r\n];\r\n\r\nexport default class Assymetry extends StringArt {\r\n  name = 'Assymetry';\r\n  id = 'assymetry';\r\n  link =\r\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\r\n  controls = [\r\n    Circle.nailsConfig,\r\n    Circle.rotationConfig,\r\n    Circle.distortionConfig,\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      type: 'group',\r\n      children: LAYER_DEFAULTS.map(({ size, end, color, reverse }, i) => {\r\n        const layer = i + 1;\r\n        return {\r\n          key: `layer${layer}`,\r\n          label: `Layer ${layer}`,\r\n          type: 'group',\r\n          children: [\r\n            {\r\n              key: `show${layer}`,\r\n              label: 'Enable',\r\n              defaultValue: true,\r\n              type: 'checkbox',\r\n            },\r\n            {\r\n              key: `size${layer}`,\r\n              label: 'Size',\r\n              defaultValue: size,\r\n              type: 'range',\r\n              attr: {\r\n                min: 0,\r\n                max: 0.5,\r\n                step: ({ config: { n } }) => 1 / n,\r\n              },\r\n              displayValue: (config, { key }) =>\r\n                Math.round(config.n * config[key]),\r\n              show: config => config[`show${layer}`],\r\n            },\r\n            {\r\n              key: `end${layer}`,\r\n              label: 'End Position',\r\n              defaultValue: end,\r\n              type: 'range',\r\n              attr: {\r\n                min: 0,\r\n                max: 1,\r\n                step: ({ config: { n } }) => 1 / n,\r\n              },\r\n              displayValue: (config, { key }) =>\r\n                Math.round(config.n * config[key]),\r\n              show: config => config[`show${layer}`],\r\n            },\r\n            {\r\n              key: `color${layer}`,\r\n              label: 'Color',\r\n              defaultValue: color,\r\n              type: 'color',\r\n              show: config => config[`show${layer}`],\r\n            },\r\n            {\r\n              key: `reverse${layer}`,\r\n              label: 'Reverse',\r\n              defaultValue: reverse === true,\r\n              type: 'checkbox',\r\n              show: config => config[`show${layer}`],\r\n            },\r\n          ],\r\n        };\r\n      }),\r\n    },\r\n  ];\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    Object.assign(this, this.getSetUp());\r\n  }\r\n\r\n  getSetUp() {\r\n    const { rotation, n, margin = 0, distortion } = this.config;\r\n    const size = this.getSize();\r\n\r\n    const circleConfig = {\r\n      size,\r\n      n,\r\n      margin,\r\n      rotation: rotation - 0.25,\r\n      distortion,\r\n    };\r\n\r\n    let circle;\r\n    if (this.circle) {\r\n      circle = this.circle;\r\n      this.circle.setConfig(circleConfig);\r\n    } else {\r\n      circle = new Circle(circleConfig);\r\n    }\r\n\r\n    let lineSpacing = circle.indexAngle * circle.radius;\r\n    const lineNailCount = Math.floor(circle.radius / lineSpacing) - 1;\r\n    lineSpacing +=\r\n      (circle.radius - lineSpacing * lineNailCount) / lineNailCount;\r\n    const firstCirclePoint = circle.getPoint(0);\r\n    const totalNailCount = lineNailCount + n;\r\n    const totalIndexCount = totalNailCount + lineNailCount;\r\n    const layers = new Array(3)\r\n      .fill(null)\r\n      .map((_, i) => getLayer.call(this, i + 1))\r\n      .filter(({ enable }) => enable);\r\n\r\n    return {\r\n      circle,\r\n      lineSpacing,\r\n      lineNailCount,\r\n      firstCirclePoint,\r\n      layers,\r\n      totalNailCount,\r\n      totalIndexCount,\r\n    };\r\n\r\n    function getLayer(layerIndex) {\r\n      const size =\r\n        Math.round(n * this.config['size' + layerIndex]) + lineNailCount;\r\n      return {\r\n        size,\r\n        endIndex:\r\n          Math.round(\r\n            this.config['end' + layerIndex] * (totalNailCount + lineNailCount)\r\n          ) - size,\r\n        color: this.config['color' + layerIndex],\r\n        enable: this.config['show' + layerIndex],\r\n        isReverse: this.config['reverse' + layerIndex],\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the position of a point on the line\r\n   * @param {index of the point in the circle, 0 is the center} index\r\n   */\r\n  getPoint(index) {\r\n    if (index < this.lineNailCount || index > this.totalNailCount) {\r\n      const linePosition =\r\n        index < this.lineNailCount\r\n          ? this.lineNailCount - index\r\n          : index - this.totalNailCount;\r\n\r\n      const indexLength = linePosition * this.lineSpacing;\r\n      return [\r\n        this.firstCirclePoint[0] -\r\n          indexLength * Math.sin(this.circle.rotationAngle),\r\n        this.firstCirclePoint[1] -\r\n          indexLength * Math.cos(this.circle.rotationAngle),\r\n      ];\r\n    } else {\r\n      const circleIndex = index - this.lineNailCount;\r\n      return this.circle.getPoint(circleIndex);\r\n    }\r\n  }\r\n\r\n  *drawCircle({ endIndex, color, isReverse, size }) {\r\n    let prevPoint;\r\n    let prevPointIndex;\r\n    let isPrevSide = false;\r\n    this.renderer.setColor(color);\r\n    const self = this;\r\n    const advance = isReverse ? -1 : 1;\r\n\r\n    for (let index = 0; index <= endIndex; index++) {\r\n      const startPoint = prevPoint ?? this.getPoint(getPointIndex(index));\r\n      const positions = [];\r\n      if (prevPoint) {\r\n        positions.push(this.getPoint(prevPointIndex + advance));\r\n      }\r\n      prevPointIndex = getPointIndex(isPrevSide ? index : index + size);\r\n      positions.push((prevPoint = this.getPoint(prevPointIndex)));\r\n\r\n      this.renderer.renderLines(startPoint, ...positions);\r\n\r\n      yield;\r\n\r\n      isPrevSide = !isPrevSide;\r\n    }\r\n\r\n    function getPointIndex(index) {\r\n      return isReverse ? self.totalIndexCount - index : index;\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    for (const layer of this.layers) {\r\n      yield* this.drawCircle(layer);\r\n    }\r\n  }\r\n\r\n  drawNails() {\r\n    this.circle.drawNails(this.nails, { nailsNumberStart: this.lineNailCount });\r\n\r\n    for (let i = 0; i < this.lineNailCount; i++) {\r\n      this.nails.addNail({ point: this.getPoint(i), number: i });\r\n    }\r\n  }\r\n\r\n  getStepCount() {\r\n    const { layers } = this.getSetUp();\r\n    return layers.reduce(\r\n      (stepCount, layer) => stepCount + layer.endIndex + 1,\r\n      0\r\n    );\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 50,\r\n  };\r\n}\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\n\r\nexport default class Freestyle extends StringArt {\r\n  name = 'Freestyle';\r\n  id = 'freestyle';\r\n  link =\r\n    'https://www.etsy.com/il-en/listing/1018950430/calming-wall-art-in-light-blue-for';\r\n  controls = [\r\n    {\r\n      key: 'n',\r\n      label: 'Circle nails',\r\n      defaultValue: 80,\r\n      type: 'range',\r\n      attr: { min: 1, max: 300, step: 1 },\r\n    },\r\n    {\r\n      key: 'minNailDistance',\r\n      label: 'Min nail distance',\r\n      defaultValue: 20,\r\n      type: 'range',\r\n      attr: { min: 1, max: 300, step: 1 },\r\n    },\r\n    {\r\n      key: 'color',\r\n      label: 'Color',\r\n      defaultValue: '#ec6ad0',\r\n      type: 'color',\r\n    },\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      type: 'group',\r\n      children: [\r\n        {\r\n          key: 'layer1',\r\n          label: 'Layer 1',\r\n          type: 'group',\r\n          children: [\r\n            {\r\n              key: 'show1',\r\n              label: 'Enable',\r\n              defaultValue: true,\r\n              type: 'checkbox',\r\n            },\r\n            {\r\n              key: 'radius1',\r\n              label: 'Radius',\r\n              defaultValue: 0.5,\r\n              type: 'range',\r\n              attr: { min: 0.01, max: 1, step: 0.01 },\r\n              show: ({ show1 }) => show1,\r\n            },\r\n            {\r\n              key: 'x1',\r\n              label: 'Position X',\r\n              defaultValue: 0.5,\r\n              type: 'range',\r\n              attr: { min: 0, max: 1, step: 0.01 },\r\n              show: ({ show1 }) => show1,\r\n            },\r\n            {\r\n              key: 'y1',\r\n              label: 'Position Y',\r\n              defaultValue: 0,\r\n              type: 'range',\r\n              attr: { min: 0, max: 1, step: 0.01 },\r\n              show: ({ show1 }) => show1,\r\n            },\r\n            {\r\n              ...Circle.rotationConfig,\r\n              key: 'rotation1',\r\n              show: ({ show1 }) => show1,\r\n            },\r\n            {\r\n              key: 'reverse1',\r\n              label: 'Reverse',\r\n              defaultValue: false,\r\n              type: 'checkbox',\r\n              show: ({ show1 }) => show1,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'layer2',\r\n          label: 'Layer 2',\r\n          type: 'group',\r\n          children: [\r\n            {\r\n              key: 'show2',\r\n              label: 'Enable',\r\n              defaultValue: true,\r\n              type: 'checkbox',\r\n            },\r\n            {\r\n              key: 'radius2',\r\n              label: 'Radius',\r\n              defaultValue: 0.5,\r\n              type: 'range',\r\n              attr: { min: 0.01, max: 1, step: 0.01 },\r\n              show: ({ show2 }) => show2,\r\n            },\r\n            {\r\n              key: 'x2',\r\n              label: 'Position X',\r\n              defaultValue: 0,\r\n              type: 'range',\r\n              attr: { min: 0, max: 1, step: 0.01 },\r\n              show: ({ show2 }) => show2,\r\n            },\r\n            {\r\n              key: 'y2',\r\n              label: 'Position Y',\r\n              defaultValue: 1,\r\n              type: 'range',\r\n              attr: { min: 0, max: 1, step: 0.01 },\r\n              show: ({ show2 }) => show2,\r\n            },\r\n            {\r\n              ...Circle.rotationConfig,\r\n              key: 'rotation2',\r\n              show: ({ show2 }) => show2,\r\n            },\r\n            {\r\n              key: 'reverse2',\r\n              label: 'Reverse',\r\n              defaultValue: false,\r\n              type: 'checkbox',\r\n              show: ({ show2 }) => show2,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'layer3',\r\n          label: 'Layer 3',\r\n          type: 'group',\r\n          children: [\r\n            {\r\n              key: 'show3',\r\n              label: 'Enable',\r\n              defaultValue: true,\r\n              type: 'checkbox',\r\n            },\r\n            {\r\n              key: 'radius3',\r\n              label: 'Radius',\r\n              defaultValue: 0.5,\r\n              type: 'range',\r\n              attr: { min: 0.01, max: 1, step: 0.01 },\r\n              show: ({ show3 }) => show3,\r\n            },\r\n            {\r\n              key: 'x3',\r\n              label: 'Position X',\r\n              defaultValue: 1,\r\n              type: 'range',\r\n              attr: { min: 0, max: 1, step: 0.01 },\r\n              show: ({ show3 }) => show3,\r\n            },\r\n            {\r\n              key: 'y3',\r\n              label: 'Position Y',\r\n              defaultValue: 1,\r\n              type: 'range',\r\n              attr: { min: 0, max: 1, step: 0.01 },\r\n              show: ({ show3 }) => show3,\r\n            },\r\n            {\r\n              ...Circle.rotationConfig,\r\n              key: 'rotation3',\r\n              show: ({ show3 }) => show3,\r\n            },\r\n            {\r\n              key: 'reverse3',\r\n              label: 'Reverse',\r\n              defaultValue: false,\r\n              type: 'checkbox',\r\n              show: ({ show3 }) => show3,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    Object.assign(this, this.getSetUp());\r\n  }\r\n\r\n  getSetUp() {\r\n    const { n, margin = 0, minNailDistance } = this.config;\r\n    const size = this.getSize();\r\n\r\n    const maxRadius = Math.min(...size.map(v => v - 2 * margin)) / 2;\r\n    const layers = new Array(3)\r\n      .fill(null)\r\n      .map((_, i) => getLayer.call(this, i + 1))\r\n      .filter(({ enable }) => enable);\r\n\r\n    const maxShapeNailsCount = Math.max(\r\n      ...layers.map(({ circle }) => circle.config.n)\r\n    );\r\n\r\n    return {\r\n      layers,\r\n      maxShapeNailsCount,\r\n    };\r\n\r\n    function getLayer(layerIndex) {\r\n      const prop = prop => this.config[prop + layerIndex];\r\n\r\n      const props = {\r\n        enable: prop('show'),\r\n        isReverse: prop('reverse'),\r\n        position: [prop('x'), prop('y')],\r\n        radius: maxRadius * prop('radius'),\r\n        rotation: prop('rotation'),\r\n      };\r\n\r\n      const circumsference = Math.PI * 2 * props.radius;\r\n      const circleNails = Math.min(\r\n        n,\r\n        Math.floor(circumsference / minNailDistance)\r\n      );\r\n\r\n      const circle = new Circle({\r\n        radius: props.radius,\r\n        center: props.position.map(\r\n          (v, i) =>\r\n            props.radius + margin + (size[i] - (props.radius + margin) * 2) * v\r\n        ),\r\n        n: circleNails,\r\n        rotation: props.rotation,\r\n        reverse: props.isReverse,\r\n      });\r\n\r\n      return {\r\n        circle,\r\n        ...props,\r\n      };\r\n    }\r\n  }\r\n\r\n  getPoint(layer, index) {\r\n    const { circle } = layer;\r\n    let circleIndex = Math.round(\r\n      (index * circle.config.n) / this.maxShapeNailsCount\r\n    );\r\n    return circle.getPoint(circleIndex);\r\n  }\r\n\r\n  *generateStrings() {\r\n    const { n, color } = this.config;\r\n\r\n    this.renderer.setColor(color);\r\n    let prevCirclePoint;\r\n\r\n    for (let i = 0; i < this.maxShapeNailsCount; i++) {\r\n      for (let layerIndex = 0; layerIndex < this.layers.length; layerIndex++) {\r\n        const layer = this.layers[layerIndex];\r\n        const startPoint = prevCirclePoint ?? this.getPoint(layer, i);\r\n\r\n        const positions = [];\r\n        if (layerIndex === 0 && i) {\r\n          positions.push(this.getPoint(layer, i));\r\n        }\r\n\r\n        let nextLayerIndex = layerIndex + 1;\r\n        if (nextLayerIndex === this.layers.length) {\r\n          nextLayerIndex = 0;\r\n        }\r\n\r\n        prevCirclePoint = this.getPoint(this.layers[nextLayerIndex], i);\r\n\r\n        this.renderer.renderLines(startPoint, prevCirclePoint);\r\n        yield;\r\n      }\r\n    }\r\n  }\r\n\r\n  drawNails() {\r\n    const n = this.config;\r\n    this.layers.forEach(({ circle }, layerIndex) =>\r\n      circle.drawNails(this.nails, {\r\n        getNumber: i => `${layerIndex + 1}_${i + 1}`,\r\n      })\r\n    );\r\n  }\r\n\r\n  getStepCount() {\r\n    const { layers, maxShapeNailsCount } = this.getSetUp();\r\n    return layers.length * maxShapeNailsCount - 1;\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    minNailDistance: 3,\r\n  };\r\n}\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\nimport Polygon from '../helpers/Polygon.js';\r\nimport Color from '../helpers/Color.js';\r\n\r\nconst COLOR_CONFIG = Color.getConfig({\r\n  defaults: {\r\n    isMultiColor: true,\r\n    color: '#ff0000',\r\n    multicolorRange: 1,\r\n    multicolorStart: 0,\r\n    multicolorByLightness: true,\r\n    minLightness: 20,\r\n    maxLightness: 50,\r\n  },\r\n  exclude: ['colorCount'],\r\n});\r\n\r\nexport default class PolygonPattern extends StringArt {\r\n  name = 'Polygon';\r\n  id = 'polygon';\r\n  controls = [\r\n    {\r\n      key: 'sides',\r\n      label: 'Sides',\r\n      defaultValue: 5,\r\n      type: 'range',\r\n      attr: {\r\n        min: 3,\r\n        max: 10,\r\n        step: 1,\r\n      },\r\n    },\r\n    {\r\n      key: 'n',\r\n      label: 'Nails per side',\r\n      defaultValue: 60,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 100,\r\n        step: 1,\r\n      },\r\n    },\r\n    {\r\n      key: 'bezier',\r\n      label: 'Bezier',\r\n      defaultValue: 2,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 4,\r\n        step: 1,\r\n      },\r\n      show: ({ sides }) => sides > 4,\r\n    },\r\n    Circle.rotationConfig,\r\n    COLOR_CONFIG,\r\n  ];\r\n\r\n  defaultValues = {\r\n    nailsColor: '#5c5c5c',\r\n    nailRadius: 1,\r\n  };\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    const { n, rotation, sides, margin, isMultiColor } = this.config;\r\n    const size = this.getSize();\r\n\r\n    const polygonConfig = {\r\n      sides,\r\n      rotation,\r\n      margin,\r\n      size,\r\n      nailsSpacing: 1 / n,\r\n      fitSize: true,\r\n    };\r\n\r\n    if (this.polygon) {\r\n      this.polygon.setConfig(polygonConfig);\r\n    } else {\r\n      this.polygon = new Polygon(polygonConfig);\r\n    }\r\n\r\n    this.color = new Color({\r\n      ...this.config,\r\n      isMultiColor,\r\n      colorCount: sides,\r\n    });\r\n\r\n    if (isMultiColor) {\r\n      this.colorMap = this.color.getColorMap({\r\n        stepCount: this.getStepCount(),\r\n        colorCount: sides,\r\n      });\r\n    } else {\r\n      this.colorMap = null;\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    const { sides, bezier } = this.config;\r\n    const limitedBezier = Math.min(bezier, Math.ceil(sides / 2) - 1);\r\n\r\n    let step = 0;\r\n    this.renderer.setColor(this.color.getColor(0));\r\n\r\n    for (let side = 0; side < sides; side++) {\r\n      const nextSide = (side + limitedBezier) % sides;\r\n\r\n      if (this.colorMap) {\r\n        this.renderer.setColor(this.colorMap.get(step));\r\n      }\r\n      for (let index = 0; index < this.polygon.nailsPerSide; index++) {\r\n        this.renderer.renderLines(\r\n          this.polygon.getSidePoint({ side, index }),\r\n          this.polygon.getSidePoint({ side: nextSide, index })\r\n        );\r\n\r\n        yield;\r\n        step++;\r\n      }\r\n    }\r\n  }\r\n\r\n  getStepCount() {\r\n    const { sides, n } = this.config;\r\n    return sides * n;\r\n  }\r\n\r\n  drawNails() {\r\n    this.polygon.drawNails(this.nails);\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 20,\r\n  };\r\n}\r\n","import { PI2 } from './math_utils.js';\r\n\r\nexport default class Polygon {\r\n  constructor(config) {\r\n    this.setConfig(config);\r\n  }\r\n\r\n  setConfig(config) {\r\n    const serializedConfig = this._serializeConfig(config);\r\n    if (serializedConfig !== this.serializedConfig) {\r\n      const { rotation = 0, sides: sideCount } = (this.config = config);\r\n\r\n      const sideAngle = PI2 / sideCount;\r\n\r\n      const sides = new Array(sideCount).fill(null).map((_, i) => {\r\n        const angle = sideAngle * i + PI2 * rotation;\r\n        const radiusAngle = -sideAngle * (i - 0.5) - PI2 * rotation;\r\n\r\n        return {\r\n          cos: Math.cos(angle),\r\n          sin: Math.sin(angle),\r\n          center: {\r\n            cos: Math.cos(radiusAngle),\r\n            sin: Math.sin(radiusAngle),\r\n          },\r\n        };\r\n      });\r\n\r\n      Object.assign(this, {\r\n        sides,\r\n        sideCount,\r\n        sideAngle,\r\n      });\r\n\r\n      if (this.points) {\r\n        this.points.clear();\r\n      } else {\r\n        this.points = new Map();\r\n      }\r\n\r\n      Object.assign(this, this._getProps());\r\n\r\n      if (config.fitSize) {\r\n        Object.assign(this, this._getProps(this.getSizeAndCenter()));\r\n        this.points.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  getSizeAndCenter() {\r\n    const { size: configSize, margin } = this.config;\r\n\r\n    const boundingRect = this.getBoundingRect();\r\n    const scale = Math.min(\r\n      (configSize[0] - 2 * margin) / boundingRect.width,\r\n      (configSize[1] - 2 * margin) / boundingRect.height\r\n    );\r\n\r\n    const size = configSize.map(v => v * scale);\r\n    const center = [\r\n      this.center[0] -\r\n        (scale * (boundingRect.left - configSize[0] + boundingRect.right)) / 2,\r\n      this.center[1] -\r\n        (scale * (boundingRect.top - configSize[1] + boundingRect.bottom)) / 2,\r\n    ];\r\n\r\n    this.points.clear();\r\n    return { size, center };\r\n  }\r\n\r\n  _getProps(overrideConfig) {\r\n    const {\r\n      nailsSpacing,\r\n      size,\r\n      margin = 0,\r\n      center: configCenter,\r\n    } = Object.assign({}, this.config, overrideConfig);\r\n\r\n    const center = configCenter ?? this.config.size.map(v => v / 2);\r\n\r\n    const radius = Math.min(...size) / 2 - margin;\r\n    const sideSize = 2 * radius * Math.sin(this.sideAngle / 2);\r\n    const start = [\r\n      radius * Math.sin(this.sideAngle / 2),\r\n      radius * Math.cos(this.sideAngle / 2),\r\n    ];\r\n    const nailsDistance = sideSize * nailsSpacing;\r\n    const radiusNailsCount = Math.floor(radius / nailsDistance);\r\n    const radiusNailsDistance = radius / radiusNailsCount;\r\n\r\n    return {\r\n      nailsSpacing,\r\n      nailsPerSide: 1 / nailsSpacing,\r\n      center,\r\n      radius,\r\n      sideSize,\r\n      start,\r\n      nailsDistance,\r\n      radiusNailsCount,\r\n      radiusNailsDistance,\r\n    };\r\n  }\r\n\r\n  _serializeConfig({ size, margin = 0, rotation = 0, center, sides }) {\r\n    return [size?.join(','), center?.join(','), sides, margin, rotation].join(\r\n      '_'\r\n    );\r\n  }\r\n\r\n  getSidePoint({ side, index }) {\r\n    const pointsMapIndex = [side, index].join('_');\r\n\r\n    if (this.points.has(pointsMapIndex)) {\r\n      return this.points.get(pointsMapIndex);\r\n    }\r\n\r\n    const startX = this.start[0] - index * this.nailsDistance;\r\n    const { cos, sin } = this.sides[side];\r\n\r\n    const point = [\r\n      cos * startX - sin * this.start[1] + this.center[0],\r\n      sin * startX + cos * this.start[1] + this.center[1],\r\n    ];\r\n\r\n    this.points.set(pointsMapIndex, point);\r\n    return point;\r\n  }\r\n\r\n  getCenterPoint({ side, index }) {\r\n    const radius = index * this.radiusNailsDistance;\r\n    const { sin, cos } = this.sides[side].center;\r\n\r\n    return [this.center[0] + sin * radius, this.center[1] + cos * radius];\r\n  }\r\n\r\n  getBoundingRect() {\r\n    const points = this.sides.map((_, side) =>\r\n      this.getSidePoint({ side, index: 0 })\r\n    );\r\n    const firstPoint = points[0];\r\n\r\n    const boundingRect = points.slice(1).reduce(\r\n      (boundingRect, [x, y]) => ({\r\n        left: Math.min(boundingRect.left, x),\r\n        right: Math.max(boundingRect.right, x),\r\n        top: Math.min(boundingRect.top, y),\r\n        bottom: Math.max(boundingRect.bottom, y),\r\n      }),\r\n      {\r\n        left: firstPoint[0],\r\n        right: firstPoint[0],\r\n        top: firstPoint[1],\r\n        bottom: firstPoint[1],\r\n      }\r\n    );\r\n\r\n    boundingRect.height = boundingRect.bottom - boundingRect.top;\r\n    boundingRect.width = boundingRect.right - boundingRect.left;\r\n    Object.freeze(boundingRect);\r\n    return boundingRect;\r\n  }\r\n\r\n  drawNails(nails, { drawCenter = false, drawSides = true } = {}) {\r\n    for (let side = 0; side < this.sideCount; side++) {\r\n      const sideIndexStart = side * this.nailsPerSide;\r\n\r\n      if (drawSides) {\r\n        for (let index = 0; index < this.nailsPerSide; index++) {\r\n          nails.addNail({\r\n            point: this.getSidePoint({ side, index }),\r\n            number: sideIndexStart + index,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (drawCenter) {\r\n        for (let index = 0; index < this.radiusNailsCount; index++) {\r\n          nails.addNail({\r\n            point: this.getCenterPoint({ side, index }),\r\n            number: `${side}_${index}`,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\nimport Polygon from '../helpers/Polygon.js';\r\nimport Color from '../helpers/Color.js';\r\n\r\nconst COLOR_CONFIG = Color.getConfig({\r\n  defaults: {\r\n    isMultiColor: true,\r\n    color: '#29f1ff',\r\n    multicolorRange: 264,\r\n    multicolorStart: 53,\r\n    multicolorByLightness: false,\r\n    minLightness: 30,\r\n    maxLightness: 70,\r\n  },\r\n  exclude: ['colorCount'],\r\n});\r\n\r\nexport default class Flower extends StringArt {\r\n  name = 'Flower';\r\n  id = 'flower';\r\n  link = 'https://www.sqrt.ch/Buch/fadenmodell4_100.svg';\r\n  controls = [\r\n    {\r\n      key: 'sides',\r\n      label: 'Sides',\r\n      defaultValue: 4,\r\n      type: 'range',\r\n      attr: {\r\n        min: 3,\r\n        max: 10,\r\n        step: 1,\r\n      },\r\n    },\r\n    {\r\n      key: 'n',\r\n      label: 'Nails per side',\r\n      defaultValue: 60,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 100,\r\n        step: 1,\r\n      },\r\n    },\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      defaultValue: 2,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 10,\r\n        step: 1,\r\n      },\r\n    },\r\n    Circle.rotationConfig,\r\n    COLOR_CONFIG,\r\n  ];\r\n\r\n  defaultValues = {\r\n    nailsColor: '#29f1ff',\r\n    nailRadius: 1,\r\n    stringWidth: 0.5,\r\n  };\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    const { n, rotation, sides, layers, margin, isMultiColor } = this.config;\r\n    const size = this.getSize();\r\n\r\n    const layerAngleShift = 1 / (sides * layers);\r\n\r\n    this.polygons = new Array(layers).fill(null).map((_, i) => {\r\n      const polygonConfig = {\r\n        sides,\r\n        rotation: rotation + i * layerAngleShift,\r\n        margin,\r\n        size,\r\n        nailsSpacing: 1 / n,\r\n      };\r\n\r\n      return new Polygon(polygonConfig);\r\n    });\r\n\r\n    this.color = new Color({\r\n      ...this.config,\r\n      isMultiColor,\r\n      colorCount: layers,\r\n    });\r\n\r\n    if (isMultiColor) {\r\n      this.colorMap = this.color.getColorMap({\r\n        stepCount: this.getStepCount(),\r\n        colorCount: layers,\r\n      });\r\n    } else {\r\n      this.colorMap = null;\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    const { sides, layers } = this.config;\r\n\r\n    let step = 0;\r\n    this.renderer.setColor(this.color.getColor(0));\r\n\r\n    for (let layer = 0; layer < layers; layer++) {\r\n      const polygon = this.polygons[layer];\r\n\r\n      for (let side = 0; side < sides; side++) {\r\n        const leftSide = side === sides - 1 ? 0 : side + 1;\r\n\r\n        for (let index = 0; index <= polygon.nailsPerSide; index++) {\r\n          if (this.colorMap?.has(step)) {\r\n            this.renderer.setColor(this.colorMap.get(step));\r\n          }\r\n\r\n          const centerIndexes = this.getCenterIndexes({\r\n            polygon,\r\n            sideIndex: index,\r\n          });\r\n\r\n          this.renderer.renderLines(\r\n            polygon.getCenterPoint({\r\n              side: side,\r\n              index: centerIndexes[0],\r\n            }),\r\n            polygon.getSidePoint({ side, index }),\r\n            polygon.getCenterPoint({\r\n              side: leftSide,\r\n              index: centerIndexes[1],\r\n            })\r\n          );\r\n\r\n          yield;\r\n          step++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getCenterIndexes({ polygon, sideIndex }) {\r\n    const extraNailCount = polygon.nailsPerSide - polygon.radiusNailsCount;\r\n\r\n    return [\r\n      sideIndex < extraNailCount\r\n        ? -extraNailCount + sideIndex\r\n        : sideIndex - extraNailCount,\r\n      polygon.radiusNailsCount - sideIndex,\r\n    ];\r\n  }\r\n\r\n  getStepCount() {\r\n    const { sides, n, layers } = this.config;\r\n    return sides * (n + 1) * layers;\r\n  }\r\n\r\n  drawNails() {\r\n    this.polygons.forEach(polygon =>\r\n      polygon.drawNails(this.nails, { drawCenter: true })\r\n    );\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 20,\r\n  };\r\n}\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\nimport Color from '../helpers/Color.js';\r\nimport { gcd, PI2 } from '../helpers/math_utils.js';\r\n\r\nconst COLOR_CONFIG = Color.getConfig({\r\n  defaults: {\r\n    isMultiColor: true,\r\n    color: '#ffffff',\r\n    multicolorRange: 133,\r\n    multicolorStart: 239,\r\n    multicolorByLightness: false,\r\n    minLightness: 30,\r\n    maxLightness: 70,\r\n    colorCount: 4,\r\n  },\r\n  exclude: ['repeatColors', 'mirrorColors'],\r\n});\r\n\r\nexport default class MaurerRose extends StringArt {\r\n  name = 'Maurer Rose';\r\n  id = 'maurer_rose';\r\n  link = 'https://blog.glitch.land/en/posts/maurer-rose/';\r\n  linkText = 'Learn';\r\n  controls = [\r\n    {\r\n      key: 'n',\r\n      label: 'N',\r\n      defaultValue: 4,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 12,\r\n        step: 1,\r\n      },\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'maxSteps',\r\n      label: 'Max steps',\r\n      defaultValue: 512,\r\n      type: 'range',\r\n      attr: {\r\n        min: 3,\r\n        max: 720,\r\n        step: 1,\r\n      },\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'angle',\r\n      label: 'Angle',\r\n      defaultValue: 341,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 720,\r\n        step: 1,\r\n      },\r\n      displayValue: ({ angle }) => `${angle}°`,\r\n      isStructural: true,\r\n    },\r\n    Circle.rotationConfig,\r\n    COLOR_CONFIG,\r\n  ];\r\n\r\n  resetStructure() {\r\n    super.resetStructure();\r\n\r\n    if (this.points) {\r\n      this.points.clear();\r\n    }\r\n    this.calc = null;\r\n  }\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    const { isMultiColor, colorCount } = this.config;\r\n\r\n    if (!this.calc) {\r\n      this.calc = this.getCalc();\r\n    }\r\n\r\n    if (!this.points) {\r\n      this.points = new Map();\r\n    }\r\n\r\n    if (!this.stepCount) {\r\n      this.stepCount = this.getStepCount();\r\n    }\r\n\r\n    this.color = new Color({\r\n      ...this.config,\r\n      isMultiColor,\r\n      colorCount,\r\n    });\r\n\r\n    if (isMultiColor) {\r\n      this.colorMap = this.color.getColorMap({\r\n        stepCount: this.stepCount,\r\n        colorCount,\r\n      });\r\n    } else {\r\n      this.colorMap = null;\r\n    }\r\n  }\r\n\r\n  getCalc() {\r\n    const { n, angle, rotation, maxSteps } = this.config;\r\n    const size = this.getSize();\r\n\r\n    return {\r\n      n,\r\n      angleRadians: (PI2 * angle) / maxSteps,\r\n      radius: Math.min(...size) / 2,\r\n      currentSize: size,\r\n      rotationAngle: -Math.PI * 2 * rotation,\r\n    };\r\n  }\r\n\r\n  getPoint(index) {\r\n    if (this.points.has(index)) {\r\n      return this.points.get(index);\r\n    }\r\n\r\n    const k = index * this.calc.angleRadians;\r\n    const r = this.calc.radius * Math.sin(this.calc.n * k);\r\n\r\n    const point = [\r\n      this.center[0] - r * Math.cos(k - this.calc.rotationAngle),\r\n      this.center[1] - r * Math.sin(k - this.calc.rotationAngle),\r\n    ];\r\n    this.points.set(index, point);\r\n    return point;\r\n  }\r\n\r\n  *generatePoints() {\r\n    const count = this.stepCount;\r\n\r\n    for (let i = 0; i < count + 1; i++) {\r\n      yield { point: this.getPoint(i), index: i };\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    const points = this.generatePoints();\r\n\r\n    let prevPoint;\r\n    this.renderer.setColor(this.color.getColor(0));\r\n\r\n    for (const { point, index } of points) {\r\n      if (!prevPoint) {\r\n        prevPoint = point;\r\n        continue;\r\n      }\r\n\r\n      if (this.colorMap) {\r\n        const stepColor = this.colorMap.get(index);\r\n        if (stepColor) {\r\n          this.renderer.setColor(stepColor);\r\n        }\r\n      }\r\n\r\n      this.renderer.renderLines(prevPoint, point);\r\n      prevPoint = point;\r\n\r\n      yield;\r\n    }\r\n  }\r\n\r\n  getStepCount() {\r\n    if (this.stepCount) {\r\n      return this.stepCount;\r\n    }\r\n\r\n    const { maxSteps, angle, n } = this.config;\r\n    const angleGcd = gcd(maxSteps, angle);\r\n\r\n    let steps = maxSteps / angleGcd;\r\n    if (!(steps % 2) && n % 2) {\r\n      steps /= 2;\r\n    }\r\n    return Math.round(steps);\r\n  }\r\n\r\n  drawNails() {\r\n    const points = this.generatePoints();\r\n    for (const { point, index } of points) {\r\n      this.nails.addNail({ point, number: index });\r\n    }\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    maxSteps: 160,\r\n    angle: 213,\r\n  };\r\n}\r\n","import { PI2 } from '../helpers/math_utils.js';\r\nimport StringArt from '../StringArt.js';\r\nimport Color from '../helpers/Color.js';\r\nimport Polygon from '../helpers/Polygon.js';\r\nimport Circle from '../helpers/Circle.js';\r\n\r\nconst COLOR_CONFIG = Color.getConfig({\r\n  defaults: {\r\n    isMultiColor: true,\r\n    color: '#29f1ff',\r\n    multicolorRange: 43,\r\n    multicolorStart: 25,\r\n    multicolorByLightness: true,\r\n    minLightness: 40,\r\n    maxLightness: 95,\r\n    colorCount: 3,\r\n    repeatColors: true,\r\n    saturation: 83,\r\n    reverseColors: true,\r\n  },\r\n  customControls: [\r\n    {\r\n      key: 'colorPerLevel',\r\n      label: 'Color per level',\r\n      defaultValue: true,\r\n      type: 'checkbox',\r\n    },\r\n  ],\r\n});\r\n\r\nconst ANGLE = -PI2 / 6; // The angle of a equilateral triangle;\r\nconst SIDE_ANGLES = new Array(6)\r\n  .fill(null)\r\n  .map((_, i) => Math.PI / 2 + ANGLE * i);\r\n\r\nexport default class FlowerOfLife extends StringArt {\r\n  name = 'Flower of Life';\r\n  id = 'flower_of_life';\r\n  link =\r\n    'https://www.reddit.com/r/psychedelicartwork/comments/mk97gi/rainbow_flower_of_life_uv_reactive_string_art/';\r\n  controls = [\r\n    {\r\n      key: 'levels',\r\n      label: 'Levels',\r\n      defaultValue: 3,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 10,\r\n        step: 1,\r\n      },\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'density',\r\n      label: 'Density',\r\n      defaultValue: 10,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 50,\r\n        step: 1,\r\n      },\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'globalRotation',\r\n      label: 'Rotation',\r\n      defaultValue: 0,\r\n      type: 'range',\r\n      attr: {\r\n        min: 0,\r\n        max: 30,\r\n        step: 1,\r\n      },\r\n      displayValue: (config, { key }) => `${config[key]}°`,\r\n      isStructural: true,\r\n      affectsStepCount: false,\r\n    },\r\n    {\r\n      key: 'fillGroup',\r\n      label: 'Fill',\r\n      type: 'group',\r\n      children: [\r\n        {\r\n          key: 'fill',\r\n          label: 'Show fill',\r\n          defaultValue: true,\r\n          type: 'checkbox',\r\n          isStructural: true,\r\n        },\r\n        {\r\n          key: 'fillColor',\r\n          label: 'Fill color',\r\n          defaultValue: '#292e29',\r\n          type: 'color',\r\n          show: ({ fill }) => fill,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 'ringGroup',\r\n      label: 'Ring',\r\n      type: 'group',\r\n      children: [\r\n        {\r\n          key: 'renderRing',\r\n          label: 'Show outer ring',\r\n          type: 'checkbox',\r\n          defaultValue: true,\r\n          isStructural: true,\r\n        },\r\n        {\r\n          key: 'ringNailCount',\r\n          label: 'Ring nail count',\r\n          defaultValue: 144,\r\n          type: 'range',\r\n          attr: {\r\n            min: 3,\r\n            max: 360,\r\n            step: 1,\r\n          },\r\n          show: ({ renderRing }) => renderRing,\r\n          isStructural: true,\r\n        },\r\n        {\r\n          key: 'ringSize',\r\n          label: 'Outer ring size',\r\n          defaultValue: 0.23,\r\n          type: 'range',\r\n          attr: {\r\n            min: 0,\r\n            max: 0.5,\r\n            step: 0.01,\r\n          },\r\n          show: ({ renderRing }) => renderRing,\r\n          displayValue: ({ ringSize }) => `${Math.round(100 * ringSize)}%`,\r\n          isStructural: true,\r\n        },\r\n        {\r\n          key: 'ringPadding',\r\n          label: 'Ring padding',\r\n          defaultValue: 0.06,\r\n          type: 'range',\r\n          attr: {\r\n            min: 0,\r\n            max: 0.5,\r\n            step: 0.01,\r\n          },\r\n          show: ({ renderRing }) => renderRing,\r\n          isStructural: true,\r\n          displayValue: ({ ringPadding }) =>\r\n            `${Math.round(100 * ringPadding)}%`,\r\n        },\r\n        {\r\n          key: 'ringColor',\r\n          label: 'Ring color',\r\n          defaultValue: '#e8b564',\r\n          type: 'color',\r\n          show: ({ renderRing }) => renderRing,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 'renderTriangles',\r\n      label: 'Show triangles',\r\n      defaultValue: true,\r\n      type: 'checkbox',\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'renderCaps',\r\n      label: 'Show caps',\r\n      defaultValue: true,\r\n      type: 'checkbox',\r\n      show: ({ renderTriangles }) => renderTriangles,\r\n      isStructural: true,\r\n    },\r\n\r\n    COLOR_CONFIG,\r\n  ];\r\n\r\n  defaultValues = {\r\n    nailsColor: '#474747',\r\n  };\r\n\r\n  getCalc() {\r\n    const {\r\n      levels,\r\n      density,\r\n      margin,\r\n      globalRotation,\r\n      renderCaps,\r\n      fill,\r\n      renderTriangles,\r\n      renderRing,\r\n      ringNailCount,\r\n      ringSize,\r\n      ringPadding,\r\n    } = this.config;\r\n    const globalRotationRadians =\r\n      (globalRotation * Math.PI) / 180 + Math.PI / 6;\r\n\r\n    const radius = renderRing\r\n      ? Math.min(...(this.size ?? this.getSize()).map(v => v / 2 - margin))\r\n      : null;\r\n    const ringDistance = renderRing\r\n      ? Math.floor((ringSize * ringNailCount) / 2)\r\n      : 0; // The number of nails to count for strings in the outer ring\r\n    const ringWidth = renderRing\r\n      ? radius * (1 - Math.cos((PI2 * (ringDistance / ringNailCount)) / 2))\r\n      : 0;\r\n\r\n    const polygon = new Polygon({\r\n      sides: 6,\r\n      size: this.getSize(),\r\n      margin:\r\n        margin +\r\n        ringWidth +\r\n        (renderRing && ringSize ? ringPadding * radius : 0),\r\n      rotation: globalRotationRadians,\r\n      fitSize: false,\r\n    });\r\n\r\n    const edgeSize = polygon.sideSize / levels;\r\n    const nailsLength = edgeSize / (2 * Math.cos(Math.PI / 6));\r\n\r\n    const countPerLevelSide = new Array(levels + (renderCaps ? 1 : 0))\r\n      .fill(null)\r\n      .map((_, level) => level * 2 + 1);\r\n\r\n    return {\r\n      edgeSize,\r\n      triangleHeight: (edgeSize * Math.sqrt(3)) / 2,\r\n      nailsLength,\r\n      triangleCenterDistance: edgeSize / 2,\r\n      nailDistance: nailsLength / density,\r\n      triangleCount: 6 * levels ** 2,\r\n      countPerLevelSide,\r\n      globalRotationRadians,\r\n      fill,\r\n      renderTriangles,\r\n      renderCaps,\r\n      ringNailCount,\r\n      radius,\r\n    };\r\n  }\r\n\r\n  resetStructure() {\r\n    super.resetStructure();\r\n\r\n    this.points = null;\r\n    this.calc = null;\r\n  }\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n\r\n    const {\r\n      isMultiColor,\r\n      levels,\r\n      colorPerLevel,\r\n      colorCount,\r\n      renderRing,\r\n      ringSize,\r\n      ...config\r\n    } = this.config;\r\n\r\n    if (!this.calc) {\r\n      this.calc = this.getCalc();\r\n    }\r\n\r\n    if (renderRing && ringSize) {\r\n      const circleConfig = {\r\n        size: this.size,\r\n        n: this.calc.ringNailCount,\r\n        margin: config.margin,\r\n        rotation: config.globalRotation,\r\n      };\r\n\r\n      if (this.circle) {\r\n        this.circle.setConfig(circleConfig);\r\n      } else {\r\n        this.circle = new Circle(circleConfig);\r\n      }\r\n    } else {\r\n      this.circle = null;\r\n    }\r\n\r\n    if (!this.points) {\r\n      this.points = this.getPoints();\r\n    }\r\n\r\n    if (!this.stepCount) {\r\n      this.stepCount = this.getStepCount(this.calc);\r\n    }\r\n\r\n    const realColorCount = isMultiColor\r\n      ? colorPerLevel\r\n        ? levels\r\n        : Math.min(colorCount, levels)\r\n      : 1;\r\n\r\n    this.color = new Color({\r\n      ...config,\r\n      isMultiColor,\r\n      colorCount: realColorCount,\r\n    });\r\n\r\n    if (isMultiColor) {\r\n      this.colorMap = this.color.getColorMap({\r\n        stepCount: realColorCount,\r\n        colorCount: realColorCount,\r\n      });\r\n    } else {\r\n      this.colorMap = null;\r\n    }\r\n  }\r\n\r\n  getTrianglePoints({ center, rotation, isCapLevel, triangleIndexInSide }) {\r\n    let missingSide;\r\n    if (isCapLevel) {\r\n      const triangleIndex = (triangleIndexInSide + 2) % 3;\r\n      missingSide = this._getNextIndexInTriangle(triangleIndex);\r\n    }\r\n\r\n    // For each side of the triangle, the first point is the center of the triangle:\r\n    const trianglePoints = new Array(3)\r\n      .fill(null)\r\n      .map((_, i) => (i === missingSide ? [] : [center]));\r\n\r\n    for (let side = 0; side < 3; side++) {\r\n      if (isCapLevel && side === missingSide) {\r\n        continue;\r\n      }\r\n      const sideAngle = rotation + side * (PI2 / 3);\r\n      const triangleSidePoints = trianglePoints[side];\r\n\r\n      const cosSideAngle = Math.cos(sideAngle);\r\n      const sinSideAngle = Math.sin(sideAngle);\r\n\r\n      for (let n = 1; n <= this.config.density; n++) {\r\n        const nNailDistance = n * this.calc.nailDistance;\r\n\r\n        triangleSidePoints.push([\r\n          center[0] + nNailDistance * cosSideAngle,\r\n          center[1] + nNailDistance * sinSideAngle,\r\n        ]);\r\n      }\r\n    }\r\n\r\n    return trianglePoints;\r\n  }\r\n\r\n  getPoints() {\r\n    if (this.points) {\r\n      return this.points;\r\n    }\r\n\r\n    const { levels, renderCaps } = this.config;\r\n\r\n    const largeDistance = this.calc.nailsLength;\r\n    const smallDistance = this.calc.triangleHeight - largeDistance;\r\n    const levelsPoints = [];\r\n\r\n    const levelsCount = renderCaps ? levels + 1 : levels;\r\n\r\n    for (let level = 0; level < levelsCount; level++) {\r\n      const isCapLevel = renderCaps && level === levels;\r\n\r\n      const levelTrianglesPoints = [];\r\n      levelsPoints.push(levelTrianglesPoints);\r\n\r\n      const levelSideTriangleCount = this.calc.countPerLevelSide[level];\r\n\r\n      // Caching distances to avoid repeated calculations for each side:\r\n      const levelPositions = new Array(levelSideTriangleCount)\r\n        .fill(null)\r\n        .map((_, n) => {\r\n          const isFlipped = n % 2 === 0;\r\n          const trianglePosition = [\r\n            this.calc.triangleCenterDistance * (n - level),\r\n            level * this.calc.triangleHeight +\r\n              (isFlipped ? largeDistance : smallDistance),\r\n          ];\r\n\r\n          return {\r\n            rotation: Math.atan(trianglePosition[0] / trianglePosition[1]),\r\n            distanceFromCenter: Math.sqrt(\r\n              trianglePosition[0] ** 2 + trianglePosition[1] ** 2\r\n            ),\r\n          };\r\n        });\r\n\r\n      for (let side = 0; side < 6; side++) {\r\n        const sideRotation = SIDE_ANGLES[side];\r\n\r\n        for (let n = 0; n < levelSideTriangleCount; n++) {\r\n          if (isCapLevel && n % 2 === 0) {\r\n            // Cap triangles are only odd indexes\r\n            levelTrianglesPoints.push(null);\r\n            continue;\r\n          }\r\n\r\n          const { distanceFromCenter, rotation } = levelPositions[n];\r\n\r\n          const triangleCenterAngle =\r\n            sideRotation - rotation - this.calc.globalRotationRadians;\r\n\r\n          const rotatedTrianglePosition = [\r\n            this.center[0] + distanceFromCenter * Math.cos(triangleCenterAngle),\r\n            this.center[1] - distanceFromCenter * Math.sin(triangleCenterAngle),\r\n          ];\r\n\r\n          const trianglePoints = this.getTrianglePoints({\r\n            center: rotatedTrianglePosition,\r\n            rotation:\r\n              sideRotation +\r\n              (side * PI2) / 3 -\r\n              n * ANGLE +\r\n              this.calc.globalRotationRadians,\r\n            isCapLevel,\r\n            triangleIndexInSide: n,\r\n          });\r\n\r\n          levelTrianglesPoints.push(trianglePoints);\r\n        }\r\n      }\r\n    }\r\n\r\n    return levelsPoints;\r\n  }\r\n\r\n  *generateTriangleStrings({ points, level, indexInSide }) {\r\n    this.renderer.setColor(this.color.getColor(level));\r\n    const { density, levels } = this.config;\r\n    const isCapLevel = level === levels;\r\n\r\n    const initialSide = isCapLevel\r\n      ? this._getNextIndexInTriangle(indexInSide % 3)\r\n      : 0;\r\n    const lastSide = isCapLevel ? initialSide : 2;\r\n    const lastIndex = isCapLevel ? density : density - 1;\r\n\r\n    for (let side = initialSide; side <= lastSide; side++) {\r\n      const nextSide = this._getNextIndexInTriangle(side);\r\n      let prevPoint = points[side][0];\r\n\r\n      for (let n = 0; n <= lastIndex; n++) {\r\n        const isNextSide = n % 2 === 0;\r\n\r\n        const positions = [];\r\n        const nextSidePoint = isNextSide ? this.config.density - n : n;\r\n        const targetSide = isNextSide ? nextSide : side;\r\n        positions.push(points[targetSide][nextSidePoint]);\r\n\r\n        if (n < density) {\r\n          positions.push(\r\n            points[targetSide][\r\n              isNextSide ? nextSidePoint - 1 : nextSidePoint + 1\r\n            ]\r\n          );\r\n        }\r\n\r\n        this.renderer.renderLines(prevPoint, ...positions);\r\n        prevPoint = positions[positions.length - 1];\r\n\r\n        yield;\r\n      }\r\n    }\r\n  }\r\n\r\n  *generateStringsBetweenTriangles({\r\n    triangle1,\r\n    triangle2,\r\n    level,\r\n    triangleIndex,\r\n    triangleIndexInSide,\r\n    isNextLevel,\r\n    nextLevelTriangleIndex,\r\n  }) {\r\n    const { density, fillColor } = this.config;\r\n    const levelSideCount = this.calc.countPerLevelSide[level];\r\n    const angleShift = (triangleIndex % levelSideCount) % 3;\r\n\r\n    this.renderer.setColor(fillColor);\r\n\r\n    const isLastTriangleInSide = triangleIndexInSide === levelSideCount - 1;\r\n    const firstSide = angleShift;\r\n\r\n    const sideIndex = isNextLevel\r\n      ? [\r\n          this._getNextIndexInTriangle(angleShift),\r\n          this._getNextIndexInTriangle(angleShift, -1),\r\n        ]\r\n      : [\r\n          firstSide,\r\n          this._getNextIndexInTriangle(\r\n            firstSide,\r\n            triangleIndexInSide % 2 ? 1 : -1\r\n          ),\r\n        ];\r\n\r\n    for (let s = 0; s < 2; s++) {\r\n      const order = generateOrderInSide.call(this, s);\r\n\r\n      for (const { pointIndex, triangle1Points, triangle2Points } of order) {\r\n        this.renderer.renderLines(\r\n          triangle1Points[pointIndex],\r\n          triangle2Points[pointIndex]\r\n        );\r\n\r\n        yield;\r\n      }\r\n    }\r\n\r\n    function* generateOrderInSide(side) {\r\n      const t1Side = sideIndex[side];\r\n      const t2Side = getNextTriangleSide.call(this);\r\n\r\n      const triangle1Points = triangle1[t1Side];\r\n      const triangle2Points = triangle2[t2Side];\r\n\r\n      const last = side ? density : density - 1;\r\n\r\n      if (side === 0) {\r\n        for (let n = 0; n <= last; n++) {\r\n          yield { pointIndex: density - n, triangle1Points, triangle2Points };\r\n        }\r\n      } else {\r\n        for (let n = last; n >= 1; n--) {\r\n          yield { pointIndex: density - n, triangle1Points, triangle2Points };\r\n        }\r\n      }\r\n\r\n      function getNextTriangleSide() {\r\n        if (isNextLevel) {\r\n          return this._getNextIndexInTriangle(t1Side);\r\n        } else {\r\n          if (side === 0 && isLastTriangleInSide) {\r\n            return 1;\r\n          } else {\r\n            if (side === 1 && isLastTriangleInSide) {\r\n              return 0;\r\n            } else {\r\n              return this._getNextIndexInTriangle(t1Side, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getNextIndexInTriangle(index, direction = 1) {\r\n    const result = index + direction;\r\n    if (result < 0) {\r\n      return 2;\r\n    }\r\n    if (result > 2) {\r\n      return 0;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  *generateStrings() {\r\n    const {\r\n      fill,\r\n      renderTriangles,\r\n      renderCaps,\r\n      levels,\r\n      renderRing,\r\n      ringSize,\r\n      ringColor,\r\n    } = this.config;\r\n\r\n    const triangleLevels = this.getPoints();\r\n\r\n    let levelIndex = -1;\r\n\r\n    for (const level of triangleLevels) {\r\n      levelIndex++;\r\n      const isCapLevel = levelIndex === levels;\r\n\r\n      let triangleIndex = -1;\r\n      const lastIndexInLevel = level.length - 1;\r\n\r\n      for (const triangle of level) {\r\n        triangleIndex++;\r\n        const levelSideCount = this.calc.countPerLevelSide[levelIndex];\r\n        const triangleIndexInSide = triangleIndex % levelSideCount;\r\n\r\n        if (fill && !isCapLevel) {\r\n          if (triangleIndex === 0) {\r\n            yield* this.generateStringsBetweenTriangles({\r\n              triangle1: level[lastIndexInLevel],\r\n              triangle2: triangle,\r\n              level: levelIndex,\r\n              triangleIndex: lastIndexInLevel,\r\n              triangleIndexInSide: lastIndexInLevel % levelSideCount,\r\n            });\r\n          }\r\n          if (triangleIndex !== lastIndexInLevel) {\r\n            yield* this.generateStringsBetweenTriangles({\r\n              triangle1: triangle,\r\n              triangle2: level[triangleIndex + 1],\r\n              level: levelIndex,\r\n              triangleIndex,\r\n              triangleIndexInSide,\r\n            });\r\n          }\r\n\r\n          if (\r\n            triangleIndexInSide % 2 === 0 &&\r\n            (renderCaps || levelIndex < levels - 1)\r\n          ) {\r\n            const side = Math.floor(triangleIndex / levelSideCount);\r\n            const nextLevelSideCount =\r\n              this.calc.countPerLevelSide[levelIndex + 1];\r\n            const nextLevelTriangleIndex =\r\n              side * nextLevelSideCount + triangleIndexInSide + 1;\r\n\r\n            yield* this.generateStringsBetweenTriangles({\r\n              triangle1: triangle,\r\n              triangle2: triangleLevels[levelIndex + 1][nextLevelTriangleIndex],\r\n              level: levelIndex,\r\n              triangleIndex,\r\n              triangleIndexInSide,\r\n              isNextLevel: true,\r\n              nextLevelTriangleIndex,\r\n            });\r\n          }\r\n        }\r\n\r\n        const indexInSide =\r\n          triangleIndex % this.calc.countPerLevelSide[levelIndex];\r\n\r\n        if (renderTriangles && (!isCapLevel || indexInSide % 2)) {\r\n          yield* this.generateTriangleStrings({\r\n            points: triangle,\r\n            level: levelIndex,\r\n            indexInSide,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (renderRing && ringSize) {\r\n      yield* this.circle.drawRing(this.renderer, {\r\n        ringSize: ringSize / 2,\r\n        color: ringColor,\r\n      });\r\n    }\r\n  }\r\n\r\n  getStepCount(calc) {\r\n    if (this.stepCount) {\r\n      return this.stepCount;\r\n    }\r\n\r\n    if (!calc) {\r\n      calc = this.getCalc();\r\n    }\r\n\r\n    const { levels, density, fill, renderTriangles, renderCaps } = this.config;\r\n    const { triangleCount, ringNailCount = 0 } = calc;\r\n\r\n    const fillStepsPerTriangle = fill ? density * 2 : 0;\r\n    const triangleSteps = renderTriangles ? density * 3 : 0;\r\n\r\n    const stepsPerTriangle = triangleSteps + fillStepsPerTriangle;\r\n\r\n    const levelsWithFillBetween = levels + (renderCaps ? 1 : 0);\r\n    const fillStepsBetweenLevels =\r\n      (fillStepsPerTriangle *\r\n        (levelsWithFillBetween - 1) *\r\n        6 *\r\n        levelsWithFillBetween) /\r\n      2;\r\n    const stepsPerCap = density + 1;\r\n    const capSteps =\r\n      renderTriangles && renderCaps ? 6 * levels * stepsPerCap : 0;\r\n\r\n    return (\r\n      triangleCount * stepsPerTriangle +\r\n      capSteps +\r\n      fillStepsBetweenLevels +\r\n      ringNailCount\r\n    );\r\n  }\r\n\r\n  drawNails() {\r\n    const triangleLevels = this.getPoints();\r\n    let index = 0;\r\n    for (const level of triangleLevels) {\r\n      for (const triangle of level) {\r\n        if (triangle != null) {\r\n          // A cap level has nulls between caps\r\n          for (const triangleSide of triangle) {\r\n            for (const point of triangleSide) {\r\n              this.nails.addNail({ point, number: index++ });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.circle) {\r\n      this.circle.drawNails(this.nails);\r\n    }\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    levels: 3,\r\n    density: 3,\r\n    fill: false,\r\n    renderRing: true,\r\n  };\r\n}\r\n","import StringArt from '../StringArt.js';\r\nimport Circle from '../helpers/Circle.js';\r\nimport Color from '../helpers/Color.js';\r\nimport { PI2 } from '../helpers/math_utils.js';\r\n\r\nconst COLOR_CONFIG = Color.getConfig({\r\n  defaults: {\r\n    isMultiColor: true,\r\n    color: '#ff0000',\r\n    multicolorRange: 133,\r\n    multicolorStart: 239,\r\n    multicolorByLightness: false,\r\n    minLightness: 30,\r\n    maxLightness: 70,\r\n    colorCount: 4,\r\n  },\r\n  customControls: [\r\n    {\r\n      key: 'colorPerLayer',\r\n      label: 'Color per layer',\r\n      defaultValue: true,\r\n      type: 'checkbox',\r\n    },\r\n  ],\r\n});\r\n\r\nconst spreadModes = {\r\n  evenly: {\r\n    f: (layerIndex, { ringSize, layers, n }) => {\r\n      const firstLayerDistance = Math.floor(n * ringSize);\r\n      return Math.floor(((layers - layerIndex) * firstLayerDistance) / layers);\r\n    },\r\n    name: 'Evenly',\r\n  },\r\n  distance: {\r\n    f: (layerIndex, { n, ringSize, layerDistance }) => {\r\n      const firstLayerDistance = Math.floor(n * ringSize);\r\n\r\n      if (layerIndex > 0) {\r\n        return firstLayerDistance - layerIndex * layerDistance;\r\n      }\r\n\r\n      return firstLayerDistance;\r\n    },\r\n    name: 'Specific distance',\r\n  },\r\n};\r\n\r\nexport default class Comet extends StringArt {\r\n  name = 'Comet';\r\n  id = 'comet';\r\n  controls = [\r\n    Circle.nailsConfig,\r\n    {\r\n      key: 'layers',\r\n      label: 'Layers',\r\n      defaultValue: 5,\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: 20,\r\n        step: 1,\r\n      },\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'ringSize',\r\n      label: 'First layer size',\r\n      description:\r\n        'Nail count from the top center nail to the first connected nail in the first layer',\r\n      defaultValue: 0.3,\r\n      type: 'range',\r\n      attr: {\r\n        min: 0,\r\n        max: 1,\r\n        step: 0.01,\r\n      },\r\n      displayValue: ({ ringSize, n }) => Math.floor(n * ringSize),\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'layerSpread',\r\n      label: 'Layer Spread',\r\n      type: 'select',\r\n      defaultValue: 'distance',\r\n      options: Object.entries(spreadModes).map(([key, { name }]) => ({\r\n        value: key,\r\n        label: name,\r\n      })),\r\n      isStructural: true,\r\n    },\r\n    {\r\n      key: 'layerDistance',\r\n      label: 'Layer Distance',\r\n      type: 'range',\r\n      attr: {\r\n        min: 1,\r\n        max: ({ config: { n, layers } }) => Math.floor(n / 2 / layers),\r\n        step: 1,\r\n      },\r\n      defaultValue: 1,\r\n      isStructural: true,\r\n      show: ({ layerSpread }) => layerSpread !== 'evenly',\r\n    },\r\n    Circle.rotationConfig,\r\n    Circle.distortionConfig,\r\n    Circle.displacementConfig,\r\n    COLOR_CONFIG,\r\n  ];\r\n\r\n  defaultValues = {\r\n    n: 51,\r\n    layers: 11,\r\n    colorPerLayer: true,\r\n    multicolorRange: 203,\r\n    multicolorStart: 137,\r\n    ringSize: 0.47,\r\n    rotation: 90 / 360,\r\n    distortion: 0.38,\r\n    displacementFunc: 'fastInOut',\r\n    displacementMag: 1.8,\r\n    displacementFastArea: 0.43,\r\n    layerSpread: 'distance',\r\n    layerDistance: 1,\r\n  };\r\n\r\n  resetStructure() {\r\n    if (this.points) {\r\n      this.points.clear();\r\n    }\r\n\r\n    if (this.layerRingDistances) {\r\n      this.layerRingDistances.clear();\r\n    }\r\n  }\r\n\r\n  setUpDraw() {\r\n    super.setUpDraw();\r\n    const circleConfig = {\r\n      size: this.size,\r\n      n: this.config.n,\r\n      margin: this.config.margin,\r\n      rotation: this.config.rotation,\r\n      distortion: this.config.distortion,\r\n      displacementFunc: this.config.displacementFunc,\r\n      displacementMag: this.config.displacementMag,\r\n      displacementFastArea: this.config.displacementFastArea,\r\n    };\r\n\r\n    if (this.circle) {\r\n      this.circle.setConfig(circleConfig);\r\n    } else {\r\n      this.circle = new Circle(circleConfig);\r\n    }\r\n\r\n    if (!this.stepCount) {\r\n      this.stepCount = this.getStepCount();\r\n    }\r\n\r\n    const { isMultiColor, colorCount, layers, colorPerLayer } = this.config;\r\n    const realColorCount = isMultiColor\r\n      ? colorPerLayer\r\n        ? layers\r\n        : Math.min(colorCount, layers)\r\n      : 1;\r\n\r\n    this.color = new Color({\r\n      ...this.config,\r\n      isMultiColor,\r\n      colorCount: realColorCount,\r\n    });\r\n  }\r\n\r\n  getCalc() {\r\n    const { n } = this.config;\r\n    const size = this.getSize();\r\n\r\n    return {\r\n      n,\r\n      angleRadians: (PI2 * angle) / maxSteps,\r\n      radius: Math.min(...size) / 2,\r\n      currentSize: size,\r\n      rotationAngle: -Math.PI * 2 * rotation,\r\n    };\r\n  }\r\n\r\n  getLayerRingDistance(layerIndex) {\r\n    const spread = spreadModes[this.config.layerSpread];\r\n    if (!spread) {\r\n      throw new Error(`Invalid spread mode, \"${this.config.layerSpread}\"!`);\r\n    }\r\n\r\n    return spread.f(layerIndex, this.config);\r\n  }\r\n\r\n  getLayerRingStepCount(layerIndex) {\r\n    const layerRingDistance = this.getLayerRingDistance(layerIndex);\r\n    return (this.config.n - layerRingDistance + 1) * 2 - 1;\r\n  }\r\n\r\n  *drawLayer(layerIndex = 0) {\r\n    const { n } = this.config;\r\n    const ringDistance = this.getLayerRingDistance(layerIndex);\r\n    const stepCount = n - ringDistance + 1;\r\n\r\n    let prevPoint = this.circle.getPoint(0);\r\n    let prevPointIndex = 0;\r\n    this.renderer.setColor(this.color.getColor(layerIndex));\r\n\r\n    for (let i = 0; i < n - ringDistance + 1; i++) {\r\n      const pointIndex = i + ringDistance;\r\n      const point = this.circle.getPoint(pointIndex);\r\n\r\n      this.renderer.renderLines(prevPoint, point);\r\n      yield;\r\n\r\n      if (i !== stepCount - 1) {\r\n        prevPointIndex = i + 1;\r\n        prevPoint = this.circle.getPoint(prevPointIndex);\r\n\r\n        this.renderer.renderLines(point, prevPoint);\r\n\r\n        yield;\r\n      }\r\n    }\r\n  }\r\n\r\n  *generateStrings() {\r\n    for (let layer = 0; layer < this.config.layers; layer++) {\r\n      yield* this.drawLayer(layer);\r\n    }\r\n  }\r\n\r\n  getStepCount() {\r\n    if (this.stepCount) {\r\n      return this.stepCount;\r\n    }\r\n\r\n    const { layers } = this.config;\r\n    return new Array(layers)\r\n      .fill(0)\r\n      .reduce(\r\n        (totalStepCount, _, layerIndex) =>\r\n          totalStepCount + this.getLayerRingStepCount(layerIndex),\r\n        0\r\n      );\r\n  }\r\n\r\n  drawNails() {\r\n    this.circle.drawNails(this.nails);\r\n  }\r\n\r\n  static thumbnailConfig = {\r\n    n: 24,\r\n    layers: 8,\r\n  };\r\n}\r\n","const elements = {\r\n  controls: document.querySelector('#controls'),\r\n  controlsPanel: document.querySelector('#controls_panel'),\r\n  sidebarForm: document.querySelector('#sidebar_form'),\r\n};\r\n\r\nconst EVENTS = new Set(['input', 'change']);\r\nconst STATE_LOCAL_STORAGE_KEY = 'controls_state';\r\nconst RANGE_SCROLL_LOCK_TIMEOUT = 120;\r\n\r\nlet inputTimeout;\r\n\r\nexport default class EditorControls {\r\n  constructor({ pattern }) {\r\n    this.pattern = pattern;\r\n    this.state = this._getState() ?? { groups: {} };\r\n\r\n    this.eventHandlers = {\r\n      input: new Set(),\r\n      change: new Set(),\r\n    };\r\n\r\n    this._toggleFieldset = e => {\r\n      if (e.target.nodeName === 'LEGEND') {\r\n        e.target.parentElement.classList.toggle('minimized');\r\n        const groupId = e.target.parentElement.dataset.group;\r\n        this.state = {\r\n          ...this.state,\r\n          groups: {\r\n            ...this.state.groups,\r\n            [groupId]: !e.target.parentElement.classList.contains('minimized'),\r\n          },\r\n        };\r\n        this._updateState(this.state);\r\n      }\r\n    };\r\n\r\n    this._toggleFieldSetOnEnter = e => {\r\n      if (e.target.nodeName === 'LEGEND' && e.key === 'Enter') {\r\n        this._toggleFieldset(e);\r\n      }\r\n    };\r\n\r\n    this._wrappedOnInput = e => this._onInput(e);\r\n    elements.controls.addEventListener('input', this._wrappedOnInput);\r\n    this._wrappedOnTouchStart = e => this._onTouchStart(e);\r\n    this._wrappedOnMouseDown = e => this._onMouseDown(e);\r\n    elements.controls.addEventListener('touchstart', this._wrappedOnTouchStart);\r\n    elements.controls.addEventListener('mousedown', this._wrappedOnMouseDown);\r\n    elements.sidebarForm.addEventListener('click', this._toggleFieldset);\r\n    elements.sidebarForm.addEventListener(\r\n      'keydown',\r\n      this._toggleFieldSetOnEnter\r\n    );\r\n    this.controlElements = {};\r\n    this.renderControls();\r\n  }\r\n\r\n  destroy() {\r\n    elements.controls.removeEventListener('input', this._wrappedOnInput);\r\n    elements.sidebarForm.removeEventListener('click', this._toggleFieldset);\r\n    elements.sidebarForm.removeEventListener(\r\n      'keydown',\r\n      this._toggleFieldSetOnEnter\r\n    );\r\n    elements.controls.removeEventListener(\r\n      'touchstart',\r\n      this._wrappedOnTouchStart\r\n    );\r\n    elements.controls.removeEventListener(\r\n      'mousedown',\r\n      this._wrappedOnMouseDown\r\n    );\r\n    elements.controls.innerHTML = '';\r\n  }\r\n\r\n  addEventListener(event, eventHandler) {\r\n    if (!EVENTS.has(event)) {\r\n      throw new Error(`Unsupported event for EditorControls, \"${event}\"!`);\r\n    }\r\n\r\n    if (!(eventHandler instanceof Function)) {\r\n      throw new Error('Invalid event handler.');\r\n    }\r\n\r\n    this.eventHandlers[event].add(eventHandler);\r\n  }\r\n\r\n  _triggerEvent(event, eventData) {\r\n    for (const eventHandler of this.eventHandlers[event]) {\r\n      eventHandler(eventData);\r\n    }\r\n  }\r\n\r\n  _onMouseDown(e) {\r\n    // Clearing selection when starting to click in the controls, do avoid a buggy behavior,\r\n    // when if a control's display value was selected (can happen by mistake), the drag of range input doesn't work.\r\n    const selection = window.getSelection();\r\n    if (selection) {\r\n      selection.removeAllRanges();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Needed for range inputs, to avoid changing the value when the user drags to\r\n   * scroll and accidentally touches a range input when intending to scroll.\r\n   * @param {Event} e\r\n   */\r\n  _onTouchStart(e) {\r\n    if (e.target.getAttribute('type') === 'range') {\r\n      this._postponeRangeInput = true;\r\n      this.currentInputRange = e.target;\r\n      this.currentInputRangeValue = e.target.value;\r\n      this._rangeLockTimeout = setTimeout(() => {\r\n        this._postponeRangeInput = false;\r\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\r\n      this._wrappedOnTouchEnd = e => this._onTouchEnd(e);\r\n      document.body.addEventListener('touchend', this._wrappedOnTouchEnd);\r\n      this._wrappedOnRangeScroll = e => this._onRangeScroll(e);\r\n      elements.controlsPanel.addEventListener(\r\n        'scroll',\r\n        this._wrappedOnRangeScroll\r\n      );\r\n    }\r\n  }\r\n\r\n  _onTouchEnd() {\r\n    document.body.removeEventListener('touchend', this._wrappedOnTouchEnd);\r\n    elements.controlsPanel.removeEventListener(\r\n      'scroll',\r\n      this._wrappedOnRangeScroll\r\n    );\r\n\r\n    if (this._lockRange) {\r\n      this._lockRange = false;\r\n      if (this.currentInputRange) {\r\n        this.currentInputRange.value = this.currentInputRangeValue;\r\n      }\r\n    }\r\n\r\n    this.currentInputRange = this.currentInputRangeValue = null;\r\n  }\r\n\r\n  _onRangeScroll() {\r\n    this._lockRange = true;\r\n  }\r\n\r\n  _onInput(e) {\r\n    clearTimeout(inputTimeout);\r\n    clearTimeout(this._postponeRangeInputTimeout);\r\n\r\n    if (this._postponeRangeInput && e.target.getAttribute('type') === 'range') {\r\n      e.preventDefault();\r\n      this._postponeRangeInputTimeout = setTimeout(() => {\r\n        this._onInput(e);\r\n      }, RANGE_SCROLL_LOCK_TIMEOUT);\r\n      return false;\r\n    }\r\n    if (this._lockRange) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n\r\n    this.updateInput({\r\n      inputElement: e.target,\r\n      originalEvent: e,\r\n      deferChange: true,\r\n    });\r\n  }\r\n\r\n  updateInput({ inputElement, originalEvent, deferChange = true }) {\r\n    const inputValue = getInputValue(inputElement.type, inputElement);\r\n    const controlKey = inputElement.id.replace(/^config_/, '');\r\n\r\n    this.pattern.setConfigValue(controlKey, inputValue);\r\n\r\n    const { config, displayValue } = this.controlElements[controlKey];\r\n    if (displayValue) {\r\n      const formattedValue = config.displayValue\r\n        ? config.displayValue(this.pattern.config, config)\r\n        : inputElement.value;\r\n      displayValue.innerText = formattedValue;\r\n    }\r\n\r\n    const eventData = Object.freeze({\r\n      control: controlKey,\r\n      value: inputValue,\r\n      originalEvent,\r\n      pattern: this.pattern,\r\n    });\r\n\r\n    this._triggerEvent('input', eventData);\r\n\r\n    const triggerChange = () => {\r\n      this._triggerEvent('change', eventData);\r\n      this.updateControlsVisibility();\r\n      this.updateControlsAttributes();\r\n    };\r\n\r\n    if (deferChange) {\r\n      inputTimeout = setTimeout(triggerChange, 100);\r\n    } else {\r\n      triggerChange();\r\n    }\r\n  }\r\n\r\n  _getState() {\r\n    const state = localStorage.getItem(STATE_LOCAL_STORAGE_KEY);\r\n    if (state) {\r\n      try {\r\n        return JSON.parse(state);\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _updateState(newState) {\r\n    if (newState) {\r\n      localStorage.setItem(STATE_LOCAL_STORAGE_KEY, JSON.stringify(newState));\r\n    } else {\r\n      localStorage.removeItem(STATE_LOCAL_STORAGE_KEY);\r\n    }\r\n  }\r\n\r\n  updateControlsAttributes(configControls = this.pattern.configControls) {\r\n    configControls.forEach(control => {\r\n      if (control.attr) {\r\n        const functionAttrs = Object.entries(control.attr).filter(\r\n          ([_, value]) => value instanceof Function\r\n        );\r\n        if (functionAttrs.length) {\r\n          const inputEl = this.controlElements[control.key].input;\r\n          if (inputEl) {\r\n            functionAttrs.forEach(([name, value]) => {\r\n              const newAttrValue = value(this.pattern);\r\n              if (newAttrValue != inputEl.getAttribute(name)) {\r\n                if (\r\n                  (name === 'min' && inputEl.value < newAttrValue) ||\r\n                  (name === 'max' && inputEl.value > newAttrValue)\r\n                ) {\r\n                  inputEl.value = newAttrValue;\r\n                  this.updateInput({ inputElement: inputEl });\r\n                }\r\n                inputEl.setAttribute(name, newAttrValue);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updateControlsVisibility(configControls = this.pattern.configControls) {\r\n    configControls.forEach(control => {\r\n      if (control.show) {\r\n        const shouldShowControl = control.show(this.pattern.config, control);\r\n        const controlEl = this.controlElements[control.key].control;\r\n        if (controlEl) {\r\n          if (shouldShowControl) {\r\n            controlEl.removeAttribute('hidden');\r\n          } else {\r\n            controlEl.setAttribute('hidden', 'hidden');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (control.isDisabled) {\r\n        const shouldDisableControl = control.isDisabled(this.pattern.config);\r\n        const inputEl = this.controlElements[control.key].input;\r\n        if (inputEl) {\r\n          if (shouldDisableControl) {\r\n            inputEl.setAttribute('disabled', 'disabled');\r\n          } else {\r\n            inputEl.removeAttribute('disabled');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (control.children) {\r\n        this.updateControlsVisibility(control.children);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateInputs(config) {\r\n    Object.entries(config).forEach(([key, value]) => {\r\n      const { input, value: valueEl } = this.controlElements[key];\r\n      if (input) {\r\n        if (input.type === 'checkbox') {\r\n          input.checked = value;\r\n        } else {\r\n          input.value = value;\r\n        }\r\n        if (valueEl) {\r\n          valueEl.innerText = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  renderControls(containerEl = elements.controls, _configControls) {\r\n    const configControls = _configControls ?? this.pattern.configControls;\r\n    containerEl.innerHTML = '';\r\n    const controlsFragment = document.createDocumentFragment();\r\n\r\n    configControls.forEach(control => {\r\n      const controlId = `config_${control.key}`;\r\n      const controlElements = (this.controlElements[control.key] = {\r\n        config: control,\r\n      });\r\n\r\n      let controlEl;\r\n\r\n      if (control.type === 'group') {\r\n        controlEl = document.createElement('fieldset');\r\n        controlEl.setAttribute('data-group', control.key);\r\n        const groupTitleEl = document.createElement('legend');\r\n        groupTitleEl.setAttribute('tabindex', '0');\r\n        groupTitleEl.innerText = control.label;\r\n        controlEl.appendChild(groupTitleEl);\r\n        controlEl.className = 'control control_group';\r\n        if (control.defaultValue === 'minimized') {\r\n          controlEl.classList.add('minimized');\r\n          this.state.groups[control.key] = false;\r\n        }\r\n        const childrenContainer = document.createElement('div');\r\n        controlEl.appendChild(childrenContainer);\r\n        this.renderControls(childrenContainer, control.children);\r\n      } else {\r\n        controlEl = document.createElement('div');\r\n        controlEl.className = 'control';\r\n\r\n        const label = document.createElement('label');\r\n        label.innerHTML = control.label;\r\n        label.setAttribute('for', controlId);\r\n\r\n        const inputEl = (controlElements.input = document.createElement(\r\n          control.type === 'select' ? 'select' : 'input'\r\n        ));\r\n\r\n        const inputValue =\r\n          this.pattern.config[control.key] ?? control.defaultValue;\r\n\r\n        if (control.type === 'select') {\r\n          const selectOptions = document.createDocumentFragment();\r\n          control.options.forEach(_option => {\r\n            const { value, label } =\r\n              typeof _option === 'string'\r\n                ? { value: _option, label: _option }\r\n                : _option;\r\n            const optionEl = document.createElement('option');\r\n            optionEl.setAttribute('value', value);\r\n            optionEl.innerText = label;\r\n            selectOptions.appendChild(optionEl);\r\n          });\r\n          inputEl.appendChild(selectOptions);\r\n          inputEl.value = inputValue;\r\n          controlEl.appendChild(label);\r\n          controlEl.appendChild(inputEl);\r\n        } else {\r\n          inputEl.setAttribute('type', control.type);\r\n\r\n          if (control.type === 'checkbox') {\r\n            inputEl.checked = inputValue;\r\n            controlEl.appendChild(inputEl);\r\n            controlEl.appendChild(label);\r\n          } else {\r\n            controlEl.appendChild(label);\r\n            controlEl.appendChild(inputEl);\r\n            setTimeout(() => {\r\n              inputEl.value = inputValue;\r\n            });\r\n            const inputValueEl = (controlElements.displayValue =\r\n              document.createElement('span'));\r\n            inputValueEl.id = `config_${control.key}_value`;\r\n            inputValueEl.innerText = control.displayValue\r\n              ? control.displayValue(this.pattern.config, control)\r\n              : inputValue;\r\n            inputValueEl.className = 'control_input_value';\r\n            controlEl.appendChild(inputValueEl);\r\n          }\r\n        }\r\n\r\n        if (control.attr) {\r\n          Object.entries(control.attr).forEach(([attr, value]) => {\r\n            const realValue =\r\n              value instanceof Function ? value(this.pattern) : value;\r\n            inputEl.setAttribute(attr, realValue);\r\n          });\r\n        }\r\n\r\n        inputEl.id = controlId;\r\n      }\r\n\r\n      this.controlElements[control.key].control = controlEl;\r\n      controlEl.id = `control_${control.key}`;\r\n      controlsFragment.appendChild(controlEl);\r\n    });\r\n\r\n    containerEl.appendChild(controlsFragment);\r\n    this.updateGroupsState();\r\n    requestAnimationFrame(() => this.updateControlsVisibility());\r\n  }\r\n\r\n  updateGroupsState() {\r\n    const groups = elements.sidebarForm.querySelectorAll('[data-group]');\r\n    groups.forEach(groupEl => {\r\n      const groupId = groupEl.dataset.group;\r\n      const groupState = this.state.groups[groupId];\r\n      if (typeof groupState === 'boolean') {\r\n        if (groupState) {\r\n          groupEl.classList.remove('minimized');\r\n        } else {\r\n          groupEl.classList.add('minimized');\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction getInputValue(type, inputElement) {\r\n  switch (type) {\r\n    case 'range':\r\n      return parseFloat(inputElement.value);\r\n    case 'checkbox':\r\n      return inputElement.checked;\r\n    case 'number':\r\n      return parseFloat(inputElement.value);\r\n    default:\r\n      return inputElement.value;\r\n  }\r\n}\r\n","const sizeControls = document.querySelector('#size_controls');\r\n\r\nconst elements = {\r\n  sizeSelect: sizeControls.querySelector('#size_select'),\r\n  sizeCustom: sizeControls.querySelector('#size_custom'),\r\n  width: sizeControls.querySelector('#size_custom_width'),\r\n  height: sizeControls.querySelector('#size_custom_height'),\r\n  orientationSelect: sizeControls.querySelector('#size_orientation_select'),\r\n};\r\n\r\nfunction cmToPixels(cm, dpi = 300) {\r\n  return Math.floor((cm / 2.54) * dpi);\r\n}\r\n\r\nconst SCREEN_SIZE = [\r\n  Math.floor(window.screen.width),\r\n  Math.floor(window.screen.height),\r\n];\r\n\r\nconst SIZES = [\r\n  { id: 'fit', name: 'Fit to screen' },\r\n  {\r\n    id: 'A4',\r\n    value: [20, 28].map(v => cmToPixels(v)),\r\n    orientationSelect: true,\r\n  },\r\n  {\r\n    id: 'A3',\r\n    value: [28, 40].map(v => cmToPixels(v)),\r\n    orientationSelect: true,\r\n  },\r\n  {\r\n    id: 'screen',\r\n    name: `Screen size (${SCREEN_SIZE.join('x')})`,\r\n    value: SCREEN_SIZE,\r\n  },\r\n  { id: 'custom', name: 'Custom...' },\r\n];\r\n\r\nexport default class EditorSizeControls {\r\n  element = document.querySelector('#size_controls');\r\n\r\n  constructor({ getCurrentSize }) {\r\n    const sizeOptionsFragment = document.createDocumentFragment();\r\n    SIZES.forEach(size => {\r\n      const sizeListItem = document.createElement('option');\r\n      sizeListItem.setAttribute('value', size.id);\r\n      sizeListItem.innerText = size.name ?? size.id;\r\n      sizeOptionsFragment.appendChild(sizeListItem);\r\n    });\r\n    elements.sizeSelect.appendChild(sizeOptionsFragment);\r\n    this.selectedSize = SIZES[0];\r\n\r\n    elements.sizeSelect.addEventListener('change', e => {\r\n      const selectedSizeId = e.target.value;\r\n      const size = SIZES.find(({ id }) => id === selectedSizeId);\r\n      this.selectedSize = size;\r\n\r\n      if (size.id === 'custom') {\r\n        elements.sizeCustom.removeAttribute('hidden');\r\n        const [width, height] = getCurrentSize();\r\n        elements.width.value = width;\r\n        elements.height.value = height;\r\n      } else {\r\n        elements.sizeCustom.setAttribute('hidden', 'hidden');\r\n        this._notifyOnChange(this.getValue());\r\n      }\r\n\r\n      if (size.orientationSelect) {\r\n        elements.orientationSelect.removeAttribute('hidden');\r\n      } else {\r\n        elements.orientationSelect.setAttribute('hidden', 'hidden');\r\n      }\r\n    });\r\n\r\n    elements.orientationSelect.addEventListener('change', e => {\r\n      this._notifyOnChange(this.getValue());\r\n    });\r\n\r\n    elements.sizeCustom.addEventListener('focusin', e => {\r\n      e.target.select();\r\n    });\r\n\r\n    elements.sizeCustom.addEventListener('input', () => {\r\n      this._notifyOnChange([\r\n        elements.width.value ? parseInt(elements.width.value) : null,\r\n        elements.height.value ? parseInt(elements.height.value) : null,\r\n      ]);\r\n    });\r\n  }\r\n\r\n  _notifyOnChange([width, height] = []) {\r\n    this.element.dispatchEvent(\r\n      new CustomEvent('sizechange', { detail: { width, height } })\r\n    );\r\n  }\r\n\r\n  getValue() {\r\n    if (this.selectedSize.id === 'custom') {\r\n      return [\r\n        parseInt(elements.width.value, 10),\r\n        parseInt(elements.height.value, 10),\r\n      ];\r\n    } else {\r\n      let value = this.selectedSize.value;\r\n      if (\r\n        this.selectedSize.orientationSelect &&\r\n        elements.orientationSelect.value === 'horizontal'\r\n      ) {\r\n        value = Array.from(value).reverse();\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n}\r\n","import patternTypes from '../pattern_types.js';\r\nimport CanvasRenderer from '../renderers/CanvasRenderer.js';\r\n\r\nconst THUMBNAIL_WIDTH_PX = '100px';\r\nconst MINIMIZED_CLASS = 'minimized';\r\n\r\nexport class Thumbnails {\r\n  elements = {\r\n    root: document.querySelector('#pattern_select_panel'),\r\n    thumbnails: document.querySelector('#pattern_select_thumbnails'),\r\n    toggleBtn: document.querySelector('#pattern_select_btn'),\r\n    dropdown: document.querySelector('#pattern_select_dropdown'),\r\n  };\r\n\r\n  constructor() {\r\n    this.elements.toggleBtn.addEventListener('click', () => this.toggle());\r\n  }\r\n\r\n  toggle() {\r\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\r\n      this.open();\r\n    } else if (this.pattern) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  open() {\r\n    if (this.elements.root.classList.contains(MINIMIZED_CLASS)) {\r\n      this.elements.root.classList.remove(MINIMIZED_CLASS);\r\n      if (!this.thumbnailsRendered) {\r\n        this.createThumbnails();\r\n        this.thumbnailsRendered = true;\r\n      }\r\n\r\n      this._onClickOutside = e => {\r\n        if (!e.target.closest('#pattern_select_panel')) {\r\n          this.toggle();\r\n        }\r\n      };\r\n\r\n      document.body.addEventListener('mousedown', this._onClickOutside);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    if (!this.elements.root.classList.contains(MINIMIZED_CLASS)) {\r\n      this.elements.root.classList.add(MINIMIZED_CLASS);\r\n      document.body.removeEventListener('mousedown', this._onClickOutside);\r\n      this._onClickOutside = null;\r\n    }\r\n  }\r\n\r\n  setCurrentPattern(pattern) {\r\n    this.pattern = pattern;\r\n    this.elements.toggleBtn.innerText = pattern?.name ?? 'Choose a pattern';\r\n  }\r\n\r\n  createThumbnails() {\r\n    const thumbnailsFragment = document.createDocumentFragment();\r\n    const patterns = [];\r\n\r\n    patternTypes.forEach(PatternType => {\r\n      const patternLink = document.createElement('a');\r\n      const renderer = new CanvasRenderer(patternLink);\r\n\r\n      patternLink.style.width = patternLink.style.height = THUMBNAIL_WIDTH_PX;\r\n\r\n      const pattern = new PatternType(renderer);\r\n      pattern.config = Object.assign(\r\n        {\r\n          margin: 1,\r\n          enableBackground: false,\r\n          nailRadius: 0.5,\r\n        },\r\n        PatternType.thumbnailConfig\r\n      );\r\n\r\n      patterns.push(pattern);\r\n\r\n      const li = document.createElement('li');\r\n      thumbnailsFragment.appendChild(li);\r\n\r\n      patternLink.href = `?pattern=${pattern.id}`;\r\n      patternLink.setAttribute('data-pattern', pattern.id);\r\n      patternLink.title = pattern.name;\r\n      li.appendChild(patternLink);\r\n    });\r\n\r\n    this.elements.thumbnails.appendChild(thumbnailsFragment);\r\n    patterns.forEach(pattern => pattern.draw());\r\n\r\n    this.elements.thumbnails.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const link = e.target.closest('[data-pattern]');\r\n\r\n      if (!link) {\r\n        return false;\r\n      }\r\n\r\n      this.elements.root.dispatchEvent(\r\n        new CustomEvent('change', {\r\n          detail: { pattern: link.dataset.pattern },\r\n        })\r\n      );\r\n      this.toggle();\r\n    });\r\n  }\r\n\r\n  addOnChangeListener(listener) {\r\n    this.elements.root.addEventListener('change', listener);\r\n  }\r\n\r\n  removeOnChangeListener(listener) {\r\n    this.elements.root.removeEventListener('change', listener);\r\n  }\r\n}\r\n","import Renderer from './Renderer.js';\r\nimport { PI2 } from '../helpers/math_utils.js';\r\n\r\nexport default class CanvasRenderer extends Renderer {\r\n  constructor(parentElement) {\r\n    super(parentElement);\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const bsr =\r\n      this.ctx.webkitBackingStorePixelRatio ||\r\n      this.ctx.mozBackingStorePixelRatio ||\r\n      this.ctx.msBackingStorePixelRatio ||\r\n      this.ctx.oBackingStorePixelRatio ||\r\n      this.ctx.backingStorePixelRatio ||\r\n      1;\r\n    this.pixelRatio = dpr / bsr;\r\n    this.ctx.globalCompositeOperation = 'source-over';\r\n\r\n    parentElement.appendChild(this.canvas);\r\n  }\r\n\r\n  get element() {\r\n    return this.canvas;\r\n  }\r\n\r\n  reset() {\r\n    this.ctx.clearRect(0, 0, ...this.getSize());\r\n    this.canvas.removeAttribute('width');\r\n    this.canvas.removeAttribute('height');\r\n\r\n    const [width, height] = this.getSize();\r\n    this.canvas.setAttribute('width', width);\r\n    this.canvas.setAttribute('height', height);\r\n  }\r\n\r\n  setColor(color) {\r\n    this.ctx.strokeStyle = color;\r\n  }\r\n\r\n  setLineWidth(width) {\r\n    this.ctx.lineWidth = width;\r\n  }\r\n\r\n  setBackground(color) {\r\n    this.ctx.globalCompositeOperation = 'destination-over';\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillRect(0, 0, ...this.getSize());\r\n    this.ctx.globalCompositeOperation = 'source-over';\r\n  }\r\n\r\n  getSize() {\r\n    return [\r\n      this.canvas.clientWidth * this.pixelRatio,\r\n      this.canvas.clientHeight * this.pixelRatio,\r\n    ];\r\n  }\r\n\r\n  renderLines(startPosition, ...positions) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(...startPosition);\r\n\r\n    for (const position of positions) {\r\n      this.ctx.lineTo(...position);\r\n    }\r\n\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin = 0 }) {\r\n    const centerX = this.canvas.width / 2;\r\n\r\n    this.ctx.globalCompositeOperation = 'source-over';\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.textBaseline = 'middle';\r\n    this.ctx.font = `${fontSize}px sans-serif`;\r\n    const nailNumberOffset = radius + margin;\r\n\r\n    nails.forEach(({ point: [x, y], number }) => {\r\n      this.ctx.moveTo(x + radius, y);\r\n      this.ctx.arc(x, y, radius, 0, PI2);\r\n      if (renderNumbers && number != null) {\r\n        const isRightAlign = x < centerX;\r\n\r\n        const numberPosition = [\r\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\r\n          y,\r\n        ];\r\n\r\n        this.ctx.textAlign = isRightAlign ? 'right' : 'left';\r\n        this.ctx.fillText(String(number), ...numberPosition);\r\n      }\r\n    });\r\n\r\n    this.ctx.fill();\r\n  }\r\n\r\n  clear() {\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  toDataURL() {\r\n    return this.canvas.toDataURL();\r\n  }\r\n}\r\n","const MAX_FLOAT_DECIMALS = 6;\r\n\r\nexport function serializeConfig(pattern) {\r\n  const { defaultConfig, config } = pattern;\r\n\r\n  const nonDefaultConfigValues = Object.entries(config).map(([key, value]) => {\r\n    if (value === defaultConfig[key]) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof value === 'boolean') {\r\n      return `!${value ? 1 : 0}`;\r\n    }\r\n\r\n    if (typeof value === 'number') {\r\n      return parseFloat(value.toFixed(MAX_FLOAT_DECIMALS));\r\n    }\r\n\r\n    return value;\r\n  });\r\n\r\n  while (nonDefaultConfigValues[nonDefaultConfigValues.length - 1] === null) {\r\n    nonDefaultConfigValues.pop();\r\n  }\r\n\r\n  if (!nonDefaultConfigValues.length) {\r\n    return '';\r\n  }\r\n\r\n  const serializedConfigValues = nonDefaultConfigValues\r\n    .join('_')\r\n    .replace(/\\_{2,}/g, match => '~' + match.length + '_');\r\n  return serializedConfigValues;\r\n}\r\n\r\nconst numberRegExp = /^\\-?\\d+(\\.\\d+)?$/;\r\nconst booleanRegExp = /^(?:!)([01])$/;\r\n\r\nexport function deserializeConfig(pattern, serializedCofig) {\r\n  const serializedConfigValues = serializedCofig\r\n    .replace(/(?:~)(\\d+)(?:_)/g, (_, commaCount) =>\r\n      new Array(+commaCount).fill('_').join('')\r\n    )\r\n    .split('_')\r\n    .map(v => {\r\n      if (v === '') {\r\n        return null;\r\n      }\r\n\r\n      if (numberRegExp.test(v)) {\r\n        return parseFloat(v);\r\n      }\r\n\r\n      const booleanMatch = v.match(booleanRegExp);\r\n      if (booleanMatch) {\r\n        return booleanMatch[1] === '1';\r\n      }\r\n\r\n      return v;\r\n    });\r\n\r\n  const configKeys = Object.keys(pattern.defaultConfig);\r\n\r\n  return serializedConfigValues.reduce((config, serializedValue, i) => {\r\n    if (serializedValue !== null) {\r\n      const key = configKeys[i];\r\n      return { ...config, [key]: serializedValue };\r\n    }\r\n\r\n    return config;\r\n  }, {});\r\n}\r\n","export async function share(input) {\r\n  try {\r\n    navigator.share(await getShareData(input));\r\n  } catch (error) {\r\n    alert('Error: ' + error.message);\r\n  }\r\n}\r\n\r\nexport async function isShareSupported(input) {\r\n  if (!navigator.share) {\r\n    return false;\r\n  }\r\n\r\n  const shareData = await getShareData(input);\r\n  return navigator.canShare(shareData);\r\n}\r\n\r\nasync function getShareData({ renderer, pattern }) {\r\n  const dataUrl = renderer.toDataURL();\r\n  const blob = await (await fetch(dataUrl)).blob();\r\n  const files = [\r\n    new File([blob], pattern.name + '.jpg', {\r\n      type: blob.type,\r\n      lastModified: new Date().getTime(),\r\n    }),\r\n  ];\r\n  return {\r\n    url: window.location.href,\r\n    files,\r\n    title: document.title,\r\n    text: 'String Art Studio - ' + pattern.name,\r\n  };\r\n}\r\n","const swFilename = 'service-worker.js';\r\n\r\nexport async function initServiceWorker() {\r\n  if (!navigator.serviceWorker || document.location.hostname === '127.0.0.1') {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const registration = await navigator.serviceWorker.register(swFilename);\r\n    registration.onupdatefound = () => {\r\n      const installingWorker = registration.installing;\r\n      if (installingWorker == null) {\r\n        return;\r\n      }\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state === 'installed') {\r\n          if (navigator.serviceWorker.controller) {\r\n            console.log(\r\n              'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n            );\r\n          } else {\r\n            console.log('Content is cached for offline use.');\r\n          }\r\n        }\r\n      };\r\n    };\r\n  } catch (error) {\r\n    console.error('Error during service worker registration:', error);\r\n  }\r\n}\r\n","import Renderer from './Renderer.js';\r\nimport { PI2 } from '../helpers/math_utils.js';\r\n\r\nconst SVG_NS = 'http://www.w3.org/2000/svg';\r\n\r\nexport default class SVGRenderer extends Renderer {\r\n  constructor(parentElement) {\r\n    super(parentElement);\r\n\r\n    this.svg = document.createElementNS(SVG_NS, 'svg');\r\n    this.svg.style.setProperty('display', 'block');\r\n    this.backgroundGroup = document.createElementNS(SVG_NS, 'g');\r\n    this.backgroundGroup.setAttribute('data-id', 'background');\r\n    this.linesGroup = document.createElementNS(SVG_NS, 'g');\r\n    this.linesGroup.setAttribute('data-id', 'lines');\r\n    this.nailsGroup = document.createElementNS(SVG_NS, 'g');\r\n    this.nailsGroup.setAttribute('data-id', 'nails');\r\n\r\n    this.nailsCirclesGroup = document.createElementNS(SVG_NS, 'g');\r\n    this.nailsCirclesGroup.setAttribute('data-id', 'nailsCircles');\r\n\r\n    this.nailsTextGroup = document.createElementNS(SVG_NS, 'g');\r\n    this.nailsTextGroup.setAttribute('data-id', 'nailsText');\r\n\r\n    this.nailsGroup.appendChild(this.nailsCirclesGroup);\r\n    this.nailsGroup.appendChild(this.nailsTextGroup);\r\n\r\n    this.svg.appendChild(this.backgroundGroup);\r\n    this.svg.appendChild(this.linesGroup);\r\n    this.svg.appendChild(this.nailsGroup);\r\n\r\n    this.svg.setAttribute('xmlns', SVG_NS);\r\n\r\n    parentElement.appendChild(this.svg);\r\n  }\r\n\r\n  get element() {\r\n    return this.svg;\r\n  }\r\n\r\n  reset() {\r\n    this.linesGroup.innerHTML = '';\r\n    this.nailsCirclesGroup.innerHTML = '';\r\n    this.nailsTextGroup.innerHTML = '';\r\n\r\n    const [width, height] = this.getSize().map(Math.trunc);\r\n    this.svg.setAttributeNS(SVG_NS, 'viewBox', `0 0 ${width} ${height}`);\r\n    this.svg.setAttributeNS(SVG_NS, 'width', width);\r\n    this.svg.setAttributeNS(SVG_NS, 'height', height);\r\n    this.svg.style.width = width + 'px';\r\n    this.svg.style.height = height + 'px';\r\n    this.currentColor = null;\r\n    this.lineWidth = null;\r\n  }\r\n\r\n  setColor(color) {\r\n    if (color !== this.currentColor) {\r\n      this.currentLineGroup = document.createElementNS(SVG_NS, 'g');\r\n      this.currentLineGroup.setAttribute('stroke', color);\r\n      this.currentLineGroup.setAttribute('stroke-width', this.lineWidth);\r\n      this.linesGroup.appendChild(this.currentLineGroup);\r\n      this.currentColor = color;\r\n    }\r\n  }\r\n\r\n  setLineWidth(width) {\r\n    this.lineWidth = width ?? '1';\r\n    this.linesGroup.setAttributeNS(SVG_NS, 'stroke-width', width ?? '1');\r\n    this.linesGroup.childNodes.forEach(group =>\r\n      group.setAttributeNS(SVG_NS, 'stroke-width', width ?? '1')\r\n    );\r\n  }\r\n\r\n  setBackground(color) {\r\n    if (color) {\r\n      if (!this.background) {\r\n        this.background = document.createElementNS(SVG_NS, 'rect');\r\n        this.background.setAttribute('width', '100%');\r\n        this.background.setAttribute('height', '100%');\r\n        this.backgroundGroup.appendChild(this.background);\r\n      }\r\n\r\n      this.background.setAttribute('fill', color);\r\n    } else {\r\n      this.background = null;\r\n      this.backgroundGroup.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  setSize(size) {\r\n    super.setSize(size);\r\n    const [width, height] = size.map(Math.trunc);\r\n\r\n    this.svg.setAttributeNS(SVG_NS, 'viewBox', `0 0 ${width} ${height}`);\r\n    this.svg.setAttributeNS(SVG_NS, 'width', width);\r\n    this.svg.setAttributeNS(SVG_NS, 'height', height);\r\n  }\r\n  renderLines(startPosition, ...positions) {\r\n    let previousPoint = startPosition;\r\n    const fragment = document.createDocumentFragment();\r\n\r\n    for (const position of positions) {\r\n      const line = document.createElementNS(SVG_NS, 'line');\r\n      line.setAttribute('x1', Math.trunc(previousPoint[0]));\r\n      line.setAttribute('y1', Math.trunc(previousPoint[1]));\r\n      line.setAttribute('x2', Math.trunc(position[0]));\r\n      line.setAttribute('y2', Math.trunc(position[1]));\r\n      previousPoint = position;\r\n\r\n      fragment.appendChild(line);\r\n    }\r\n\r\n    this.currentLineGroup.appendChild(fragment);\r\n  }\r\n\r\n  renderNails(nails, { color, fontSize, radius, renderNumbers, margin = 0 }) {\r\n    const centerX = this.getSize()[0] / 2;\r\n    this.nailsCirclesGroup.innerHTML = this.nailsTextGroup.innerHTML = '';\r\n    const circlesFragment = document.createDocumentFragment();\r\n    const textFragment = document.createDocumentFragment();\r\n    this.nailsGroup.setAttribute('fill', color);\r\n    const nailNumberOffset = radius + margin;\r\n\r\n    this.nailsTextGroup.style.fontSize = fontSize;\r\n    nails.forEach(({ point: [x, y], number }) => {\r\n      const circle = document.createElementNS(SVG_NS, 'circle');\r\n      circle.setAttribute('cx', x);\r\n      circle.setAttribute('cy', y);\r\n      circle.setAttribute('r', radius);\r\n      circlesFragment.appendChild(circle);\r\n\r\n      if (renderNumbers && number != null) {\r\n        const isRightAlign = x < centerX;\r\n\r\n        const numberPosition = [\r\n          isRightAlign ? x - nailNumberOffset : x + nailNumberOffset,\r\n          y,\r\n        ];\r\n\r\n        const textEl = document.createElementNS(SVG_NS, 'text');\r\n        textEl.innerHTML = String(number);\r\n        textEl.setAttribute('x', numberPosition[0]);\r\n        textEl.setAttribute('y', numberPosition[1]);\r\n        if (isRightAlign) {\r\n          textEl.setAttribute('text-anchor', 'end');\r\n        }\r\n        textFragment.appendChild(textEl);\r\n      }\r\n    });\r\n\r\n    this.nailsCirclesGroup.appendChild(circlesFragment);\r\n    this.nailsTextGroup.appendChild(textFragment);\r\n  }\r\n\r\n  clear() {\r\n    this.linesGroup.innerHTML = '';\r\n    this.nailsGroup.innerHTML = '';\r\n  }\r\n\r\n  toDataURL() {\r\n    return '';\r\n  }\r\n}\r\n","import SVGRenderer from '../renderers/SVGRenderer.js';\r\nimport { downloadFile } from './Download.js';\r\n\r\nexport function downloadPatternAsSVG(pattern, size) {\r\n  const parentEl = document.createElement('article');\r\n  parentEl.style.width = size[0] + 'px';\r\n  parentEl.style.height = size[1] + 'px';\r\n  document.body.appendChild(parentEl);\r\n  const svgRenderer = new SVGRenderer(parentEl);\r\n\r\n  const PatternConstructor = pattern.constructor;\r\n  const svgPattern = new PatternConstructor(svgRenderer);\r\n\r\n  svgPattern.setConfig(pattern.config);\r\n  svgPattern.draw();\r\n\r\n  var svgData = svgPattern.renderer.svg.outerHTML;\r\n  var svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n  var svgUrl = URL.createObjectURL(svgBlob);\r\n\r\n  downloadFile(svgUrl, pattern.name + '.svg');\r\n  document.body.removeChild(parentEl);\r\n}\r\n","export function downloadFile(dataUrl, fileName) {\r\n  const downloadLink = document.createElement('a');\r\n  downloadLink.href = dataUrl;\r\n  downloadLink.download = fileName;\r\n  document.body.appendChild(downloadLink);\r\n  downloadLink.click();\r\n  document.body.removeChild(downloadLink);\r\n}\r\n"],"names":[],"version":3,"file":"string_art.4841ef46.js.map","sourceRoot":"/__parcel_source_root/"}